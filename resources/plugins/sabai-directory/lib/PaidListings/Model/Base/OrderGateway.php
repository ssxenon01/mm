<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_PaidListings_Model_Base_OrderGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'paidlistings_order';
    }

    public function getFields()
    {
        return array('order_entity_bundle_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'order_entity_id' => SabaiFramework_Model::KEY_TYPE_INT, 'order_status' => SabaiFramework_Model::KEY_TYPE_INT, 'order_price' => SabaiFramework_Model::KEY_TYPE_DECIMAL, 'order_transaction_id' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'order_currency' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'order_gateway' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'order_gateway_data' => SabaiFramework_Model::KEY_TYPE_TEXT, 'order_plan_type' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'order_id' => SabaiFramework_Model::KEY_TYPE_INT, 'order_created' => SabaiFramework_Model::KEY_TYPE_INT, 'order_updated' => SabaiFramework_Model::KEY_TYPE_INT, 'order_plan_id' => SabaiFramework_Model::KEY_TYPE_INT, 'order_user_id' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'order_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %spaidlistings_order WHERE order_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %spaidlistings_order WHERE order_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$spaidlistings_order paidlistings_order WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['order_created'] = time();
        $values['order_updated'] = 0;
        return sprintf('INSERT INTO %spaidlistings_order(order_entity_bundle_name, order_entity_id, order_status, order_price, order_transaction_id, order_currency, order_gateway, order_gateway_data, order_plan_type, order_created, order_updated, order_plan_id, order_user_id) VALUES(%s, %d, %d, %F, %s, %s, %s, %s, %s, %d, %d, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['order_entity_bundle_name']), $values['order_entity_id'], $values['order_status'], $values['order_price'], $this->_db->escapeString($values['order_transaction_id']), $this->_db->escapeString($values['order_currency']), $this->_db->escapeString($values['order_gateway']), $this->_db->escapeString(serialize($values['order_gateway_data'])), $this->_db->escapeString($values['order_plan_type']), $values['order_created'], $values['order_updated'], $values['order_plan_id'], $values['order_user_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['order_updated'];
        $values['order_updated'] = time();
        return sprintf('UPDATE %spaidlistings_order SET order_entity_bundle_name = %s, order_entity_id = %d, order_status = %d, order_price = %F, order_transaction_id = %s, order_currency = %s, order_gateway = %s, order_gateway_data = %s, order_plan_type = %s, order_updated = %d, order_plan_id = %d, order_user_id = %d WHERE order_id = %d AND order_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['order_entity_bundle_name']), $values['order_entity_id'], $values['order_status'], $values['order_price'], $this->_db->escapeString($values['order_transaction_id']), $this->_db->escapeString($values['order_currency']), $this->_db->escapeString($values['order_gateway']), $this->_db->escapeString(serialize($values['order_gateway_data'])), $this->_db->escapeString($values['order_plan_type']), $values['order_updated'], $values['order_plan_id'], $values['order_user_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$spaidlistings_order WHERE order_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['order_updated'] = 'order_updated=' . time();
        return sprintf('UPDATE %spaidlistings_order paidlistings_order SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE paidlistings_order, table1, table2, table3, table4 FROM %1$spaidlistings_order paidlistings_order LEFT JOIN %1$spaidlistings_orderitem table1 ON paidlistings_order.order_id = table1.orderitem_order_id LEFT JOIN %1$spaidlistings_orderitemmeta table2 ON table1.orderitem_id = table2.orderitemmeta_orderitem_id LEFT JOIN %1$spaidlistings_orderlog table3 ON table1.orderitem_id = table3.orderlog_orderitem_id LEFT JOIN %1$spaidlistings_orderlog table4 ON paidlistings_order.order_id = table4.orderlog_order_id WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$spaidlistings_order paidlistings_order WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsert1($id, array $new)
    {
    }

    protected function _afterDelete1($id, array $old)
    {
    }

    protected function _afterUpdate1($id, array $new, array $old)
    {
    }

    protected function _beforeDelete1($id, array $old)
    {
        $this->_db->exec(sprintf('DELETE table0, table1, table2 FROM %1$spaidlistings_orderitem table0 LEFT JOIN %1$spaidlistings_orderitemmeta table1 ON table0.orderitem_id = table1.orderitemmeta_orderitem_id LEFT JOIN %1$spaidlistings_orderlog table2 ON table0.orderitem_id = table2.orderlog_orderitem_id WHERE table0.orderitem_order_id = %2$d', $this->_db->getResourcePrefix(), $id));
    }

    protected function _beforeDelete2($id, array $old)
    {
        $this->_db->exec(sprintf('DELETE table0 FROM %1$spaidlistings_orderlog table0 WHERE table0.orderlog_order_id = %2$d', $this->_db->getResourcePrefix(), $id));
    }

    protected function _afterInsert($id, array $new)
    {
        $this->_afterInsert1($id, $new);
    }

    protected function _afterUpdate($id, array $new, array $old)
    {
        $this->_afterUpdate1($id, $new, $old);
    }

    protected function _beforeDelete($id, array $old)
    {
        $this->_beforeDelete1($id, $old);
        $this->_beforeDelete2($id, $old);
    }

    protected function _afterDelete($id, array $old)
    {
        $this->_afterDelete1($id, $old);
    }
}