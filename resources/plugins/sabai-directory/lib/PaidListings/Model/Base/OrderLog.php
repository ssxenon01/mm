<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_PaidListings_Model_Base_OrderLog extends SabaiFramework_Model_Entity
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('OrderLog', $model);
        $this->_vars = array('orderlog_message' => null, 'orderlog_status' => 0, 'orderlog_is_error' => false, 'orderlog_id' => 0, 'orderlog_created' => 0, 'orderlog_updated' => 0, 'orderlog_order_id' => 0, 'orderlog_orderitem_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array('orderlog_id' => 0, 'orderlog_created' => 0, 'orderlog_updated' => 0) + $this->_vars;
    }

    public function __toString()
    {
        return 'OrderLog:' . $this->__get('id');
    }

    public function __get($name)
    {
        if ($name === 'message')
            return $this->_vars['orderlog_message'];
        elseif ($name === 'status')
            return $this->_vars['orderlog_status'];
        elseif ($name === 'is_error')
            return $this->_vars['orderlog_is_error'];
        elseif ($name === 'id')
            return $this->_vars['orderlog_id'];
        elseif ($name === 'created')
            return $this->_vars['orderlog_created'];
        elseif ($name === 'updated')
            return $this->_vars['orderlog_updated'];
        elseif ($name === 'order_id')
            return $this->_vars['orderlog_order_id'];
        elseif ($name === 'orderitem_id')
            return $this->_vars['orderlog_orderitem_id'];
        elseif ($name === 'Order')
            return $this->_fetchEntity('Order', 'order_id');
        elseif ($name === 'OrderItem')
            return $this->_fetchEntity('OrderItem', 'orderitem_id');
        else
            return $this->fetchObject($name);
    }

    public function __set($name, $value)
    {
        if ($name === 'message')
            $this->_setVar('orderlog_message', $value);
        elseif ($name === 'status')
            $this->_setVar('orderlog_status', $value);
        elseif ($name === 'is_error')
            $this->_setVar('orderlog_is_error', $value);
        elseif ($name === 'id')
            $this->_setVar('orderlog_id', $value);
        elseif ($name === 'order_id')
            $this->_assignEntityById('Order', $value, 'orderlog_order_id');
        elseif ($name === 'Order') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'orderlog_order_id');
            } else {
                $this->_assignEntityById('Order', $_value, 'orderlog_order_id');
            }
        }
        elseif ($name === 'orderitem_id')
            $this->_assignEntityById('OrderItem', $value, 'orderlog_orderitem_id');
        elseif ($name === 'OrderItem') {
            $_value = is_array($value) ? $value[0] : $value;
            if (is_object($_value)) {
                $this->_assignEntity($_value, 'orderlog_orderitem_id');
            } else {
                $this->_assignEntityById('OrderItem', $_value, 'orderlog_orderitem_id');
            }
        }
        else
            $this->assignObject($name, $value);
    }

    protected function _initVar($name, $value)
    {
        if ($name === 'orderlog_status')
            $this->_vars['orderlog_status'] = (int)$value;
        elseif ($name === 'orderlog_is_error')
            $this->_vars['orderlog_is_error'] = (bool)$value;
        elseif ($name === 'orderlog_id')
            $this->_vars['orderlog_id'] = (int)$value;
        elseif ($name === 'orderlog_created')
            $this->_vars['orderlog_created'] = (int)$value;
        elseif ($name === 'orderlog_updated')
            $this->_vars['orderlog_updated'] = (int)$value;
        elseif ($name === 'orderlog_order_id')
            $this->_vars['orderlog_order_id'] = (int)$value;
        elseif ($name === 'orderlog_orderitem_id')
            $this->_vars['orderlog_orderitem_id'] = (int)$value;
        else
            $this->_vars[$name] = $value;
    }
}

abstract class Sabai_Addon_PaidListings_Model_Base_OrderLogRepository extends SabaiFramework_Model_EntityRepository
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('OrderLog', $model);
    }

    public function fetchByOrder($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('orderlog_order_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByOrder($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Order', $id, $perpage, $sort, $order);
    }

    public function countByOrder($id)
    {
        return $this->_countByForeign('orderlog_order_id', $id);
    }

    public function fetchByOrderAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('orderlog_order_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByOrderAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Order', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByOrderAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('orderlog_order_id', $id, $criteria);
    }

    public function fetchByOrderItem($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('orderlog_orderitem_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByOrderItem($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('OrderItem', $id, $perpage, $sort, $order);
    }

    public function countByOrderItem($id)
    {
        return $this->_countByForeign('orderlog_orderitem_id', $id);
    }

    public function fetchByOrderItemAndCriteria($id, SabaiFramework_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('orderlog_orderitem_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByOrderItemAndCriteria($id, SabaiFramework_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('OrderItem', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByOrderItemAndCriteria($id, SabaiFramework_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('orderlog_orderitem_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(SabaiFramework_DB_Rowset $rs)
    {
        return new Sabai_Addon_PaidListings_Model_Base_OrderLogsByRowset($rs, $this->_model->create('OrderLog'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Sabai_Addon_PaidListings_Model_Base_OrderLogs($this->_model, $entities);
    }
}

class Sabai_Addon_PaidListings_Model_Base_OrderLogsByRowset extends SabaiFramework_Model_EntityCollection_Rowset
{
    public function __construct(SabaiFramework_DB_Rowset $rs, Sabai_Addon_PaidListings_Model_OrderLog $emptyEntity, SabaiFramework_Model $model)
    {
        parent::__construct('OrderLogs', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(SabaiFramework_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Sabai_Addon_PaidListings_Model_Base_OrderLogs extends SabaiFramework_Model_EntityCollection_Array
{
    public function __construct(SabaiFramework_Model $model, array $entities = array())
    {
        parent::__construct($model, 'OrderLogs', $entities);
    }
}