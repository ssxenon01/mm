!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
CDATACallback	Lexer.php	/^    protected static function CDATACallback($matches) {$/;"	f
EOF	Lexer/PH5P.php	/^    private function EOF() {$/;"	f
HTML5	Lexer/PH5P.php	/^class HTML5 {$/;"	c
HTML5TreeConstructer	Lexer/PH5P.php	/^class HTML5TreeConstructer {$/;"	c
HTMLPURIFIER_PREFIX	Bootstrap.php	/^    define('HTMLPURIFIER_PREFIX', realpath(dirname(__FILE__) . '\/..'));$/;"	d
HTMLPurifier_AttrCollections	AttrCollections.php	/^class HTMLPurifier_AttrCollections$/;"	c
HTMLPurifier_AttrDef	AttrDef.php	/^abstract class HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS	AttrDef/CSS.php	/^class HTMLPurifier_AttrDef_CSS extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_AlphaValue	AttrDef/CSS/AlphaValue.php	/^class HTMLPurifier_AttrDef_CSS_AlphaValue extends HTMLPurifier_AttrDef_CSS_Number$/;"	c
HTMLPurifier_AttrDef_CSS_Background	AttrDef/CSS/Background.php	/^class HTMLPurifier_AttrDef_CSS_Background extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_BackgroundPosition	AttrDef/CSS/BackgroundPosition.php	/^class HTMLPurifier_AttrDef_CSS_BackgroundPosition extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Border	AttrDef/CSS/Border.php	/^class HTMLPurifier_AttrDef_CSS_Border extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Color	AttrDef/CSS/Color.php	/^class HTMLPurifier_AttrDef_CSS_Color extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Composite	AttrDef/CSS/Composite.php	/^class HTMLPurifier_AttrDef_CSS_Composite extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_DenyElementDecorator	AttrDef/CSS/DenyElementDecorator.php	/^class HTMLPurifier_AttrDef_CSS_DenyElementDecorator extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Filter	AttrDef/CSS/Filter.php	/^class HTMLPurifier_AttrDef_CSS_Filter extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Font	AttrDef/CSS/Font.php	/^class HTMLPurifier_AttrDef_CSS_Font extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_FontFamily	AttrDef/CSS/FontFamily.php	/^class HTMLPurifier_AttrDef_CSS_FontFamily extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_ImportantDecorator	AttrDef/CSS/ImportantDecorator.php	/^class HTMLPurifier_AttrDef_CSS_ImportantDecorator extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Length	AttrDef/CSS/Length.php	/^class HTMLPurifier_AttrDef_CSS_Length extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_ListStyle	AttrDef/CSS/ListStyle.php	/^class HTMLPurifier_AttrDef_CSS_ListStyle extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Multiple	AttrDef/CSS/Multiple.php	/^class HTMLPurifier_AttrDef_CSS_Multiple extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Number	AttrDef/CSS/Number.php	/^class HTMLPurifier_AttrDef_CSS_Number extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_Percentage	AttrDef/CSS/Percentage.php	/^class HTMLPurifier_AttrDef_CSS_Percentage extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_TextDecoration	AttrDef/CSS/TextDecoration.php	/^class HTMLPurifier_AttrDef_CSS_TextDecoration extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_CSS_URI	AttrDef/CSS/URI.php	/^class HTMLPurifier_AttrDef_CSS_URI extends HTMLPurifier_AttrDef_URI$/;"	c
HTMLPurifier_AttrDef_Enum	AttrDef/Enum.php	/^class HTMLPurifier_AttrDef_Enum extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_Bool	AttrDef/HTML/Bool.php	/^class HTMLPurifier_AttrDef_HTML_Bool extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_Class	AttrDef/HTML/Class.php	/^class HTMLPurifier_AttrDef_HTML_Class extends HTMLPurifier_AttrDef_HTML_Nmtokens$/;"	c
HTMLPurifier_AttrDef_HTML_Color	AttrDef/HTML/Color.php	/^class HTMLPurifier_AttrDef_HTML_Color extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_FrameTarget	AttrDef/HTML/FrameTarget.php	/^class HTMLPurifier_AttrDef_HTML_FrameTarget extends HTMLPurifier_AttrDef_Enum$/;"	c
HTMLPurifier_AttrDef_HTML_ID	AttrDef/HTML/ID.php	/^class HTMLPurifier_AttrDef_HTML_ID extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_Length	AttrDef/HTML/Length.php	/^class HTMLPurifier_AttrDef_HTML_Length extends HTMLPurifier_AttrDef_HTML_Pixels$/;"	c
HTMLPurifier_AttrDef_HTML_LinkTypes	AttrDef/HTML/LinkTypes.php	/^class HTMLPurifier_AttrDef_HTML_LinkTypes extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_MultiLength	AttrDef/HTML/MultiLength.php	/^class HTMLPurifier_AttrDef_HTML_MultiLength extends HTMLPurifier_AttrDef_HTML_Length$/;"	c
HTMLPurifier_AttrDef_HTML_Nmtokens	AttrDef/HTML/Nmtokens.php	/^class HTMLPurifier_AttrDef_HTML_Nmtokens extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_HTML_Pixels	AttrDef/HTML/Pixels.php	/^class HTMLPurifier_AttrDef_HTML_Pixels extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_Integer	AttrDef/Integer.php	/^class HTMLPurifier_AttrDef_Integer extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_Lang	AttrDef/Lang.php	/^class HTMLPurifier_AttrDef_Lang extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_Switch	AttrDef/Switch.php	/^class HTMLPurifier_AttrDef_Switch$/;"	c
HTMLPurifier_AttrDef_Text	AttrDef/Text.php	/^class HTMLPurifier_AttrDef_Text extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_URI	AttrDef/URI.php	/^class HTMLPurifier_AttrDef_URI extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_URI_Email	AttrDef/URI/Email.php	/^abstract class HTMLPurifier_AttrDef_URI_Email extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_URI_Email_SimpleCheck	AttrDef/URI/Email/SimpleCheck.php	/^class HTMLPurifier_AttrDef_URI_Email_SimpleCheck extends HTMLPurifier_AttrDef_URI_Email$/;"	c
HTMLPurifier_AttrDef_URI_Host	AttrDef/URI/Host.php	/^class HTMLPurifier_AttrDef_URI_Host extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_URI_IPv4	AttrDef/URI/IPv4.php	/^class HTMLPurifier_AttrDef_URI_IPv4 extends HTMLPurifier_AttrDef$/;"	c
HTMLPurifier_AttrDef_URI_IPv6	AttrDef/URI/IPv6.php	/^class HTMLPurifier_AttrDef_URI_IPv6 extends HTMLPurifier_AttrDef_URI_IPv4$/;"	c
HTMLPurifier_AttrTransform	AttrTransform.php	/^abstract class HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_Background	AttrTransform/Background.php	/^class HTMLPurifier_AttrTransform_Background extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_BdoDir	AttrTransform/BdoDir.php	/^class HTMLPurifier_AttrTransform_BdoDir extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_BgColor	AttrTransform/BgColor.php	/^class HTMLPurifier_AttrTransform_BgColor extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_BoolToCSS	AttrTransform/BoolToCSS.php	/^class HTMLPurifier_AttrTransform_BoolToCSS extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_Border	AttrTransform/Border.php	/^class HTMLPurifier_AttrTransform_Border extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_EnumToCSS	AttrTransform/EnumToCSS.php	/^class HTMLPurifier_AttrTransform_EnumToCSS extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_ImgRequired	AttrTransform/ImgRequired.php	/^class HTMLPurifier_AttrTransform_ImgRequired extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_ImgSpace	AttrTransform/ImgSpace.php	/^class HTMLPurifier_AttrTransform_ImgSpace extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_Input	AttrTransform/Input.php	/^class HTMLPurifier_AttrTransform_Input extends HTMLPurifier_AttrTransform {$/;"	c
HTMLPurifier_AttrTransform_Lang	AttrTransform/Lang.php	/^class HTMLPurifier_AttrTransform_Lang extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_Length	AttrTransform/Length.php	/^class HTMLPurifier_AttrTransform_Length extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_Name	AttrTransform/Name.php	/^class HTMLPurifier_AttrTransform_Name extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_NameSync	AttrTransform/NameSync.php	/^class HTMLPurifier_AttrTransform_NameSync extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_SafeEmbed	AttrTransform/SafeEmbed.php	/^class HTMLPurifier_AttrTransform_SafeEmbed extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_SafeObject	AttrTransform/SafeObject.php	/^class HTMLPurifier_AttrTransform_SafeObject extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_SafeParam	AttrTransform/SafeParam.php	/^class HTMLPurifier_AttrTransform_SafeParam extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_ScriptRequired	AttrTransform/ScriptRequired.php	/^class HTMLPurifier_AttrTransform_ScriptRequired extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTransform_Textarea	AttrTransform/Textarea.php	/^class HTMLPurifier_AttrTransform_Textarea extends HTMLPurifier_AttrTransform$/;"	c
HTMLPurifier_AttrTypes	AttrTypes.php	/^class HTMLPurifier_AttrTypes$/;"	c
HTMLPurifier_AttrValidator	AttrValidator.php	/^class HTMLPurifier_AttrValidator$/;"	c
HTMLPurifier_Bootstrap	Bootstrap.php	/^class HTMLPurifier_Bootstrap$/;"	c
HTMLPurifier_CSSDefinition	CSSDefinition.php	/^class HTMLPurifier_CSSDefinition extends HTMLPurifier_Definition$/;"	c
HTMLPurifier_ChildDef	ChildDef.php	/^abstract class HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_ChildDef_Chameleon	ChildDef/Chameleon.php	/^class HTMLPurifier_ChildDef_Chameleon extends HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_ChildDef_Custom	ChildDef/Custom.php	/^class HTMLPurifier_ChildDef_Custom extends HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_ChildDef_Empty	ChildDef/Empty.php	/^class HTMLPurifier_ChildDef_Empty extends HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_ChildDef_Optional	ChildDef/Optional.php	/^class HTMLPurifier_ChildDef_Optional extends HTMLPurifier_ChildDef_Required$/;"	c
HTMLPurifier_ChildDef_Required	ChildDef/Required.php	/^class HTMLPurifier_ChildDef_Required extends HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_ChildDef_StrictBlockquote	ChildDef/StrictBlockquote.php	/^class HTMLPurifier_ChildDef_StrictBlockquote extends HTMLPurifier_ChildDef_Required$/;"	c
HTMLPurifier_ChildDef_Table	ChildDef/Table.php	/^class HTMLPurifier_ChildDef_Table extends HTMLPurifier_ChildDef$/;"	c
HTMLPurifier_Config	Config.php	/^class HTMLPurifier_Config$/;"	c
HTMLPurifier_ConfigSchema	ConfigSchema.php	/^class HTMLPurifier_ConfigSchema {$/;"	c
HTMLPurifier_ConfigSchema_Builder_ConfigSchema	ConfigSchema/Builder/ConfigSchema.php	/^class HTMLPurifier_ConfigSchema_Builder_ConfigSchema$/;"	c
HTMLPurifier_ConfigSchema_Builder_Xml	ConfigSchema/Builder/Xml.php	/^class HTMLPurifier_ConfigSchema_Builder_Xml extends XMLWriter$/;"	c
HTMLPurifier_ConfigSchema_Exception	ConfigSchema/Exception.php	/^class HTMLPurifier_ConfigSchema_Exception extends HTMLPurifier_Exception$/;"	c
HTMLPurifier_ConfigSchema_Interchange	ConfigSchema/Interchange.php	/^class HTMLPurifier_ConfigSchema_Interchange$/;"	c
HTMLPurifier_ConfigSchema_InterchangeBuilder	ConfigSchema/InterchangeBuilder.php	/^class HTMLPurifier_ConfigSchema_InterchangeBuilder$/;"	c
HTMLPurifier_ConfigSchema_Interchange_Directive	ConfigSchema/Interchange/Directive.php	/^class HTMLPurifier_ConfigSchema_Interchange_Directive$/;"	c
HTMLPurifier_ConfigSchema_Interchange_Id	ConfigSchema/Interchange/Id.php	/^class HTMLPurifier_ConfigSchema_Interchange_Id$/;"	c
HTMLPurifier_ConfigSchema_Validator	ConfigSchema/Validator.php	/^class HTMLPurifier_ConfigSchema_Validator$/;"	c
HTMLPurifier_ConfigSchema_ValidatorAtom	ConfigSchema/ValidatorAtom.php	/^class HTMLPurifier_ConfigSchema_ValidatorAtom$/;"	c
HTMLPurifier_ContentSets	ContentSets.php	/^class HTMLPurifier_ContentSets$/;"	c
HTMLPurifier_Context	Context.php	/^class HTMLPurifier_Context$/;"	c
HTMLPurifier_Definition	Definition.php	/^abstract class HTMLPurifier_Definition$/;"	c
HTMLPurifier_DefinitionCache	DefinitionCache.php	/^abstract class HTMLPurifier_DefinitionCache$/;"	c
HTMLPurifier_DefinitionCacheFactory	DefinitionCacheFactory.php	/^class HTMLPurifier_DefinitionCacheFactory$/;"	c
HTMLPurifier_DefinitionCache_Decorator	DefinitionCache/Decorator.php	/^class HTMLPurifier_DefinitionCache_Decorator extends HTMLPurifier_DefinitionCache$/;"	c
HTMLPurifier_DefinitionCache_Decorator_Cleanup	DefinitionCache/Decorator/Cleanup.php	/^class HTMLPurifier_DefinitionCache_Decorator_Cleanup extends$/;"	c
HTMLPurifier_DefinitionCache_Decorator_Memory	DefinitionCache/Decorator/Memory.php	/^class HTMLPurifier_DefinitionCache_Decorator_Memory extends$/;"	c
HTMLPurifier_DefinitionCache_Null	DefinitionCache/Null.php	/^class HTMLPurifier_DefinitionCache_Null extends HTMLPurifier_DefinitionCache$/;"	c
HTMLPurifier_DefinitionCache_Serializer	DefinitionCache/Serializer.php	/^class HTMLPurifier_DefinitionCache_Serializer extends$/;"	c
HTMLPurifier_Doctype	Doctype.php	/^class HTMLPurifier_Doctype$/;"	c
HTMLPurifier_DoctypeRegistry	DoctypeRegistry.php	/^class HTMLPurifier_DoctypeRegistry$/;"	c
HTMLPurifier_ElementDef	ElementDef.php	/^class HTMLPurifier_ElementDef$/;"	c
HTMLPurifier_Encoder	Encoder.php	/^class HTMLPurifier_Encoder$/;"	c
HTMLPurifier_EntityLookup	EntityLookup.php	/^class HTMLPurifier_EntityLookup {$/;"	c
HTMLPurifier_EntityParser	EntityParser.php	/^class HTMLPurifier_EntityParser$/;"	c
HTMLPurifier_ErrorCollector	ErrorCollector.php	/^class HTMLPurifier_ErrorCollector$/;"	c
HTMLPurifier_ErrorStruct	ErrorStruct.php	/^class HTMLPurifier_ErrorStruct$/;"	c
HTMLPurifier_Exception	Exception.php	/^class HTMLPurifier_Exception extends Exception$/;"	c
HTMLPurifier_Filter	Filter.php	/^class HTMLPurifier_Filter$/;"	c
HTMLPurifier_Filter_ExtractStyleBlocks	Filter/ExtractStyleBlocks.php	/^class HTMLPurifier_Filter_ExtractStyleBlocks extends HTMLPurifier_Filter$/;"	c
HTMLPurifier_Filter_YouTube	Filter/YouTube.php	/^class HTMLPurifier_Filter_YouTube extends HTMLPurifier_Filter$/;"	c
HTMLPurifier_Generator	Generator.php	/^class HTMLPurifier_Generator$/;"	c
HTMLPurifier_HTMLDefinition	HTMLDefinition.php	/^class HTMLPurifier_HTMLDefinition extends HTMLPurifier_Definition$/;"	c
HTMLPurifier_HTMLModule	HTMLModule.php	/^class HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModuleManager	HTMLModuleManager.php	/^class HTMLPurifier_HTMLModuleManager$/;"	c
HTMLPurifier_HTMLModule_Bdo	HTMLModule/Bdo.php	/^class HTMLPurifier_HTMLModule_Bdo extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_CommonAttributes	HTMLModule/CommonAttributes.php	/^class HTMLPurifier_HTMLModule_CommonAttributes extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Edit	HTMLModule/Edit.php	/^class HTMLPurifier_HTMLModule_Edit extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Forms	HTMLModule/Forms.php	/^class HTMLPurifier_HTMLModule_Forms extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Hypertext	HTMLModule/Hypertext.php	/^class HTMLPurifier_HTMLModule_Hypertext extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Image	HTMLModule/Image.php	/^class HTMLPurifier_HTMLModule_Image extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Legacy	HTMLModule/Legacy.php	/^class HTMLPurifier_HTMLModule_Legacy extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_List	HTMLModule/List.php	/^class HTMLPurifier_HTMLModule_List extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Name	HTMLModule/Name.php	/^class HTMLPurifier_HTMLModule_Name extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_NonXMLCommonAttributes	HTMLModule/NonXMLCommonAttributes.php	/^class HTMLPurifier_HTMLModule_NonXMLCommonAttributes extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Object	HTMLModule/Object.php	/^class HTMLPurifier_HTMLModule_Object extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Presentation	HTMLModule/Presentation.php	/^class HTMLPurifier_HTMLModule_Presentation extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Proprietary	HTMLModule/Proprietary.php	/^class HTMLPurifier_HTMLModule_Proprietary extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Ruby	HTMLModule/Ruby.php	/^class HTMLPurifier_HTMLModule_Ruby extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_SafeEmbed	HTMLModule/SafeEmbed.php	/^class HTMLPurifier_HTMLModule_SafeEmbed extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_SafeObject	HTMLModule/SafeObject.php	/^class HTMLPurifier_HTMLModule_SafeObject extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Scripting	HTMLModule/Scripting.php	/^class HTMLPurifier_HTMLModule_Scripting extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_StyleAttribute	HTMLModule/StyleAttribute.php	/^class HTMLPurifier_HTMLModule_StyleAttribute extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Tables	HTMLModule/Tables.php	/^class HTMLPurifier_HTMLModule_Tables extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Target	HTMLModule/Target.php	/^class HTMLPurifier_HTMLModule_Target extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Text	HTMLModule/Text.php	/^class HTMLPurifier_HTMLModule_Text extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Tidy	HTMLModule/Tidy.php	/^class HTMLPurifier_HTMLModule_Tidy extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_HTMLModule_Tidy_Name	HTMLModule/Tidy/Name.php	/^class HTMLPurifier_HTMLModule_Tidy_Name extends HTMLPurifier_HTMLModule_Tidy$/;"	c
HTMLPurifier_HTMLModule_Tidy_Proprietary	HTMLModule/Tidy/Proprietary.php	/^class HTMLPurifier_HTMLModule_Tidy_Proprietary extends HTMLPurifier_HTMLModule_Tidy$/;"	c
HTMLPurifier_HTMLModule_Tidy_Strict	HTMLModule/Tidy/Strict.php	/^class HTMLPurifier_HTMLModule_Tidy_Strict extends HTMLPurifier_HTMLModule_Tidy_XHTMLAndHTML4$/;"	c
HTMLPurifier_HTMLModule_Tidy_Transitional	HTMLModule/Tidy/Transitional.php	/^class HTMLPurifier_HTMLModule_Tidy_Transitional extends HTMLPurifier_HTMLModule_Tidy_XHTMLAndHTML4$/;"	c
HTMLPurifier_HTMLModule_Tidy_XHTML	HTMLModule/Tidy/XHTML.php	/^class HTMLPurifier_HTMLModule_Tidy_XHTML extends HTMLPurifier_HTMLModule_Tidy$/;"	c
HTMLPurifier_HTMLModule_Tidy_XHTMLAndHTML4	HTMLModule/Tidy/XHTMLAndHTML4.php	/^class HTMLPurifier_HTMLModule_Tidy_XHTMLAndHTML4 extends HTMLPurifier_HTMLModule_Tidy$/;"	c
HTMLPurifier_HTMLModule_XMLCommonAttributes	HTMLModule/XMLCommonAttributes.php	/^class HTMLPurifier_HTMLModule_XMLCommonAttributes extends HTMLPurifier_HTMLModule$/;"	c
HTMLPurifier_IDAccumulator	IDAccumulator.php	/^class HTMLPurifier_IDAccumulator$/;"	c
HTMLPurifier_Injector	Injector.php	/^abstract class HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_AutoParagraph	Injector/AutoParagraph.php	/^class HTMLPurifier_Injector_AutoParagraph extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_DisplayLinkURI	Injector/DisplayLinkURI.php	/^class HTMLPurifier_Injector_DisplayLinkURI extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_Linkify	Injector/Linkify.php	/^class HTMLPurifier_Injector_Linkify extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_PurifierLinkify	Injector/PurifierLinkify.php	/^class HTMLPurifier_Injector_PurifierLinkify extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_RemoveEmpty	Injector/RemoveEmpty.php	/^class HTMLPurifier_Injector_RemoveEmpty extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Injector_SafeObject	Injector/SafeObject.php	/^class HTMLPurifier_Injector_SafeObject extends HTMLPurifier_Injector$/;"	c
HTMLPurifier_Language	Language.php	/^class HTMLPurifier_Language$/;"	c
HTMLPurifier_LanguageFactory	LanguageFactory.php	/^class HTMLPurifier_LanguageFactory$/;"	c
HTMLPurifier_Language_en_x_test	Language/classes/en-x-test.php	/^class HTMLPurifier_Language_en_x_test extends HTMLPurifier_Language$/;"	c
HTMLPurifier_Length	Length.php	/^class HTMLPurifier_Length$/;"	c
HTMLPurifier_Lexer	Lexer.php	/^class HTMLPurifier_Lexer$/;"	c
HTMLPurifier_Lexer_DOMLex	Lexer/DOMLex.php	/^class HTMLPurifier_Lexer_DOMLex extends HTMLPurifier_Lexer$/;"	c
HTMLPurifier_Lexer_DirectLex	Lexer/DirectLex.php	/^class HTMLPurifier_Lexer_DirectLex extends HTMLPurifier_Lexer$/;"	c
HTMLPurifier_Lexer_PEARSax3	Lexer/PEARSax3.php	/^class HTMLPurifier_Lexer_PEARSax3 extends HTMLPurifier_Lexer$/;"	c
HTMLPurifier_Lexer_PH5P	Lexer/PH5P.php	/^class HTMLPurifier_Lexer_PH5P extends HTMLPurifier_Lexer_DOMLex {$/;"	c
HTMLPurifier_PercentEncoder	PercentEncoder.php	/^class HTMLPurifier_PercentEncoder$/;"	c
HTMLPurifier_Printer	Printer.php	/^class HTMLPurifier_Printer$/;"	c
HTMLPurifier_Printer_CSSDefinition	Printer/CSSDefinition.php	/^class HTMLPurifier_Printer_CSSDefinition extends HTMLPurifier_Printer$/;"	c
HTMLPurifier_Printer_ConfigForm	Printer/ConfigForm.php	/^class HTMLPurifier_Printer_ConfigForm extends HTMLPurifier_Printer$/;"	c
HTMLPurifier_Printer_ConfigForm_NullDecorator	Printer/ConfigForm.php	/^class HTMLPurifier_Printer_ConfigForm_NullDecorator extends HTMLPurifier_Printer {$/;"	c
HTMLPurifier_Printer_ConfigForm_bool	Printer/ConfigForm.php	/^class HTMLPurifier_Printer_ConfigForm_bool extends HTMLPurifier_Printer {$/;"	c
HTMLPurifier_Printer_ConfigForm_default	Printer/ConfigForm.php	/^class HTMLPurifier_Printer_ConfigForm_default extends HTMLPurifier_Printer {$/;"	c
HTMLPurifier_Printer_HTMLDefinition	Printer/HTMLDefinition.php	/^class HTMLPurifier_Printer_HTMLDefinition extends HTMLPurifier_Printer$/;"	c
HTMLPurifier_PropertyList	PropertyList.php	/^class HTMLPurifier_PropertyList$/;"	c
HTMLPurifier_PropertyListIterator	PropertyListIterator.php	/^class HTMLPurifier_PropertyListIterator extends FilterIterator$/;"	c
HTMLPurifier_Strategy	Strategy.php	/^abstract class HTMLPurifier_Strategy$/;"	c
HTMLPurifier_Strategy_Composite	Strategy/Composite.php	/^abstract class HTMLPurifier_Strategy_Composite extends HTMLPurifier_Strategy$/;"	c
HTMLPurifier_Strategy_Core	Strategy/Core.php	/^class HTMLPurifier_Strategy_Core extends HTMLPurifier_Strategy_Composite$/;"	c
HTMLPurifier_Strategy_FixNesting	Strategy/FixNesting.php	/^class HTMLPurifier_Strategy_FixNesting extends HTMLPurifier_Strategy$/;"	c
HTMLPurifier_Strategy_MakeWellFormed	Strategy/MakeWellFormed.php	/^class HTMLPurifier_Strategy_MakeWellFormed extends HTMLPurifier_Strategy$/;"	c
HTMLPurifier_Strategy_RemoveForeignElements	Strategy/RemoveForeignElements.php	/^class HTMLPurifier_Strategy_RemoveForeignElements extends HTMLPurifier_Strategy$/;"	c
HTMLPurifier_Strategy_ValidateAttributes	Strategy/ValidateAttributes.php	/^class HTMLPurifier_Strategy_ValidateAttributes extends HTMLPurifier_Strategy$/;"	c
HTMLPurifier_StringHash	StringHash.php	/^class HTMLPurifier_StringHash extends ArrayObject$/;"	c
HTMLPurifier_StringHashParser	StringHashParser.php	/^class HTMLPurifier_StringHashParser$/;"	c
HTMLPurifier_TagTransform	TagTransform.php	/^abstract class HTMLPurifier_TagTransform$/;"	c
HTMLPurifier_TagTransform_Font	TagTransform/Font.php	/^class HTMLPurifier_TagTransform_Font extends HTMLPurifier_TagTransform$/;"	c
HTMLPurifier_TagTransform_Simple	TagTransform/Simple.php	/^class HTMLPurifier_TagTransform_Simple extends HTMLPurifier_TagTransform$/;"	c
HTMLPurifier_Token	Token.php	/^class HTMLPurifier_Token {$/;"	c
HTMLPurifier_TokenFactory	TokenFactory.php	/^class HTMLPurifier_TokenFactory$/;"	c
HTMLPurifier_Token_Comment	Token/Comment.php	/^class HTMLPurifier_Token_Comment extends HTMLPurifier_Token$/;"	c
HTMLPurifier_Token_Empty	Token/Empty.php	/^class HTMLPurifier_Token_Empty extends HTMLPurifier_Token_Tag$/;"	c
HTMLPurifier_Token_End	Token/End.php	/^class HTMLPurifier_Token_End extends HTMLPurifier_Token_Tag$/;"	c
HTMLPurifier_Token_Start	Token/Start.php	/^class HTMLPurifier_Token_Start extends HTMLPurifier_Token_Tag$/;"	c
HTMLPurifier_Token_Tag	Token/Tag.php	/^class HTMLPurifier_Token_Tag extends HTMLPurifier_Token$/;"	c
HTMLPurifier_Token_Text	Token/Text.php	/^class HTMLPurifier_Token_Text extends HTMLPurifier_Token$/;"	c
HTMLPurifier_URI	URI.php	/^class HTMLPurifier_URI$/;"	c
HTMLPurifier_URIDefinition	URIDefinition.php	/^class HTMLPurifier_URIDefinition extends HTMLPurifier_Definition$/;"	c
HTMLPurifier_URIFilter	URIFilter.php	/^abstract class HTMLPurifier_URIFilter$/;"	c
HTMLPurifier_URIFilter_DisableExternal	URIFilter/DisableExternal.php	/^class HTMLPurifier_URIFilter_DisableExternal extends HTMLPurifier_URIFilter$/;"	c
HTMLPurifier_URIFilter_DisableExternalResources	URIFilter/DisableExternalResources.php	/^class HTMLPurifier_URIFilter_DisableExternalResources extends HTMLPurifier_URIFilter_DisableExternal$/;"	c
HTMLPurifier_URIFilter_HostBlacklist	URIFilter/HostBlacklist.php	/^class HTMLPurifier_URIFilter_HostBlacklist extends HTMLPurifier_URIFilter$/;"	c
HTMLPurifier_URIFilter_MakeAbsolute	URIFilter/MakeAbsolute.php	/^class HTMLPurifier_URIFilter_MakeAbsolute extends HTMLPurifier_URIFilter$/;"	c
HTMLPurifier_URIFilter_Munge	URIFilter/Munge.php	/^class HTMLPurifier_URIFilter_Munge extends HTMLPurifier_URIFilter$/;"	c
HTMLPurifier_URIParser	URIParser.php	/^class HTMLPurifier_URIParser$/;"	c
HTMLPurifier_URIScheme	URIScheme.php	/^class HTMLPurifier_URIScheme$/;"	c
HTMLPurifier_URISchemeRegistry	URISchemeRegistry.php	/^class HTMLPurifier_URISchemeRegistry$/;"	c
HTMLPurifier_URIScheme_ftp	URIScheme/ftp.php	/^class HTMLPurifier_URIScheme_ftp extends HTMLPurifier_URIScheme {$/;"	c
HTMLPurifier_URIScheme_http	URIScheme/http.php	/^class HTMLPurifier_URIScheme_http extends HTMLPurifier_URIScheme {$/;"	c
HTMLPurifier_URIScheme_https	URIScheme/https.php	/^class HTMLPurifier_URIScheme_https extends HTMLPurifier_URIScheme_http {$/;"	c
HTMLPurifier_URIScheme_mailto	URIScheme/mailto.php	/^class HTMLPurifier_URIScheme_mailto extends HTMLPurifier_URIScheme {$/;"	c
HTMLPurifier_URIScheme_news	URIScheme/news.php	/^class HTMLPurifier_URIScheme_news extends HTMLPurifier_URIScheme {$/;"	c
HTMLPurifier_URIScheme_nntp	URIScheme/nntp.php	/^class HTMLPurifier_URIScheme_nntp extends HTMLPurifier_URIScheme {$/;"	c
HTMLPurifier_UnitConverter	UnitConverter.php	/^class HTMLPurifier_UnitConverter$/;"	c
HTMLPurifier_VarParser	VarParser.php	/^class HTMLPurifier_VarParser$/;"	c
HTMLPurifier_VarParserException	VarParserException.php	/^class HTMLPurifier_VarParserException extends HTMLPurifier_Exception$/;"	c
HTMLPurifier_VarParser_Flexible	VarParser/Flexible.php	/^class HTMLPurifier_VarParser_Flexible extends HTMLPurifier_VarParser$/;"	c
HTMLPurifier_VarParser_Native	VarParser/Native.php	/^class HTMLPurifier_VarParser_Native extends HTMLPurifier_VarParser$/;"	c
PHP_EOL	Bootstrap.php	/^            define('PHP_EOL', "\\n");$/;"	d
PHP_EOL	Bootstrap.php	/^            define('PHP_EOL', "\\r");$/;"	d
PHP_EOL	Bootstrap.php	/^            define('PHP_EOL', "\\r\\n");$/;"	d
__construct	AttrCollections.php	/^    public function __construct($attr_types, $modules) {$/;"	f
__construct	AttrDef/CSS/AlphaValue.php	/^    public function __construct() {$/;"	f
__construct	AttrDef/CSS/Background.php	/^    public function __construct($config) {$/;"	f
__construct	AttrDef/CSS/BackgroundPosition.php	/^    public function __construct() {$/;"	f
__construct	AttrDef/CSS/Border.php	/^    public function __construct($config) {$/;"	f
__construct	AttrDef/CSS/Composite.php	/^    public function __construct($defs) {$/;"	f
__construct	AttrDef/CSS/DenyElementDecorator.php	/^    public function __construct($def, $element) {$/;"	f
__construct	AttrDef/CSS/Filter.php	/^    public function __construct() {$/;"	f
__construct	AttrDef/CSS/Font.php	/^    public function __construct($config) {$/;"	f
__construct	AttrDef/CSS/ImportantDecorator.php	/^    public function __construct($def, $allow = false) {$/;"	f
__construct	AttrDef/CSS/Length.php	/^    public function __construct($min = null, $max = null) {$/;"	f
__construct	AttrDef/CSS/ListStyle.php	/^    public function __construct($config) {$/;"	f
__construct	AttrDef/CSS/Multiple.php	/^    public function __construct($single, $max = 4) {$/;"	f
__construct	AttrDef/CSS/Number.php	/^    public function __construct($non_negative = false) {$/;"	f
__construct	AttrDef/CSS/Percentage.php	/^    public function __construct($non_negative = false) {$/;"	f
__construct	AttrDef/CSS/URI.php	/^    public function __construct() {$/;"	f
__construct	AttrDef/Enum.php	/^    public function __construct($/;"	f
__construct	AttrDef/HTML/Bool.php	/^    public function __construct($name = false) {$this->name = $name;}$/;"	f
__construct	AttrDef/HTML/FrameTarget.php	/^    public function __construct() {}$/;"	f
__construct	AttrDef/HTML/LinkTypes.php	/^    public function __construct($name) {$/;"	f
__construct	AttrDef/HTML/Pixels.php	/^    public function __construct($max = null) {$/;"	f
__construct	AttrDef/Integer.php	/^    public function __construct($/;"	f
__construct	AttrDef/Switch.php	/^    public function __construct($tag, $with_tag, $without_tag) {$/;"	f
__construct	AttrDef/URI.php	/^    public function __construct($embeds_resource = false) {$/;"	f
__construct	AttrDef/URI/Host.php	/^    public function __construct() {$/;"	f
__construct	AttrTransform/BoolToCSS.php	/^    public function __construct($attr, $css) {$/;"	f
__construct	AttrTransform/EnumToCSS.php	/^    public function __construct($attr, $enum_to_css, $case_sensitive = false) {$/;"	f
__construct	AttrTransform/ImgSpace.php	/^    public function __construct($attr) {$/;"	f
__construct	AttrTransform/Input.php	/^    public function __construct() {$/;"	f
__construct	AttrTransform/Length.php	/^    public function __construct($name, $css_name = null) {$/;"	f
__construct	AttrTransform/NameSync.php	/^    public function __construct() {$/;"	f
__construct	AttrTransform/SafeParam.php	/^    public function __construct() {$/;"	f
__construct	AttrTypes.php	/^    public function __construct() {$/;"	f
__construct	ChildDef/Chameleon.php	/^    public function __construct($inline, $block) {$/;"	f
__construct	ChildDef/Custom.php	/^    public function __construct($dtd_regex) {$/;"	f
__construct	ChildDef/Empty.php	/^    public function __construct() {}$/;"	f
__construct	ChildDef/Required.php	/^    public function __construct($elements) {$/;"	f
__construct	ChildDef/Table.php	/^    public function __construct() {}$/;"	f
__construct	Config.php	/^    public function __construct($definition, $parent = null) {$/;"	f
__construct	ConfigSchema.php	/^    public function __construct() {$/;"	f
__construct	ConfigSchema/Interchange/Id.php	/^    public function __construct($key) {$/;"	f
__construct	ConfigSchema/InterchangeBuilder.php	/^    public function __construct($varParser = null) {$/;"	f
__construct	ConfigSchema/Validator.php	/^    public function __construct() {$/;"	f
__construct	ConfigSchema/ValidatorAtom.php	/^    public function __construct($context, $obj, $member) {$/;"	f
__construct	ContentSets.php	/^    public function __construct($modules) {$/;"	f
__construct	DefinitionCache.php	/^    public function __construct($type) {$/;"	f
__construct	DefinitionCache/Decorator.php	/^    public function __construct() {}$/;"	f
__construct	Doctype.php	/^    public function __construct($name = null, $xml = true, $modules = array(),$/;"	f
__construct	Encoder.php	/^    private function __construct() {$/;"	f
__construct	ErrorCollector.php	/^    public function __construct($context) {$/;"	f
__construct	Filter/ExtractStyleBlocks.php	/^    public function __construct() {$/;"	f
__construct	Generator.php	/^    public function __construct($config, $context) {$/;"	f
__construct	HTMLDefinition.php	/^    public function __construct() {$/;"	f
__construct	HTMLModuleManager.php	/^    public function __construct() {$/;"	f
__construct	Language.php	/^    public function __construct($config, $context) {$/;"	f
__construct	Length.php	/^    public function __construct($n = '0', $u = false) {$/;"	f
__construct	Lexer.php	/^    public function __construct() {$/;"	f
__construct	Lexer/DOMLex.php	/^    public function __construct() {$/;"	f
__construct	Lexer/PH5P.php	/^    public function __construct($data) {$/;"	f
__construct	Lexer/PH5P.php	/^    public function __construct() {$/;"	f
__construct	PercentEncoder.php	/^    public function __construct($preserve = false) {$/;"	f
__construct	Printer.php	/^    public function __construct() {$/;"	f
__construct	Printer/ConfigForm.php	/^    public function __construct($/;"	f
__construct	Printer/ConfigForm.php	/^    public function __construct($obj) {$/;"	f
__construct	PropertyList.php	/^    public function __construct($parent = null) {$/;"	f
__construct	PropertyListIterator.php	/^    public function __construct(Iterator $iterator, $filter = null) {$/;"	f
__construct	Strategy/Composite.php	/^    abstract public function __construct();$/;"	f
__construct	Strategy/Core.php	/^    public function __construct() {$/;"	f
__construct	TagTransform/Simple.php	/^    public function __construct($transform_to, $style = null) {$/;"	f
__construct	Token/Comment.php	/^    public function __construct($data, $line = null, $col = null) {$/;"	f
__construct	Token/Tag.php	/^    public function __construct($name, $attr = array(), $line = null, $col = null) {$/;"	f
__construct	Token/Text.php	/^    public function __construct($data, $line = null, $col = null) {$/;"	f
__construct	TokenFactory.php	/^    public function __construct() {$/;"	f
__construct	URI.php	/^    public function __construct($scheme, $userinfo, $host, $port, $path, $query, $fragment) {$/;"	f
__construct	URIDefinition.php	/^    public function __construct() {$/;"	f
__construct	URIParser.php	/^    public function __construct() {$/;"	f
__construct	UnitConverter.php	/^    public function __construct($output_precision = 4, $internal_precision = 10, $force_no_bcmath = false) {$/;"	f
__get	Token.php	/^    public function __get($n) {$/;"	f
_checkNeedsP	Injector/AutoParagraph.php	/^    private function _checkNeedsP($current) {$/;"	f
_collapseStack	URIFilter/MakeAbsolute.php	/^    private function _collapseStack($stack) {$/;"	f
_compileRegex	ChildDef/Custom.php	/^    protected function _compileRegex() {$/;"	f
_findUnused	ConfigSchema/InterchangeBuilder.php	/^    protected function _findUnused($hash) {$/;"	f
_isInline	Injector/AutoParagraph.php	/^    private function _isInline($token) {$/;"	f
_listify	Config.php	/^    private function _listify($lookup) {$/;"	f
_loadRegex	AttrDef/URI/IPv4.php	/^    protected function _loadRegex() {$/;"	f
_loaded	Language.php	/^    public $_loaded = false;$/;"	v
_mergeAssocArray	ElementDef.php	/^    private function _mergeAssocArray(&$a1, $a2) {$/;"	f
_pLookAhead	Injector/AutoParagraph.php	/^    private function _pLookAhead() {$/;"	f
_pStart	Injector/AutoParagraph.php	/^    private function _pStart() {$/;"	f
_prepareDir	DefinitionCache/Serializer.php	/^    private function _prepareDir($config) {$/;"	f
_renderStruct	ErrorCollector.php	/^    private function _renderStruct(&$ret, $struct, $line = null, $col = null) {$/;"	f
_scriptFix	Generator.php	/^    private $_scriptFix = false;$/;"	v
_size_lookup	TagTransform/Font.php	/^    protected $_size_lookup = array($/;"	v
_special_dec2str	EntityParser.php	/^    protected $_special_dec2str =$/;"	v
_special_ent2dec	EntityParser.php	/^    protected $_special_ent2dec =$/;"	v
_special_entity2str	Lexer.php	/^    protected $_special_entity2str =$/;"	v
_splitText	Injector/AutoParagraph.php	/^    private function _splitText($data, &$result) {$/;"	f
_stacks	ErrorCollector.php	/^    protected $_stacks = array(array());$/;"	v
_storage	Context.php	/^    private $_storage = array();$/;"	v
_styleMatches	Filter/ExtractStyleBlocks.php	/^    private $_styleMatches = array();$/;"	v
_substituteEntitiesRegex	EntityParser.php	/^    protected $_substituteEntitiesRegex =$/;"	v
_testPermissions	DefinitionCache/Serializer.php	/^    private function _testPermissions($dir) {$/;"	f
_whitespace	Lexer/DirectLex.php	/^    protected $_whitespace = "\\x20\\x09\\x0D\\x0A";$/;"	v
_write	DefinitionCache/Serializer.php	/^    private function _write($file, $data) {$/;"	f
_xhtml	Generator.php	/^    private $_xhtml = true;$/;"	v
a	AttrDef/URI/Host.php	/^        $a   = '[a-z]';     \/\/ alpha$/;"	v
a	Config.php	/^    public function get($key, $a = null) {$/;"	v
a	Config.php	/^    public function set($key, $value, $a = null) {$/;"	v
a	HTMLModule/Hypertext.php	/^        $a = $this->addElement($/;"	v
aIP	AttrDef/URI/IPv6.php	/^                        $aIP = substr($aIP, 0, 0-strlen($find[0]));$/;"	v
aIP	AttrDef/URI/IPv6.php	/^                $aIP = $first;$/;"	v
aIP	AttrDef/URI/IPv6.php	/^                $aIP = explode(':', $aIP[0]);$/;"	v
aIP	AttrDef/URI/IPv6.php	/^                $aIP = substr($aIP, 0, 0-strlen($find[0]));$/;"	v
aIP	AttrDef/URI/IPv6.php	/^        $aIP = explode('::', $aIP);$/;"	v
a_formatting	Lexer/PH5P.php	/^    private $a_formatting  = array();$/;"	v
a_pos	Lexer/PH5P.php	/^                                $a_pos = array_search($node, $this->a_formatting, true);$/;"	v
accept	PropertyListIterator.php	/^    public function accept() {$/;"	f
accepts	Token/End.php	/^ * @warning This class accepts attributes even though end tags cannot. This$/;"	c
accessed	ConfigSchema/InterchangeBuilder.php	/^        $accessed = $hash->getAccessed();$/;"	v
accessed	StringHash.php	/^    protected $accessed = array();$/;"	v
activated_levels	HTMLModule/Tidy.php	/^        $activated_levels = array();$/;"	v
add	ConfigSchema.php	/^    public function add($key, $default, $type, $allow_null) {$/;"	f
add	ContentSets.php	/^                $add = array();$/;"	v
add	DefinitionCache.php	/^    abstract public function add($def, $config);$/;"	f
add	DefinitionCache/Decorator.php	/^    public function add($def, $config) {$/;"	f
add	DefinitionCache/Decorator/Cleanup.php	/^    public function add($def, $config) {$/;"	f
add	DefinitionCache/Decorator/Memory.php	/^    public function add($def, $config) {$/;"	f
add	DefinitionCache/Null.php	/^    public function add($def, $config) {$/;"	f
add	DefinitionCache/Serializer.php	/^    public function add($def, $config) {$/;"	f
add	IDAccumulator.php	/^    public function add($id) {$/;"	f
add	UnitConverter.php	/^    private function add($s1, $s2, $scale) {$/;"	f
addAlias	ConfigSchema.php	/^    public function addAlias($key, $new_key) {$/;"	f
addAllowedValues	ConfigSchema.php	/^    public function addAllowedValues($key, $allowed) {$/;"	f
addAttribute	HTMLDefinition.php	/^    public function addAttribute($element_name, $attr_name, $def) {$/;"	f
addBlankElement	HTMLDefinition.php	/^    public function addBlankElement($element_name) {$/;"	f
addBlankElement	HTMLModule.php	/^    public function addBlankElement($element) {$/;"	f
addDecorator	DefinitionCacheFactory.php	/^    public function addDecorator($decorator) {$/;"	f
addDirective	ConfigSchema/Interchange.php	/^    public function addDirective($directive) {$/;"	f
addElement	HTMLDefinition.php	/^    public function addElement($element_name, $type, $contents, $attr_collections, $attributes) {$/;"	f
addElement	HTMLModule.php	/^    public function addElement($element, $type, $contents, $attr_includes = array(), $attr = array()) {$/;"	f
addElementToContentSet	HTMLModule.php	/^    public function addElementToContentSet($element, $type) {$/;"	f
addError	ErrorStruct.php	/^    public function addError($severity, $message) {$/;"	f
addFilter	URIDefinition.php	/^    public function addFilter($filter, $config) {$/;"	f
addModule	HTMLModuleManager.php	/^    public function addModule($module) {$/;"	f
addParam	Injector/SafeObject.php	/^    protected $addParam = array($/;"	v
addPrefix	HTMLModuleManager.php	/^    public function addPrefix($prefix) {$/;"	f
addValueAliases	ConfigSchema.php	/^    public function addValueAliases($key, $aliases) {$/;"	f
add_fixes	HTMLModule/Tidy.php	/^        $add_fixes    = $config->get('HTML.TidyAdd');$/;"	v
address	HTMLModule/Legacy.php	/^        $address = $this->addBlankElement('address');$/;"	v
af_part1	Lexer/PH5P.php	/^                        $af_part1 = array_slice($this->a_formatting, 0, $bookmark - 1);$/;"	v
af_part2	Lexer/PH5P.php	/^                        $af_part2 = array_slice($this->a_formatting, $bookmark, count($this->a_formatting));$/;"	v
afterAttributeNameState	Lexer/PH5P.php	/^    private function afterAttributeNameState() {$/;"	f
afterBody	Lexer/PH5P.php	/^    private function afterBody($token) {$/;"	f
afterDoctypeNameState	Lexer/PH5P.php	/^    private function afterDoctypeNameState() {$/;"	f
afterFrameset	Lexer/PH5P.php	/^    private function afterFrameset($token) {$/;"	f
afterHead	Lexer/PH5P.php	/^    private function afterHead($token) {$/;"	f
alias	ConfigSchema.php	/^        foreach ($aliases as $alias => $real) {$/;"	v
alias	ConfigSchema/Validator.php	/^            foreach ($d->valueAliases as $alias => $real) {$/;"	v
alias	ConfigSchema/Validator.php	/^        foreach ($d->valueAliases as $alias => $real) {$/;"	v
aliases	ConfigSchema/Interchange/Directive.php	/^    public $aliases = array();$/;"	v
aliases	ConfigSchema/InterchangeBuilder.php	/^            $aliases = preg_split('\/\\s*,\\s*\/', $raw_aliases);$/;"	v
aliases	Doctype.php	/^    public $aliases = array();$/;"	v
aliases	DoctypeRegistry.php	/^        if (!is_array($aliases)) $aliases = array($aliases);$/;"	v
align	HTMLModule/Legacy.php	/^        $align = 'Enum#left,right,center,justify';$/;"	v
align_lookup	HTMLModule/Tidy/XHTMLAndHTML4.php	/^            $align_lookup = array();$/;"	v
align_values	HTMLModule/Tidy/XHTMLAndHTML4.php	/^            $align_values = array('left', 'right', 'center', 'justify');$/;"	v
all	Printer.php	/^        $all = $config->getAll();$/;"	v
all	Printer/ConfigForm.php	/^        $all = array();$/;"	v
all_whitespace	ChildDef/Required.php	/^            $all_whitespace = false; \/\/ phew, we're not talking about whitespace$/;"	v
all_whitespace	ChildDef/Required.php	/^        $all_whitespace = true;$/;"	v
allow	AttrDef/CSS/ImportantDecorator.php	/^    public function __construct($def, $allow = false) {$/;"	v
allow_empty	ChildDef/Custom.php	/^    public $allow_empty = false;$/;"	v
allow_empty	ChildDef/Empty.php	/^    public $allow_empty = true;$/;"	v
allow_empty	ChildDef/Optional.php	/^    public $allow_empty = true;$/;"	v
allow_empty	ChildDef/Required.php	/^    public $allow_empty = false;$/;"	v
allow_empty	ChildDef/StrictBlockquote.php	/^    public $allow_empty = true;$/;"	v
allow_empty	ChildDef/Table.php	/^    public $allow_empty = false;$/;"	v
allow_important	CSSDefinition.php	/^        $allow_important = $config->get('CSS.AllowImportant');$/;"	v
allow_null	Config.php	/^            $allow_null = isset($def->allow_null);$/;"	v
allow_null	Config.php	/^            $allow_null = true;$/;"	v
allow_null	Printer/ConfigForm.php	/^                    $allow_null = $def < 0;$/;"	v
allow_null	Printer/ConfigForm.php	/^                    $allow_null = isset($def->allow_null);$/;"	v
allow_null	VarParser.php	/^    final public function parse($var, $type, $allow_null = false) {$/;"	v
allowed	AttrDef/HTML/Class.php	/^        $allowed = $config->get('Attr.AllowedClasses');$/;"	v
allowed	AttrDef/HTML/LinkTypes.php	/^        $allowed = $config->get('Attr.' . $this->name);$/;"	v
allowed	Config.php	/^             if (is_string($allowed)) $allowed = array($allowed);$/;"	v
allowed	Config.php	/^        $allowed = HTMLPurifier_Config::getAllowedDirectivesForForm($allowed, $schema);$/;"	v
allowed	HTMLDefinition.php	/^            $allowed = $config->get('HTML.Allowed');$/;"	v
allowed	Printer/ConfigForm.php	/^        $allowed = HTMLPurifier_Config::getAllowedDirectivesForForm($allowed, $config->def);$/;"	v
allowed	Printer/ConfigForm.php	/^    public function render($config, $allowed = true, $render_controls = true) {$/;"	v
allowedParam	Injector/SafeObject.php	/^    protected $allowedParam = array($/;"	v
allowedUnits	Length.php	/^    protected static $allowedUnits = array($/;"	v
allowed_attributes	CSSDefinition.php	/^        $allowed_attributes = $config->get('CSS.AllowedProperties');$/;"	v
allowed_attributes	HTMLDefinition.php	/^        $allowed_attributes = $config->get('HTML.AllowedAttributes'); \/\/ retrieve early$/;"	v
allowed_attributes_mutable	HTMLDefinition.php	/^        $allowed_attributes_mutable = $allowed_attributes; \/\/ by copy!$/;"	v
allowed_directives	Config.php	/^             $allowed_directives = array();$/;"	v
allowed_elements	HTMLDefinition.php	/^        $allowed_elements = $config->get('HTML.AllowedElements');$/;"	v
allowed_ns	Config.php	/^             $allowed_ns = array();$/;"	v
allowed_schemes	URISchemeRegistry.php	/^        $allowed_schemes = $config->get('URI.AllowedSchemes');$/;"	v
allowed_values	AttrDef/CSS/TextDecoration.php	/^        static $allowed_values = array($/;"	v
allowsElement	Injector.php	/^    public function allowsElement($name) {$/;"	f
also	Injector.php	/^     * the injector. This function also checks if the HTML environment$/;"	f
alt	AttrTransform/ImgRequired.php	/^                $alt = $config->get('Attr.DefaultImageAlt');$/;"	v
an	AttrDef/URI/Host.php	/^        $an  = '[a-z0-9]';  \/\/ alphanum$/;"	v
and	AttrDef/URI/Host.php	/^        $and = '[a-z0-9-]'; \/\/ alphanum | "-"$/;"	v
and	URISchemeRegistry.php	/^     * @note Pass a registry object $prototype with a compatible interface and$/;"	i
anon	DoctypeRegistry.php	/^            $anon = new HTMLPurifier_Doctype($doctype);$/;"	v
append	Lexer/PH5P.php	/^    private function insertElement($token, $append = true, $check = false) {$/;"	v
appendToRealParent	Lexer/PH5P.php	/^    private function appendToRealParent($node) {$/;"	f
args	ErrorCollector.php	/^            $args = func_get_args();$/;"	v
args	ErrorCollector.php	/^        $args = array();$/;"	v
args	Language.php	/^    public function formatMessage($key, $args = array()) {$/;"	v
armor	Token.php	/^    public $armor = array();$/;"	v
armorUrl	Filter/YouTube.php	/^    protected function armorUrl($url) {$/;"	f
array	Config.php	/^        $array = parse_ini_file($filename, true);$/;"	v
array	Config.php	/^        if ($index !== false) $array = (isset($array[$index]) && is_array($array[$index])) ? $array[$index] : array();$/;"	v
array	ContentSets.php	/^        $array = explode('|', str_replace(' ', '', $string));$/;"	v
array	Lexer/DOMLex.php	/^        $array = array();$/;"	v
array	Lexer/DirectLex.php	/^        $array  = array(); \/\/ return assoc array of attributes$/;"	v
array	Lexer/DirectLex.php	/^        $array = array(); \/\/ result array$/;"	v
array	Printer/ConfigForm.php	/^                    $array = $value;$/;"	v
as	Lexer.php	/^     * You should be able to treat the output of this function as$/;"	f
ascii_fix	Encoder.php	/^            $ascii_fix = HTMLPurifier_Encoder::testEncodingSupportsASCII($encoding);$/;"	v
assertAlnum	ConfigSchema/ValidatorAtom.php	/^    public function assertAlnum() {$/;"	f
assertIsArray	ConfigSchema/ValidatorAtom.php	/^    public function assertIsArray() {$/;"	f
assertIsBool	ConfigSchema/ValidatorAtom.php	/^    public function assertIsBool() {$/;"	f
assertIsLookup	ConfigSchema/ValidatorAtom.php	/^    public function assertIsLookup() {$/;"	f
assertIsString	ConfigSchema/ValidatorAtom.php	/^    public function assertIsString() {$/;"	f
assertNotEmpty	ConfigSchema/ValidatorAtom.php	/^    public function assertNotEmpty() {$/;"	f
assertNotNull	ConfigSchema/ValidatorAtom.php	/^    public function assertNotNull() {$/;"	f
associated	Language/messages/en-x-testmini.php	/^\/\/ this language file has no class associated with it$/;"	c
at	Encoder.php	/^     * @note Based on Feyd's function at$/;"	f
attr	AttrValidator.php	/^            $attr = $transform->transform($o = $attr, $config, $context);$/;"	v
attr	AttrValidator.php	/^        $attr = $token->attr;$/;"	v
attr	ElementDef.php	/^    public $attr = array();$/;"	v
attr	ErrorCollector.php	/^        $attr  = $this->context->get('CurrentAttr', true);$/;"	v
attr	Generator.php	/^            $attr = $this->generateAttributes($token->attr, $token->name);$/;"	v
attr	HTMLDefinition.php	/^                $attr = false;$/;"	v
attr	HTMLDefinition.php	/^                foreach ($info->attr as $attr => $x) {$/;"	v
attr	HTMLDefinition.php	/^            $attr = explode('|', $attr);$/;"	v
attr	HTMLDefinition.php	/^            $attr = substr($attr, 0, strlen($attr) - 1); \/\/ remove trailing ]$/;"	v
attr	HTMLDefinition.php	/^            foreach ($info->attr as $attr => $x) {$/;"	v
attr	HTMLDefinition.php	/^            foreach ($this->info_global_attr as $attr => $x) {$/;"	v
attr	HTMLModule/Edit.php	/^        $attr = array($/;"	v
attr	HTMLModule/Tidy.php	/^                    $attr = $params['attr'];$/;"	v
attr	Lexer/DOMLex.php	/^        $attr = $node->hasAttributes() ?$/;"	v
attr	Lexer/DirectLex.php	/^                    $attr = $this->parseAttributeString($/;"	v
attr	Lexer/DirectLex.php	/^                    $attr = array();$/;"	v
attr	Lexer/PH5P.php	/^                        $attr = $token['attr'];$/;"	v
attr	Printer.php	/^    protected function element($tag, $contents, $attr = array(), $escape = true) {$/;"	v
attr	Printer.php	/^    protected function elementEmpty($tag, $attr = array()) {$/;"	v
attr	Printer.php	/^    protected function start($tag, $attr = array()) {$/;"	v
attr	Printer/ConfigForm.php	/^                $attr = array('for' => "{$this->name}:$ns.$directive");$/;"	v
attr	Printer/ConfigForm.php	/^                $attr = array();$/;"	v
attr	Printer/ConfigForm.php	/^        $attr = array($/;"	v
attr	Printer/HTMLDefinition.php	/^            $attr = array();$/;"	v
attr	TagTransform/Font.php	/^        $attr = $tag->attr;$/;"	v
attr	Token/Tag.php	/^    public $attr = array();$/;"	v
attr	Token/Tag.php	/^    public function __construct($name, $attr = array(), $line = null, $col = null) {$/;"	v
attr	TokenFactory.php	/^    public function createEmpty($name, $attr = array()) {$/;"	v
attr	TokenFactory.php	/^    public function createStart($name, $attr = array()) {$/;"	v
attr_collections	HTMLModule.php	/^    public $attr_collections = array();$/;"	v
attr_collections	HTMLModule/Bdo.php	/^    public $attr_collections = array($/;"	v
attr_collections	HTMLModule/CommonAttributes.php	/^    public $attr_collections = array($/;"	v
attr_collections	HTMLModule/NonXMLCommonAttributes.php	/^    public $attr_collections = array($/;"	v
attr_collections	HTMLModule/StyleAttribute.php	/^    public $attr_collections = array($/;"	v
attr_collections	HTMLModule/XMLCommonAttributes.php	/^    public $attr_collections = array($/;"	v
attr_i	AttrCollections.php	/^                foreach ($coll as $attr_i => $attr) {$/;"	v
attr_includes	HTMLModule.php	/^            else $attr_includes = array($attr_includes);$/;"	v
attr_includes	HTMLModule.php	/^            if (empty($attr_includes)) $attr_includes = array();$/;"	v
attr_includes	HTMLModule.php	/^    public function addElement($element, $type, $contents, $attr_includes = array(), $attr = array()) {$/;"	v
attr_key	AttrValidator.php	/^        $attr_key = false;$/;"	v
attr_key	AttrValidator.php	/^        foreach ($attr as $attr_key => $value) {$/;"	v
attr_name	HTMLModuleManager.php	/^        foreach ($def->attr as $attr_name => $attr_def) {$/;"	v
attr_transform_post	ElementDef.php	/^    public $attr_transform_post = array();$/;"	v
attr_transform_pre	ElementDef.php	/^    public $attr_transform_pre = array();$/;"	v
attr_validator	Strategy/RemoveForeignElements.php	/^        $attr_validator = new HTMLPurifier_AttrValidator();$/;"	v
attribute	AttrDef/HTML/Class.php	/^ * Implements special behavior for class attribute (normally NMTOKENS)$/;"	c
attribute	HTMLDefinition.php	/^                            $attribute = htmlspecialchars($bits[1]);$/;"	v
attribute	HTMLDefinition.php	/^                        $attribute = htmlspecialchars($bits[0]);$/;"	v
attributeNameState	Lexer/PH5P.php	/^    private function attributeNameState() {$/;"	f
attributeValueDoubleQuotedState	Lexer/PH5P.php	/^    private function attributeValueDoubleQuotedState() {$/;"	f
attributeValueSingleQuotedState	Lexer/PH5P.php	/^    private function attributeValueSingleQuotedState() {$/;"	f
attributeValueUnquotedState	Lexer/PH5P.php	/^    private function attributeValueUnquotedState() {$/;"	f
attribute_string	Lexer/DirectLex.php	/^                $attribute_string =$/;"	v
attributes	HTMLDefinition.php	/^        $attributes = array();$/;"	v
authority	URI.php	/^            $authority = '';$/;"	v
authority	URI.php	/^        $authority = null;$/;"	v
authority	URIParser.php	/^        $authority  = !empty($matches[3]) ? $matches[4] : null;$/;"	v
autoFinalize	Config.php	/^    public $autoFinalize = true;$/;"	v
autoFinalize	Config.php	/^    public function autoFinalize() {$/;"	f
autoclose	ElementDef.php	/^    public $autoclose = array();$/;"	v
autoclose	Strategy/MakeWellFormed.php	/^                        $autoclose = !isset($elements[$token->name]);$/;"	v
autoclose	Strategy/MakeWellFormed.php	/^                        $autoclose = false;$/;"	v
autoload	Bootstrap.php	/^        $autoload = array('HTMLPurifier_Bootstrap', 'autoload');$/;"	v
autoload	Bootstrap.php	/^    public static function autoload($class) {$/;"	f
b	HTMLModule/Presentation.php	/^        $b = $this->addElement('b',      'Inline', 'Inline', 'Common');$/;"	v
background	AttrTransform/Background.php	/^        $background = $this->confiscateAttr($attr, 'background');$/;"	v
backtrace	Config.php	/^        $backtrace = debug_backtrace();$/;"	v
backward	Injector.php	/^    protected function backward(&$i, &$current) {$/;"	f
base	DefinitionCache/Serializer.php	/^            $base = $this->generateBaseDirectoryPath($config);$/;"	v
base	DefinitionCache/Serializer.php	/^        $base = $config->get('Cache.SerializerPath');$/;"	v
base	DefinitionCache/Serializer.php	/^        $base = $this->generateBaseDirectoryPath($config);$/;"	v
base	DefinitionCache/Serializer.php	/^        $base = is_null($base) ? HTMLPURIFIER_PREFIX . '\/HTMLPurifier\/DefinitionCache\/Serializer' : $base;$/;"	v
basePathStack	URIFilter/MakeAbsolute.php	/^    protected $basePathStack = array();$/;"	v
base_uri	URIDefinition.php	/^        $base_uri = $config->get('URI.Base');$/;"	v
based	AttrDef/URI/Email/SimpleCheck.php	/^ * Primitive email validation class based on the regexp found at$/;"	c
batch	Config.php	/^            $batch = $this->getBatch($namespace);$/;"	v
bdo	HTMLModule/Bdo.php	/^        $bdo = $this->addElement($/;"	v
because	EntityParser.php	/^     * @notice We try to avoid calling this function because otherwise, it$/;"	f
beforeAttributeNameState	Lexer/PH5P.php	/^    private function beforeAttributeNameState() {$/;"	f
beforeAttributeValueState	Lexer/PH5P.php	/^    private function beforeAttributeValueState() {$/;"	f
beforeDoctypeNameState	Lexer/PH5P.php	/^    private function beforeDoctypeNameState() {$/;"	f
beforeHead	Lexer/PH5P.php	/^    private function beforeHead($token) {$/;"	f
bgcolor	AttrTransform/BgColor.php	/^        $bgcolor = $this->confiscateAttr($attr, 'bgcolor');$/;"	v
big	HTMLModule/Presentation.php	/^        $big = $this->addElement('big',    'Inline', 'Inline', 'Common');$/;"	v
bits	AttrDef/CSS/Background.php	/^        $bits = explode(' ', strtolower($string)); \/\/ bits to process$/;"	v
bits	AttrDef/CSS/BackgroundPosition.php	/^        $bits = explode(' ', $string);$/;"	v
bits	AttrDef/CSS/Border.php	/^        $bits = explode(' ', $string);$/;"	v
bits	AttrDef/CSS/Font.php	/^        $bits = explode(' ', $string); \/\/ bits to process$/;"	v
bits	AttrDef/CSS/ListStyle.php	/^        $bits = explode(' ', strtolower($string)); \/\/ bits to process$/;"	v
bits	HTMLDefinition.php	/^                $bits = preg_split('\/[.@]\/', $elattr, 2);$/;"	v
bits	Injector/Linkify.php	/^        $bits = preg_split('#((?:https?|ftp):\/\/[^\\s\\'"<>()]+)#S', $token->data, -1, PREG_SPLIT_DELIM_CAPTURE);$/;"	v
bits	Injector/PurifierLinkify.php	/^        $bits = preg_split('#%([a-z0-9]+\\.[a-z0-9]+)#Si', $token->data, -1, PREG_SPLIT_DELIM_CAPTURE);$/;"	v
blacklist	URIFilter/HostBlacklist.php	/^    protected $blacklist = array();$/;"	v
blacklisted_directives	Config.php	/^             $blacklisted_directives = array();$/;"	v
blk	AttrDef/URI/IPv6.php	/^        $blk = '(?:' . $hex . '{1,4})';$/;"	v
block_wrap_end	ChildDef/StrictBlockquote.php	/^        $block_wrap_end   = new HTMLPurifier_Token_End(  $def->info_block_wrapper);$/;"	v
block_wrap_start	ChildDef/StrictBlockquote.php	/^        $block_wrap_start = new HTMLPurifier_Token_Start($def->info_block_wrapper);$/;"	v
block_wrapper	HTMLDefinition.php	/^        $block_wrapper = $config->get('HTML.BlockWrapper');$/;"	v
blockquote	HTMLModule/Legacy.php	/^        $blockquote = $this->addBlankElement('blockquote');$/;"	v
bogusCommentState	Lexer/PH5P.php	/^    private function bogusCommentState() {$/;"	f
bogusDoctypeState	Lexer/PH5P.php	/^    private function bogusDoctypeState() {$/;"	f
bookmark	Lexer/PH5P.php	/^                                $bookmark = array_search($node, $this->a_formatting, true) + 1;$/;"	v
bookmark	Lexer/PH5P.php	/^                        $bookmark = $fe_af_pos;$/;"	v
border_color	CSSDefinition.php	/^        $border_color =$/;"	v
border_style	CSSDefinition.php	/^        $border_style =$/;"	v
border_width	AttrTransform/Border.php	/^        $border_width = $this->confiscateAttr($attr, 'border');$/;"	v
border_width	CSSDefinition.php	/^        $border_width =$/;"	v
br	HTMLModule/Legacy.php	/^        $br = $this->addBlankElement('br');$/;"	v
browsable	URIScheme.php	/^    public $browsable = false;$/;"	v
browsable	URIScheme/ftp.php	/^    public $browsable = true; \/\/ usually$/;"	v
browsable	URIScheme/http.php	/^    public $browsable = true;$/;"	v
browsable	URIScheme/mailto.php	/^    public $browsable = false;$/;"	v
browsable	URIScheme/news.php	/^    public $browsable = false;$/;"	v
browsable	URIScheme/nntp.php	/^    public $browsable = false;$/;"	v
build	ConfigSchema/Builder/ConfigSchema.php	/^    public function build($interchange) {$/;"	f
build	ConfigSchema/Builder/Xml.php	/^    public function build($interchange) {$/;"	f
build	ConfigSchema/InterchangeBuilder.php	/^    public function build($interchange, $hash) {$/;"	f
build	IDAccumulator.php	/^    public static function build($config, $context) {$/;"	f
buildDirective	ConfigSchema/Builder/Xml.php	/^    public function buildDirective($directive) {$/;"	f
buildDirective	ConfigSchema/InterchangeBuilder.php	/^    public function buildDirective($interchange, $hash) {$/;"	f
buildFile	ConfigSchema/InterchangeBuilder.php	/^    public function buildFile($interchange, $file) {$/;"	f
buildFromDirectory	ConfigSchema/InterchangeBuilder.php	/^    public static function buildFromDirectory($dir = null) {$/;"	f
builder	ConfigSchema/InterchangeBuilder.php	/^        $builder     = new HTMLPurifier_ConfigSchema_InterchangeBuilder();$/;"	v
button	HTMLModule/Forms.php	/^        $button = $this->addElement('button', 'Formctrl', 'Optional: #PCDATA | Heading | List | Block | Inline', 'Common', array($/;"	v
bypass	Encoder.php	/^    public static function testEncodingSupportsASCII($encoding, $bypass = false) {$/;"	v
bytesleft	Encoder.php	/^                $bytesleft = 0;$/;"	v
bytesleft	Encoder.php	/^                $bytesleft = 1;$/;"	v
bytesleft	Encoder.php	/^                $bytesleft = 2;$/;"	v
bytesleft	Encoder.php	/^                $bytesleft = 3;$/;"	v
bytesleft	Encoder.php	/^        $bytesleft = 0;$/;"	v
bytevalue	Encoder.php	/^            $bytevalue = ord( $str[$i] );$/;"	v
c	AttrDef/CSS/FontFamily.php	/^                for ($i = 0, $c = strlen($font); $i < $c; $i++) {$/;"	v
c	AttrDef/CSS/Length.php	/^            $c = $length->compareTo($this->max);$/;"	v
c	AttrDef/CSS/Length.php	/^            $c = $length->compareTo($this->min);$/;"	v
c	AttrDef/URI/IPv6.php	/^        $c = count($aIP);$/;"	v
c	Encoder.php	/^            $c = chr($i); \/\/ UTF-8 char$/;"	v
c	HTMLDefinition.php	/^                $c = count($bits);$/;"	v
c	HTMLModule/Tidy.php	/^        for ($i = 1, $c = count($this->levels); $i < $c; $i++) {$/;"	v
c	Injector/AutoParagraph.php	/^        $c = count($raw_paragraphs);$/;"	v
c	Injector/Linkify.php	/^        \/\/ $c = count$/;"	v
c	Injector/Linkify.php	/^        for ($i = 0, $c = count($bits), $l = false; $i < $c; $i++, $l = !$l) {$/;"	v
c	Injector/PurifierLinkify.php	/^        \/\/ $c = count$/;"	v
c	Injector/PurifierLinkify.php	/^        for ($i = 0, $c = count($bits), $l = false; $i < $c; $i++, $l = !$l) {$/;"	v
c	Injector/RemoveEmpty.php	/^        for ($i = $this->inputIndex + 1, $c = count($this->inputTokens); $i < $c; $i++) {$/;"	v
c	Language.php	/^        for ($i = 0, $c = count($array); $i < $c; $i++) {$/;"	v
c	PercentEncoder.php	/^            for ($i = 0, $c = strlen($preserve); $i < $c; $i++) {$/;"	v
c	PercentEncoder.php	/^        for ($i = 0, $c = strlen($string); $i < $c; $i++) {$/;"	v
c	Strategy/MakeWellFormed.php	/^            $c = count($skipped_tags);$/;"	v
c	Token.php	/^    public function position($l = null, $c = null) {$/;"	v
c	URI.php	/^            $c = strpos($this->path, '\/');$/;"	v
c	VarParser/Flexible.php	/^                            $c = explode(':', $keypair, 2);$/;"	v
cache	Config.php	/^        $cache = $factory->create($type, $this);$/;"	v
cache	DefinitionCacheFactory.php	/^            $cache = $new_cache;$/;"	v
cache	DefinitionCacheFactory.php	/^            $cache = new $class($type);$/;"	v
cache	DefinitionCacheFactory.php	/^            $cache = new HTMLPurifier_DefinitionCache_Serializer($type);$/;"	v
cache	LanguageFactory.php	/^            $cache = array();$/;"	v
cache	LanguageFactory.php	/^            $cache = compact($this->keys);$/;"	v
caches	DefinitionCacheFactory.php	/^    protected $caches = array('Serializer' => array());$/;"	v
call	Token/Tag.php	/^     * without having to use a function call <tt>is_a()<\/tt>.$/;"	f
callbackArmorCommentEntities	Lexer/DOMLex.php	/^    public function callbackArmorCommentEntities($matches) {$/;"	f
callbackUndoCommentSubst	Lexer/DOMLex.php	/^    public function callbackUndoCommentSubst($matches) {$/;"	f
calls	DefinitionCache.php	/^        return $config->version . ',' . \/\/ possibly replace with function calls$/;"	f
can	AttrDef/CSS/Multiple.php	/^ * lengths to be specified.  This class can take a vanilla border-width$/;"	c
caption	ChildDef/Table.php	/^                            $caption = $collection;$/;"	v
caption	ChildDef/Table.php	/^        $caption = false;$/;"	v
caption	HTMLModule/Legacy.php	/^        $caption = $this->addBlankElement('caption');$/;"	v
carryover	Strategy/MakeWellFormed.php	/^                        $carryover = true;$/;"	v
carryover	Strategy/MakeWellFormed.php	/^                    $carryover = false;$/;"	v
caseSensitive	AttrTransform/EnumToCSS.php	/^    protected $caseSensitive = false;$/;"	v
case_sensitive	AttrDef/Enum.php	/^    protected $case_sensitive = false; \/\/ values according to W3C spec$/;"	v
case_sensitive	AttrDef/HTML/FrameTarget.php	/^    protected $case_sensitive = false;$/;"	v
case_sensitive	AttrTransform/EnumToCSS.php	/^    public function __construct($attr, $enum_to_css, $case_sensitive = false) {$/;"	v
cat	Lexer/PH5P.php	/^                        $cat  = $this->getElementCategory($node->tagName);$/;"	v
category	Lexer/PH5P.php	/^                            $category = $this->getElementCategory($node);$/;"	v
category	Lexer/PH5P.php	/^                            $category = $this->getElementCategory($this->stack[$s]->nodeName);$/;"	v
caught	AttrDef/CSS/Background.php	/^        $caught = array();$/;"	v
caught	AttrDef/CSS/Font.php	/^        $caught = array(); \/\/ which stage 0 properties have we caught?$/;"	v
caught	AttrDef/CSS/ListStyle.php	/^        $caught = array();$/;"	v
cell_align	HTMLModule/Tables.php	/^        $cell_align = array($/;"	v
cell_col	HTMLModule/Tables.php	/^        $cell_col = array_merge($/;"	v
cell_t	HTMLModule/Tables.php	/^        $cell_t = array_merge($/;"	v
char	AttrDef/CSS/FontFamily.php	/^                            $char = HTMLPurifier_Encoder::unichr(hexdec($code));$/;"	v
char	Encoder.php	/^                        $char = '';$/;"	v
char	Encoder.php	/^                    $char = '';$/;"	v
char	Encoder.php	/^                    $char ='';$/;"	v
char	Encoder.php	/^        $char = '';$/;"	v
char	Lexer/DOMLex.php	/^            $char = '[^a-z!\\\/]';$/;"	v
char	Lexer/DirectLex.php	/^                $char = @$string[$cursor];$/;"	v
char	Lexer/DirectLex.php	/^                if ($char == '"' || $char == "'") {$/;"	v
char	Lexer/PH5P.php	/^                        $char = 0;$/;"	v
char	Lexer/PH5P.php	/^                        $char = 1;$/;"	v
char	Lexer/PH5P.php	/^                $char = $this->char();$/;"	v
char	Lexer/PH5P.php	/^            $char = $this->char();$/;"	v
char	Lexer/PH5P.php	/^            $char = substr($this->data, $this->char, $len);$/;"	v
char	Lexer/PH5P.php	/^        $char = $this->char();$/;"	v
char	Lexer/PH5P.php	/^        $char = $this->character($this->char);$/;"	v
char	Lexer/PH5P.php	/^        $char = (!$entity) ? '&' : $entity;$/;"	v
char	Lexer/PH5P.php	/^        $char = (!$entity)$/;"	v
char	Lexer/PH5P.php	/^    private function char() {$/;"	f
char_class	Lexer/PH5P.php	/^                        $char_class = '0-9';$/;"	v
char_class	Lexer/PH5P.php	/^                        $char_class = '0-9A-Fa-f';$/;"	v
character	Lexer/PH5P.php	/^    private function character($s, $l = 0) {$/;"	f
characters	Lexer/PH5P.php	/^    private function characters($char_class, $start) {$/;"	f
chars_gen_delims	URI.php	/^        $chars_gen_delims = ':\/?#[]@';$/;"	v
chars_pchar	URI.php	/^        $chars_pchar = $chars_sub_delims . ':@';$/;"	v
chars_sub_delims	URI.php	/^        $chars_sub_delims = '!$&\\'()*+,;=';$/;"	v
chatty	Config.php	/^    public $chatty = true;$/;"	v
checkDefType	DefinitionCache.php	/^    public function checkDefType($def) {$/;"	f
checkNeeded	Injector.php	/^    public function checkNeeded($config) {$/;"	f
checks	Injector.php	/^     * This function checks if the HTML environment$/;"	f
child	Lexer/PH5P.php	/^                            $child = $furthest_block->firstChild;$/;"	v
child_tokens	Strategy/FixNesting.php	/^            $child_tokens = array();$/;"	v
child_tokens	Strategy/FixNesting.php	/^            if ($result === true || $child_tokens === $result) {$/;"	v
children	ErrorStruct.php	/^    public $children = array();$/;"	v
chmod	DefinitionCache/Serializer.php	/^                $chmod = '775';$/;"	v
chmod	DefinitionCache/Serializer.php	/^                $chmod = '777';$/;"	v
chunks	HTMLDefinition.php	/^        $chunks = preg_split('\/(,|[\\n\\r]+)\/', $list);$/;"	v
class	AttrDef/HTML/Pixels.php	/^        $class = get_class($this);$/;"	v
class	DefinitionCacheFactory.php	/^            $class = "HTMLPurifier_DefinitionCache_Decorator_$decorator";$/;"	v
class	HTMLModuleManager.php	/^                    $class = "HTMLPurifier_Injector_$injector";$/;"	v
class	LanguageFactory.php	/^            $class = 'HTMLPurifier_Language_' . $pcode;$/;"	v
class	Printer.php	/^        $class = str_replace($prefix, '', get_class($obj));$/;"	v
class	URISchemeRegistry.php	/^        $class = 'HTMLPurifier_URIScheme_' . $scheme;$/;"	v
cleanCSS	Filter/ExtractStyleBlocks.php	/^    public function cleanCSS($css, $config, $context) {$/;"	f
cleanUTF8	Encoder.php	/^    public static function cleanUTF8($str, $force_php = false) {$/;"	f
cleanup	DefinitionCache.php	/^    abstract public function cleanup($config);$/;"	f
cleanup	DefinitionCache/Decorator.php	/^    public function cleanup($config) {$/;"	f
cleanup	DefinitionCache/Null.php	/^    public function cleanup($config) {$/;"	f
cleanup	DefinitionCache/Serializer.php	/^    public function cleanup($config) {$/;"	f
clear	Lexer/PH5P.php	/^        $clear = array('html', 'table');$/;"	v
clear	Lexer/PH5P.php	/^        $clear = array('tbody', 'tfoot', 'thead', 'html');$/;"	v
clear	Lexer/PH5P.php	/^        $clear = array('tr', 'html');$/;"	v
clearStackToTableContext	Lexer/PH5P.php	/^    private function clearStackToTableContext($elements) {$/;"	f
clearTheActiveFormattingElementsUpToTheLastMarker	Lexer/PH5P.php	/^    private function clearTheActiveFormattingElementsUpToTheLastMarker() {$/;"	f
clear_fix	Encoder.php	/^                $clear_fix = array();$/;"	v
clone	Lexer/PH5P.php	/^                                $clone = $node->cloneNode();$/;"	v
clone	Lexer/PH5P.php	/^                        $clone = $formatting_element->cloneNode();$/;"	v
clone	Lexer/PH5P.php	/^            $clone = $entry->cloneNode();$/;"	v
closeCell	Lexer/PH5P.php	/^    private function closeCell() {$/;"	f
closeHandler	Lexer/PEARSax3.php	/^    public function closeHandler(&$parser, $name) {$/;"	f
closeTagOpenState	Lexer/PH5P.php	/^    private function closeTagOpenState() {$/;"	f
code	AttrDef/CSS/FontFamily.php	/^                            $code = $font[$i];$/;"	v
code	Bootstrap.php	/^            $code = str_replace('_', '-', substr($class, 22));$/;"	v
code	EntityParser.php	/^            $code = $is_hex ? hexdec($matches[1]) : (int) $matches[2];$/;"	v
code	HTMLModule/Text.php	/^        $code = $this->addElement('code',    'Inline', 'Inline', 'Common');$/;"	v
code	Language.php	/^    public $code = 'en';$/;"	v
code	LanguageFactory.php	/^            $code = $this->validator->validate($/;"	v
code	LanguageFactory.php	/^            $code = $this->validator->validate($code, $config, $context);$/;"	v
code	LanguageFactory.php	/^        if ($code === false) $code = 'en'; \/\/ malformed code becomes English$/;"	v
code	LanguageFactory.php	/^    public function create($config, $context, $code = false) {$/;"	v
col	ErrorCollector.php	/^            foreach ($col_array as $col => $struct) {$/;"	v
col	ErrorCollector.php	/^        $col   = $token ? $token->col  : $this->context->get('CurrentCol',  true);$/;"	v
coll_i	AttrCollections.php	/^            foreach ($module->attr_collections as $coll_i => $coll) {$/;"	v
collect	Lexer/DOMLex.php	/^    protected function tokenizeDOM($node, &$tokens, $collect = false) {$/;"	v
collection	ChildDef/Table.php	/^                    $collection = array();$/;"	v
collection	ChildDef/Table.php	/^        $collection = array(); \/\/ collected nodes$/;"	v
color	AttrDef/CSS/Color.php	/^                $color = '#' . $color;$/;"	v
color	AttrDef/CSS/Color.php	/^            $color = "rgb($new_triad)";$/;"	v
color	AttrDef/CSS/Color.php	/^        $color = trim($color);$/;"	v
colors	AttrDef/CSS/Color.php	/^        if ($colors === null) $colors = $config->get('Core.ColorKeywords');$/;"	v
colors	AttrDef/CSS/Color.php	/^        static $colors = null;$/;"	v
colors	AttrDef/HTML/Color.php	/^        if ($colors === null) $colors = $config->get('Core.ColorKeywords');$/;"	v
colors	AttrDef/HTML/Color.php	/^        static $colors = null;$/;"	v
cols	ChildDef/Table.php	/^        $cols    = array();$/;"	v
cols	Printer/ConfigForm.php	/^    public $cols = 18;$/;"	v
comment	Lexer/DOMLex.php	/^            $comment = "\/<!--(.*?)(-->|\\z)\/is";$/;"	v
comment	Lexer/PH5P.php	/^            $comment = $this->dom->createComment($token['data']);$/;"	v
comment	Lexer/PH5P.php	/^        $comment = $this->dom->createComment($data);$/;"	v
commentDashState	Lexer/PH5P.php	/^    private function commentDashState() {$/;"	f
commentEndState	Lexer/PH5P.php	/^    private function commentEndState() {$/;"	f
commentState	Lexer/PH5P.php	/^    private function commentState() {$/;"	f
common	HTMLModuleManager.php	/^        $common = array($/;"	v
common_ancestor	Lexer/PH5P.php	/^                        $common_ancestor = $this->stack[$fe_s_pos - 1];$/;"	v
compare	DefinitionCache.php	/^        $compare = version_compare($version, $config->version);$/;"	v
compareTo	Length.php	/^    public function compareTo($l) {$/;"	f
compat	Bootstrap.php	/^            $compat = version_compare(PHP_VERSION, '5.1.2', '<=') &&$/;"	v
compress	Printer/ConfigForm.php	/^    protected $compress = false;$/;"	v
cond	Lexer/PH5P.php	/^                $cond = isset($entity);$/;"	v
cond	Lexer/PH5P.php	/^                $cond = strlen($e_name) > 0;$/;"	v
conf	URIDefinition.php	/^            $conf = $config->get('URI.' . $name);$/;"	v
config	Config.php	/^        $config = HTMLPurifier_Config::create($ret, $schema);$/;"	v
config	Config.php	/^        $config = new HTMLPurifier_Config($definition);$/;"	v
config	Printer/ConfigForm.php	/^            $config = $config[1];$/;"	v
config	URISchemeRegistry.php	/^        if (!$config) $config = HTMLPurifier_Config::createDefault();$/;"	v
configLookup	AttrDef/HTML/LinkTypes.php	/^        $configLookup = array($/;"	v
confiscateAttr	AttrTransform.php	/^    public function confiscateAttr(&$attr, $key) {$/;"	f
content	ChildDef/Table.php	/^        $content = array();$/;"	v
content_model	ContentSets.php	/^        $content_model = $def->content_model;$/;"	v
content_model	HTMLModule.php	/^        $content_model = trim($content_model);$/;"	v
content_model_type	HTMLModule.php	/^        $content_model_type = strtolower(trim($content_model_type));$/;"	v
content_sets	HTMLModule.php	/^    public $content_sets = array();$/;"	v
content_sets	HTMLModule/Forms.php	/^    public $content_sets = array($/;"	v
content_sets	HTMLModule/List.php	/^    public $content_sets = array('Flow' => 'List');$/;"	v
content_sets	HTMLModule/Scripting.php	/^    public $content_sets = array('Block' => 'script | noscript', 'Inline' => 'script | noscript');$/;"	v
content_sets	HTMLModule/Text.php	/^    public $content_sets = array($/;"	v
contents	HTMLModule/Edit.php	/^        $contents = 'Chameleon: #PCDATA | Inline ! #PCDATA | Flow';$/;"	v
context	ConfigSchema/Validator.php	/^    protected $context = array();$/;"	v
context	ErrorCollector.php	/^            $context = array_pop($context_stack);$/;"	v
context	Printer.php	/^        $context = new HTMLPurifier_Context();$/;"	v
context	Printer/HTMLDefinition.php	/^        $context = new HTMLPurifier_Context();$/;"	v
context_stack	ErrorCollector.php	/^        $context_stack = array(array());$/;"	v
convert	UnitConverter.php	/^    public function convert($length, $to_unit) {$/;"	f
convertFromUTF8	Encoder.php	/^    public static function convertFromUTF8($str, $config, $context) {$/;"	f
convertToASCIIDumbLossless	Encoder.php	/^    public static function convertToASCIIDumbLossless($str) {$/;"	f
convertToLookup	ContentSets.php	/^    protected function convertToLookup($string) {$/;"	f
convertToUTF8	Encoder.php	/^    public static function convertToUTF8($str, $config, $context) {$/;"	f
converter	Length.php	/^            $converter = new HTMLPurifier_UnitConverter();$/;"	v
copy	DefinitionCache/Decorator.php	/^    public function copy() {$/;"	f
copy	DefinitionCache/Decorator/Cleanup.php	/^    public function copy() {$/;"	f
copy	DefinitionCache/Decorator/Memory.php	/^    public function copy() {$/;"	f
could	AttrDef/CSS/TextDecoration.php	/^ * @note This class could be generalized into a version that acts sort of$/;"	c
cp	UnitConverter.php	/^        $cp = ($log < 0) ? $this->internalPrecision - $log : $this->internalPrecision; \/\/ internal precision$/;"	v
create	Config.php	/^    public static function create($config, $schema = null) {$/;"	f
create	DefinitionCacheFactory.php	/^    public function create($type, $config) {$/;"	f
create	ElementDef.php	/^    public static function create($content_model, $content_model_type, $attr) {$/;"	f
create	LanguageFactory.php	/^    public function create($config, $context, $code = false) {$/;"	f
create	Lexer.php	/^    public static function create($config) {$/;"	f
createComment	TokenFactory.php	/^    public function createComment($data) {$/;"	f
createDefault	Config.php	/^    public static function createDefault() {$/;"	f
createEmpty	TokenFactory.php	/^    public function createEmpty($name, $attr = array()) {$/;"	f
createEnd	TokenFactory.php	/^    public function createEnd($name) {$/;"	f
createStart	TokenFactory.php	/^    public function createStart($name, $attr = array()) {$/;"	f
createText	TokenFactory.php	/^    public function createText($data) {$/;"	f
css	AttrDef/CSS.php	/^        $css = $this->parseCDATA($css);$/;"	v
css	AttrTransform/ImgSpace.php	/^    protected $css = array($/;"	v
css	Filter/ExtractStyleBlocks.php	/^            $css = str_replace($/;"	v
css	Filter/ExtractStyleBlocks.php	/^            $css = substr($css, 0, -3);$/;"	v
css	Filter/ExtractStyleBlocks.php	/^            $css = substr($css, 4);$/;"	v
css	Filter/ExtractStyleBlocks.php	/^        $css = $this->_tidy->print->plain();$/;"	v
css	Filter/ExtractStyleBlocks.php	/^        $css = trim($css);$/;"	v
css_definition	Filter/ExtractStyleBlocks.php	/^        $css_definition = $config->getDefinition('CSS');$/;"	v
css_name	AttrTransform/Length.php	/^    public function __construct($name, $css_name = null) {$/;"	v
current	Injector.php	/^        $current = $this->inputTokens[$i];$/;"	v
current	Injector.php	/^    protected function current(&$i, &$current) {$/;"	f
current	Lexer/PH5P.php	/^                    $current = end($this->stack)->nodeName;$/;"	v
current_col	Lexer/DirectLex.php	/^                $current_col = $rcursor - (is_bool($nl_pos) ? 0 : $nl_pos + 1);$/;"	v
current_col	Lexer/DirectLex.php	/^            $current_col  = 0;$/;"	v
current_col	Lexer/DirectLex.php	/^            $current_col  = false;$/;"	v
current_line	Lexer/DirectLex.php	/^                    $current_line = 1 + $this->substrCount($html, $nl, 0, $cursor);$/;"	v
current_line	Lexer/DirectLex.php	/^            $current_line = 1;$/;"	v
current_line	Lexer/DirectLex.php	/^            $current_line = false;$/;"	v
current_parent	Strategy/MakeWellFormed.php	/^            $current_parent = array_pop($this->stack);$/;"	v
current_token	AttrValidator.php	/^        $current_token =& $context->get('CurrentToken', true);$/;"	v
cursor	AttrDef/CSS/Filter.php	/^        $cursor = $function_length + 1;$/;"	v
cursor	Lexer/DirectLex.php	/^                    $cursor = $end ? $position_comment_end : $position_comment_end + 3;$/;"	v
cursor	Lexer/DirectLex.php	/^                    $cursor = $position_next_gt + 1;$/;"	v
cursor	Lexer/DirectLex.php	/^                    $cursor = $size;$/;"	v
cursor	Lexer/DirectLex.php	/^                    $cursor = strpos($string, $char, $cursor);$/;"	v
cursor	Lexer/DirectLex.php	/^                $cursor  = $position_next_lt + 1;$/;"	v
cursor	Lexer/DirectLex.php	/^                $cursor = $position_next_gt + 1;$/;"	v
cursor	Lexer/DirectLex.php	/^        $cursor = 0; \/\/ current position in string (moves forward)$/;"	v
cursor	Lexer/DirectLex.php	/^        $cursor = 0; \/\/ our location in the text$/;"	v
custom_injectors	Strategy/MakeWellFormed.php	/^        $custom_injectors = $injectors['Custom'];$/;"	v
d	Config.php	/^            $d = $this->def->info[$key];$/;"	v
d_defs	AttrValidator.php	/^        $d_defs = $definition->info_global_attr;$/;"	v
d_int	ConfigSchema/Validator.php	/^            $d_int = HTMLPurifier_VarParser::$types[$d->type];$/;"	v
data	Generator.php	/^        $data = preg_replace('#\/\/\\s*$#', '', $token->data);$/;"	v
data	Lexer/DOMLex.php	/^                        $data = substr($data, 0, -3);$/;"	v
data	Lexer/DOMLex.php	/^                    $data = substr($new_data, 4);$/;"	v
data	Lexer/DOMLex.php	/^            $data = $node->data;$/;"	v
data	Lexer/PH5P.php	/^        $data = $this->characters('^>', $this->char);$/;"	v
data	Lexer/PH5P.php	/^        $data = str_replace("\\r", null, $data);$/;"	v
data	Lexer/PH5P.php	/^        $data = str_replace("\\r\\n", "\\n", $data);$/;"	v
data	PropertyList.php	/^    protected $data = array();$/;"	v
data	Strategy/RemoveForeignElements.php	/^                    $data = $token->data;$/;"	v
dataHandler	Lexer/PEARSax3.php	/^    public function dataHandler(&$parser, $data) {$/;"	f
dataState	Lexer/PH5P.php	/^    private function dataState() {$/;"	f
declarations	AttrDef/CSS.php	/^        $declarations = explode(';', $css);$/;"	v
decorate	DefinitionCache/Decorator.php	/^    public function decorate(&$cache) {$/;"	f
decorator	DefinitionCache/Decorator.php	/^        $decorator = $this->copy();$/;"	v
decorator	DefinitionCacheFactory.php	/^            $decorator = new $class;$/;"	v
decorators	DefinitionCacheFactory.php	/^    protected $decorators = array();$/;"	v
def	AttrDef/CSS/Background.php	/^        $def = $config->getCSSDefinition();$/;"	v
def	AttrDef/CSS/Border.php	/^        $def = $config->getCSSDefinition();$/;"	v
def	AttrDef/CSS/Font.php	/^        $def = $config->getCSSDefinition();$/;"	v
def	AttrDef/CSS/ListStyle.php	/^        $def = $config->getCSSDefinition();$/;"	v
def	ChildDef/StrictBlockquote.php	/^            $def = $config->getHTMLDefinition();$/;"	v
def	ChildDef/StrictBlockquote.php	/^        $def = $config->getHTMLDefinition();$/;"	v
def	Config.php	/^        $def = $this->def->info[$key];$/;"	v
def	ElementDef.php	/^        $def = new HTMLPurifier_ElementDef();$/;"	v
def	Filter/ExtractStyleBlocks.php	/^                    $def = $css_definition->info[$name];$/;"	v
def	HTMLDefinition.php	/^        $def = $this->manager->getElement($parent, true);$/;"	v
def	HTMLModuleManager.php	/^                $def = $new_def;$/;"	v
def	HTMLModuleManager.php	/^        $def = false;$/;"	v
def	Injector.php	/^        $def = $config->getHTMLDefinition();$/;"	v
def	Length.php	/^        $def = new HTMLPurifier_AttrDef_CSS_Number();$/;"	v
def	Lexer/DOMLex.php	/^        $def = $config->getDefinition('HTML');$/;"	v
def	Printer/ConfigForm.php	/^                $def = $this->config->def->info["$ns.$directive"];$/;"	v
def	Printer/ConfigForm.php	/^        $def = $config->def->info["$ns.$directive"];$/;"	v
def	Printer/HTMLDefinition.php	/^        $def = $this->def;$/;"	v
def	Strategy/FixNesting.php	/^                    $def = $definition->info[$tokens[$i]->name];$/;"	v
def	Strategy/FixNesting.php	/^                    $def = $definition->info_parent_def;$/;"	v
def	URI.php	/^            $def = $config->getDefinition('URI');$/;"	v
def	URIFilter/MakeAbsolute.php	/^        $def = $config->getDefinition('URI');$/;"	v
def_i	AttrCollections.php	/^                $def_i = trim($def_i, '*');$/;"	v
def_i	AttrCollections.php	/^        foreach ($attr as $def_i => $def) {$/;"	v
def_injectors	Strategy/MakeWellFormed.php	/^        $def_injectors = $definition->info_injector;$/;"	v
default	StringHashParser.php	/^    public $default = 'ID';$/;"	v
defaultLevel	HTMLModule/Tidy.php	/^    public $defaultLevel = null;$/;"	v
defaultLevel	HTMLModule/Tidy/Name.php	/^    public $defaultLevel = 'heavy';$/;"	v
defaultLevel	HTMLModule/Tidy/Proprietary.php	/^    public $defaultLevel = 'light';$/;"	v
defaultLevel	HTMLModule/Tidy/Strict.php	/^    public $defaultLevel = 'light';$/;"	v
defaultLevel	HTMLModule/Tidy/Transitional.php	/^    public $defaultLevel = 'heavy';$/;"	v
defaultLevel	HTMLModule/Tidy/XHTML.php	/^    public $defaultLevel = 'medium';$/;"	v
default_port	URIScheme.php	/^    public $default_port = null;$/;"	v
default_port	URIScheme/ftp.php	/^    public $default_port = 21;$/;"	v
default_port	URIScheme/http.php	/^    public $default_port = 80;$/;"	v
default_port	URIScheme/https.php	/^    public $default_port = 443;$/;"	v
default_port	URIScheme/nntp.php	/^    public $default_port = 119;$/;"	v
defaults	ConfigSchema.php	/^    public $defaults = array();$/;"	v
defines_child_def	HTMLModule.php	/^    public $defines_child_def = false;$/;"	v
defines_child_def	HTMLModule/Edit.php	/^    public $defines_child_def = true;$/;"	v
defines_child_def	HTMLModule/Tidy/Strict.php	/^    public $defines_child_def = true;$/;"	v
definition	AttrDef/CSS.php	/^        $definition = $config->getCSSDefinition();$/;"	v
definition	AttrValidator.php	/^        $definition = $config->getHTMLDefinition();$/;"	v
definition	Config.php	/^        $definition = HTMLPurifier_ConfigSchema::instance();$/;"	v
definition	Strategy/FixNesting.php	/^        $definition = $config->getHTMLDefinition();$/;"	v
definition	Strategy/MakeWellFormed.php	/^        $definition = $config->getHTMLDefinition();$/;"	v
definition	Strategy/RemoveForeignElements.php	/^        $definition = $config->getHTMLDefinition();$/;"	v
defs	AttrValidator.php	/^        $defs = $definition->info[$token->name]->attr;$/;"	v
delete	HTMLDefinition.php	/^                            $delete = false;$/;"	v
delete	HTMLDefinition.php	/^                        $delete = false;$/;"	v
delete	HTMLDefinition.php	/^                    $delete = true;$/;"	v
delete	HTMLDefinition.php	/^                $delete = true;$/;"	v
delete	Strategy/MakeWellFormed.php	/^        $delete = array_shift($token);$/;"	v
depth	ChildDef/StrictBlockquote.php	/^        $depth = 0;$/;"	v
depth	LanguageFactory.php	/^        static $depth = 0; \/\/ recursion protection$/;"	v
depth	Strategy/FixNesting.php	/^            for ($j = $i, $depth = 0; ; $j++) {$/;"	v
descendants_are_inline	ElementDef.php	/^    public $descendants_are_inline = false;$/;"	v
describing	ConfigSchema/Interchange/Directive.php	/^ * Interchange component class describing configuration directives.$/;"	c
dest_state	UnitConverter.php	/^            if (isset($x[$to_unit])) $dest_state = $k;$/;"	v
dest_unit	UnitConverter.php	/^                $dest_unit = $to_unit;$/;"	v
dest_unit	UnitConverter.php	/^                $dest_unit = self::$units[$state][$dest_state][0];$/;"	v
destroy	Context.php	/^    public function destroy($name) {$/;"	f
dh	ConfigSchema/InterchangeBuilder.php	/^        $dh = opendir($dir);$/;"	v
dh	DefinitionCache/Serializer.php	/^        $dh  = opendir($dir);$/;"	v
digits	AttrDef/Integer.php	/^            $digits = $integer = substr($integer, 1); \/\/ rm unnecessary plus$/;"	v
digits	AttrDef/Integer.php	/^            $digits = $integer;$/;"	v
digits	AttrDef/Integer.php	/^            $digits = substr($integer, 1);$/;"	v
dir	ConfigSchema/InterchangeBuilder.php	/^        if (!$dir) $dir = HTMLPURIFIER_PREFIX . '\/HTMLPurifier\/ConfigSchema\/schema\/';$/;"	v
dir	DefinitionCache/Serializer.php	/^        $dir = $this->generateDirectoryPath($config);$/;"	v
directive	Config.php	/^                foreach ($namespace_values as $directive => $value) {$/;"	v
directive	Config.php	/^            $directive = $value;$/;"	v
directive	Config.php	/^            if ($directive == 'DefinitionID' || $directive == 'DefinitionRev') continue;$/;"	v
directive	ConfigSchema/InterchangeBuilder.php	/^        $directive = new HTMLPurifier_ConfigSchema_Interchange_Directive();$/;"	v
directive	Printer/ConfigForm.php	/^        foreach ($directives as $directive => $value) {$/;"	v
directive_disp	Printer/ConfigForm.php	/^                    $directive_disp = $directive;$/;"	v
directive_disp	Printer/ConfigForm.php	/^                    $directive_disp = substr($directive, 0, $this->compress - 2) . '...';$/;"	v
directives	ConfigSchema/Interchange.php	/^    public $directives = array();$/;"	v
directly	PropertyListIterator.php	/^ * Property list iterator. Do not instantiate this class directly.$/;"	c
directory	DefinitionCache/Serializer.php	/^        $directory = $this->generateDirectoryPath($config);$/;"	v
discard	Printer/HTMLDefinition.php	/^        foreach ($array as $discard => $obj) {$/;"	v
div	HTMLModule/Legacy.php	/^        $div = $this->addBlankElement('div');$/;"	v
div	UnitConverter.php	/^    private function div($s1, $s2, $scale) {$/;"	f
dl	HTMLModule/Legacy.php	/^        $dl = $this->addBlankElement('dl');$/;"	v
doSetup	CSSDefinition.php	/^    protected function doSetup($config) {$/;"	f
doSetup	Definition.php	/^    abstract protected function doSetup($config);$/;"	f
doSetup	HTMLDefinition.php	/^    protected function doSetup($config) {$/;"	f
doSetup	URIDefinition.php	/^    protected function doSetup($config) {$/;"	f
doSetupProprietary	CSSDefinition.php	/^    protected function doSetupProprietary($config) {$/;"	f
doSetupTricky	CSSDefinition.php	/^    protected function doSetupTricky($config) {$/;"	f
doc	Lexer/DOMLex.php	/^        $doc = new DOMDocument();$/;"	v
doc	Lexer/PH5P.php	/^            $doc = $parser->save();$/;"	v
doc_url	Printer/ConfigForm.php	/^        $name, $doc_url = null, $compress = false$/;"	v
doctype	DoctypeRegistry.php	/^            $doctype = 'HTML 4.01';$/;"	v
doctype	DoctypeRegistry.php	/^            $doctype = 'XHTML 1.0';$/;"	v
doctype	DoctypeRegistry.php	/^            $doctype = new HTMLPurifier_Doctype($/;"	v
doctype	DoctypeRegistry.php	/^        $doctype = $config->get('HTML.CustomDoctype');$/;"	v
doctype	DoctypeRegistry.php	/^        $doctype = $config->get('HTML.Doctype');$/;"	v
doctype	DoctypeRegistry.php	/^        if (isset($this->aliases[$doctype])) $doctype = $this->aliases[$doctype];$/;"	v
doctype	Lexer/PH5P.php	/^            $doctype = new DOMDocumentType(null, null, 'HTML');$/;"	v
doctype	Printer/HTMLDefinition.php	/^        $doctype = $this->def->doctype;$/;"	v
doctypeNameState	Lexer/PH5P.php	/^    private function doctypeNameState() {$/;"	f
doctypeState	Lexer/PH5P.php	/^    private function doctypeState() {$/;"	f
does	AttrDef/CSS/Multiple.php	/^ *       shorthand declaration.  Thus, this class does not allow inherit.$/;"	c
doesn	IDAccumulator.php	/^     * @note This function doesn't care about duplicates$/;"	f
domainlabel	AttrDef/URI/Host.php	/^        $domainlabel   = "$an($and*$an)?";$/;"	v
done	AttrDef/CSS/Border.php	/^        $done = array(); \/\/ segments we've finished$/;"	v
dp	UnitConverter.php	/^        $dp = strpos($n, '.'); \/\/ decimal position$/;"	v
e	AttrValidator.php	/^        $e =& $context->get('ErrorCollector', true);$/;"	v
e	HTMLModule/Target.php	/^            $e = $this->addBlankElement($name);$/;"	v
e	HTMLModule/Tidy.php	/^                            $e = $this->addBlankElement($element);$/;"	v
e	HTMLModule/Tidy.php	/^                            $e = $this->info[$element];$/;"	v
e	HTMLModule/Tidy.php	/^                        $e = $this->addBlankElement($element);$/;"	v
e	HTMLModule/Tidy.php	/^                        $e = $this->info[$element];$/;"	v
e	HTMLModule/Tidy.php	/^                        $e = $this;$/;"	v
e	Lexer/DirectLex.php	/^            $e =& $context->get('ErrorCollector');$/;"	v
e	Lexer/DirectLex.php	/^        $e = false;$/;"	v
e	Strategy/FixNesting.php	/^        $e =& $context->get('ErrorCollector', true);$/;"	v
e	Strategy/MakeWellFormed.php	/^        $e = $context->get('ErrorCollector', true);$/;"	v
e	Strategy/RemoveForeignElements.php	/^            $e =& $context->get('ErrorCollector');$/;"	v
e	Strategy/RemoveForeignElements.php	/^        $e = false;$/;"	v
e_name	Lexer/PH5P.php	/^                $e_name = $this->characters($char_class, $this->char + $char + 1);$/;"	v
e_name	Lexer/PH5P.php	/^                $e_name = $this->characters('0-9A-Za-z;', $this->char + 1);$/;"	v
el	ChildDef/Custom.php	/^        $el = '[#a-zA-Z0-9_.-]+';$/;"	v
el	Lexer/PH5P.php	/^                    $el = $this->insertElement($token);$/;"	v
el	Lexer/PH5P.php	/^        $el = $this->dom->createElement($token['name']);$/;"	v
elattr	HTMLDefinition.php	/^            foreach ($allowed_attributes_mutable as $elattr => $d) {$/;"	v
element	ContentSets.php	/^                foreach ($set as $element => $x) {$/;"	v
element	Generator.php	/^    public function generateAttributes($assoc_array_of_attributes, $element = false) {$/;"	v
element	HTMLDefinition.php	/^                            $element = htmlspecialchars($bits[0]);$/;"	v
element	HTMLDefinition.php	/^                $element = $chunk;$/;"	v
element	HTMLDefinition.php	/^                $element = htmlspecialchars($element); \/\/ PHP doesn't escape errors, be careful!$/;"	v
element	HTMLDefinition.php	/^            $element = $module->addBlankElement($element_name);$/;"	v
element	HTMLDefinition.php	/^            $element = $module->info[$element_name];$/;"	v
element	HTMLDefinition.php	/^            foreach ($allowed_elements as $element => $d) {$/;"	v
element	HTMLDefinition.php	/^        $element = $module->addBlankElement($element_name);$/;"	v
element	HTMLDefinition.php	/^        $element = $module->addElement($element_name, $type, $contents, $attr_collections, $attributes);$/;"	v
element	HTMLModule/Name.php	/^            $element = $this->addBlankElement($name);$/;"	v
element	HTMLModule/Tidy.php	/^                        $element = $params['element'];$/;"	v
element	HTMLModule/Tidy.php	/^                    $element = $params['element'];$/;"	v
element	Injector.php	/^            if (is_int($element)) $element = $attributes;$/;"	v
element	Injector.php	/^        foreach ($this->needed as $element => $attributes) {$/;"	v
element	Lexer/PH5P.php	/^                        $element = $this->insertElement($token);$/;"	v
element	Lexer/PH5P.php	/^                    $element = $this->insertElement($token, false);$/;"	v
element	Lexer/PH5P.php	/^                $element = $this->insertElement($token);$/;"	v
element	Lexer/PH5P.php	/^                $element = $this->insertElement($token, false);$/;"	v
element	Lexer/PH5P.php	/^            $element = $this->insertElement($token);$/;"	v
element	Lexer/PH5P.php	/^            $element = $this->insertElement($token, false);$/;"	v
element	Printer.php	/^    protected function element($tag, $contents, $attr = array(), $escape = true) {$/;"	f
element	Strategy/MakeWellFormed.php	/^                            $element = clone $parent;$/;"	v
element	Strategy/MakeWellFormed.php	/^                    $element = clone $skipped_tags[$j];$/;"	v
elementEmpty	Printer.php	/^    protected function elementEmpty($tag, $attr = array()) {$/;"	f
elementInScope	Lexer/PH5P.php	/^    private function elementInScope($el, $table = false) {$/;"	f
elementLookup	HTMLModuleManager.php	/^    public $elementLookup = array();$/;"	v
elements	ChildDef.php	/^    public $elements = array();$/;"	v
elements	ChildDef/Required.php	/^            $elements = array_flip($elements);$/;"	v
elements	ChildDef/Required.php	/^            $elements = explode('|', $elements);$/;"	v
elements	ChildDef/Required.php	/^            $elements = str_replace(' ', '', $elements);$/;"	v
elements	ChildDef/Required.php	/^    public $elements = array();$/;"	v
elements	ChildDef/Table.php	/^    public $elements = array('tr' => true, 'tbody' => true, 'thead' => true,$/;"	v
elements	HTMLDefinition.php	/^        $elements = array();$/;"	v
elements	HTMLModule.php	/^    public $elements = array();$/;"	v
elements	HTMLModule/Name.php	/^        $elements = array('a', 'applet', 'form', 'frame', 'iframe', 'img', 'map');$/;"	v
elements	HTMLModule/Scripting.php	/^    public $elements = array('script', 'noscript');$/;"	v
elements	HTMLModule/Target.php	/^        $elements = array('a');$/;"	v
elements	HTMLModuleManager.php	/^        $elements = array();$/;"	v
elements	Lexer/PH5P.php	/^                    $elements = array('h1', 'h2', 'h3', 'h4', 'h5', 'h6');$/;"	v
elements	Lexer/PH5P.php	/^        $elements = array_diff(array('dd', 'dt', 'li', 'p', 'td', 'th', 'tr'), $exclude);$/;"	v
elements	Printer/HTMLDefinition.php	/^                $elements = $def->elements;$/;"	v
elements	Printer/HTMLDefinition.php	/^                $elements = array();$/;"	v
elements	Printer/HTMLDefinition.php	/^                $elements = array_flip(array('col', 'caption', 'colgroup', 'thead',$/;"	v
elements	Printer/HTMLDefinition.php	/^            $elements = array();$/;"	v
elements	Strategy/MakeWellFormed.php	/^                        $elements = $definition->info[$parent->name]->child->getAllowedElements($config);$/;"	v
elements_in_stack	Lexer/PH5P.php	/^            $elements_in_stack = count($this->stack);$/;"	v
em	HTMLModule/Text.php	/^        $em = $this->addElement('em',      'Inline', 'Inline', 'Common');$/;"	v
embed	HTMLModule/SafeEmbed.php	/^        $embed = $this->addElement($/;"	v
embeds	AttrDef/URI.php	/^        $embeds = (bool) $string;$/;"	v
emit	Lexer/PH5P.php	/^        $emit = $this->tree->emitToken($token);$/;"	v
emitToken	Lexer/PH5P.php	/^    private function emitToken($token) {$/;"	f
emitToken	Lexer/PH5P.php	/^    public function emitToken($token) {$/;"	f
encode	PercentEncoder.php	/^    public function encode($string) {$/;"	f
encoder	URI.php	/^            $encoder = new HTMLPurifier_PercentEncoder($chars_sub_delims . ':');$/;"	v
encoding	Encoder.php	/^        $encoding = $config->get('Core.Encoding');$/;"	v
encoding	PercentEncoder.php	/^            $encoding = strtoupper($encoding);$/;"	v
encoding	PercentEncoder.php	/^            $encoding = substr($part, 0, 2);$/;"	v
encodings	Encoder.php	/^        static $encodings = array();$/;"	v
end	Lexer/DirectLex.php	/^                        $end = false;$/;"	v
end	Lexer/DirectLex.php	/^                        $end = true;$/;"	v
end	Printer.php	/^    protected function end($tag) {$/;"	f
entities	Lexer/PH5P.php	/^    private $entities = array('AElig;','AElig','AMP;','AMP','Aacute;','Aacute',$/;"	v
entity	EntityParser.php	/^        $entity = $matches[0];$/;"	v
entity	Lexer/PH5P.php	/^                        $entity = $id;$/;"	v
entity	Lexer/PH5P.php	/^                $entity = $this->character($start, $this->char);$/;"	v
entity	Lexer/PH5P.php	/^        $entity = $this->entity();$/;"	v
entity	Lexer/PH5P.php	/^    private function entity() {$/;"	f
entityDataState	Lexer/PH5P.php	/^    private function entityDataState() {$/;"	f
entityInAttributeValueState	Lexer/PH5P.php	/^    private function entityInAttributeValueState() {$/;"	f
entry	Lexer/PH5P.php	/^                $entry = $this->a_formatting[$a];$/;"	v
entry	Lexer/PH5P.php	/^            $entry = $this->a_formatting[$a];$/;"	v
entry	Lexer/PH5P.php	/^            $entry = end($this->a_formatting);$/;"	v
entry	Lexer/PH5P.php	/^        $entry = end($this->a_formatting);$/;"	v
enumToCSS	AttrTransform/EnumToCSS.php	/^    protected $enumToCSS = array();$/;"	v
error	ConfigSchema/Validator.php	/^    protected function error($target, $msg) {$/;"	f
error	ConfigSchema/ValidatorAtom.php	/^    protected function error($msg) {$/;"	f
error	ErrorCollector.php	/^                $error = $this->locale->getErrorName($severity);$/;"	v
error	ErrorCollector.php	/^        $error = array($/;"	v
error	Language.php	/^    public $error = false;$/;"	v
error	Strategy/MakeWellFormed.php	/^            $error = $injector->prepare($config, $context);$/;"	v
error	VarParser.php	/^    protected function error($msg) {$/;"	f
errorGeneric	VarParser.php	/^    protected function errorGeneric($var, $type) {$/;"	f
errorInconsistent	VarParser.php	/^    protected function errorInconsistent($class, $type) {$/;"	f
errorNames	Language.php	/^    public $errorNames = array();$/;"	v
errorNames	Language/messages/en.php	/^$errorNames = array($/;"	v
errors	ErrorCollector.php	/^        if ($errors === null) $errors = $this->errors;$/;"	v
errors	ErrorCollector.php	/^    public function getHTMLFormatted($config, $errors = null) {$/;"	v
errors	ErrorStruct.php	/^    public $errors = array();$/;"	v
escape	Generator.php	/^    public function escape($string, $quote = ENT_COMPAT) {$/;"	f
escape	Lexer/PH5P.php	/^    private $escape = false;$/;"	v
escape	Printer.php	/^    protected function escape($string) {$/;"	f
escapeCDATA	Lexer.php	/^    protected static function escapeCDATA($string) {$/;"	f
escapeCommentedCDATA	Lexer.php	/^    protected static function escapeCommentedCDATA($string) {$/;"	f
escapeHandler	Lexer/PEARSax3.php	/^    public function escapeHandler(&$parser, $data) {$/;"	f
escape_invalid_children	ChildDef/Required.php	/^        $escape_invalid_children = $config->get('Core.EscapeInvalidChildren');$/;"	v
escape_invalid_tags	Strategy/MakeWellFormed.php	/^        $escape_invalid_tags = $config->get('Core.EscapeInvalidTags');$/;"	v
escape_invalid_tags	Strategy/RemoveForeignElements.php	/^        $escape_invalid_tags = $config->get('Core.EscapeInvalidTags');$/;"	v
evalArray	ConfigSchema/InterchangeBuilder.php	/^    protected function evalArray($contents) {$/;"	f
evalExpression	VarParser/Native.php	/^    protected function evalExpression($expr) {$/;"	f
exclude_stack	Strategy/FixNesting.php	/^        $exclude_stack = array();$/;"	v
excluded	Strategy/FixNesting.php	/^                        $excluded = true;$/;"	v
excluded	Strategy/FixNesting.php	/^            $excluded = false;$/;"	v
excludes	ElementDef.php	/^    public $excludes = array();$/;"	v
excludes	Strategy/FixNesting.php	/^                $excludes = $def->excludes;$/;"	v
excludes	Strategy/FixNesting.php	/^                $excludes = array(); \/\/ not used, but good to initialize anyway$/;"	v
execute	Strategy.php	/^    abstract public function execute($tokens, $config, $context);$/;"	f
execute	Strategy/Composite.php	/^    public function execute($tokens, $config, $context) {$/;"	f
execute	Strategy/FixNesting.php	/^    public function execute($tokens, $config, $context) {$/;"	f
execute	Strategy/MakeWellFormed.php	/^    public function execute($tokens, $config, $context) {$/;"	f
execute	Strategy/RemoveForeignElements.php	/^    public function execute($tokens, $config, $context) {$/;"	f
execute	Strategy/ValidateAttributes.php	/^    public function execute($tokens, $config, $context) {$/;"	f
exists	Context.php	/^    public function exists($name) {$/;"	f
expandIdentifiers	AttrCollections.php	/^    public function expandIdentifiers(&$attr, $attr_types) {$/;"	f
expects	AttrTransform/SafeParam.php	/^ *      This class expects an injector to add the necessary parameters tags.$/;"	c
export	ConfigSchema/Builder/Xml.php	/^    protected function export($var) {$/;"	f
external	ConfigSchema/Interchange/Directive.php	/^    public $external = array();$/;"	v
extra	Config.php	/^            $extra = " on line {$frame['line']} in file {$frame['file']}";$/;"	v
extra	Config.php	/^            $extra = '';$/;"	v
extractBody	Lexer.php	/^    public function extractBody($html) {$/;"	f
f	HTMLModule/Tidy.php	/^                    $f =& $e->$type;$/;"	v
factor	UnitConverter.php	/^                $factor = $this->div(self::$units[$state][$unit], self::$units[$state][$dest_unit], $cp);$/;"	v
factory	Config.php	/^        $factory = HTMLPurifier_DefinitionCacheFactory::instance();$/;"	v
factory	Language.php	/^        $factory = HTMLPurifier_LanguageFactory::instance();$/;"	v
fallback	Language.php	/^    public $fallback = false;$/;"	v
fallback	Language/messages/en-x-test.php	/^$fallback = 'en';$/;"	v
fallback	Language/messages/en-x-testmini.php	/^$fallback = 'en';$/;"	v
fallback	Language/messages/en.php	/^$fallback = false;$/;"	v
fallback	LanguageFactory.php	/^                $fallback = $raw_fallback ? $raw_fallback : 'en';$/;"	v
fallback	LanguageFactory.php	/^                $fallback = 'en';$/;"	v
fallback	LanguageFactory.php	/^        $fallback = ($code != 'en') ? 'en' : false;$/;"	v
fallback_cache	LanguageFactory.php	/^            $fallback_cache = $this->cache[$fallback];$/;"	v
fallbacks	LanguageFactory.php	/^     * Creates a language object, handles class fallbacks$/;"	c
fb_s_pos	Lexer/PH5P.php	/^                        $fb_s_pos = array_search($furthest_block, $this->stack, true);$/;"	v
fe_af_pos	Lexer/PH5P.php	/^                                $fe_af_pos = $a;$/;"	v
fe_af_pos	Lexer/PH5P.php	/^                        $fe_af_pos = array_search($formatting_element, $this->a_formatting, true);$/;"	v
fe_s_pos	Lexer/PH5P.php	/^                        $fe_s_pos = array_search($formatting_element, $this->stack, true);$/;"	v
fh	StringHashParser.php	/^        $fh = fopen($file, 'r');$/;"	v
fields	Printer/ConfigForm.php	/^    protected $fields = array();$/;"	v
file	Bootstrap.php	/^            $file = 'HTMLPurifier\/Language\/classes\/' . $code . '.php';$/;"	v
file	Bootstrap.php	/^            $file = str_replace('_', '\/', $class) . '.php';$/;"	v
file	Bootstrap.php	/^        $file = HTMLPurifier_Bootstrap::getPath($class);$/;"	v
file	DefinitionCache/Serializer.php	/^        $file = $this->generateFilePath($config);$/;"	v
file	EntityLookup.php	/^            $file = HTMLPURIFIER_PREFIX . '\/HTMLPurifier\/EntityLookup\/entities.ser';$/;"	v
file	LanguageFactory.php	/^            $file  = $this->dir . '\/Language\/classes\/' . $code . '.php';$/;"	v
filename	LanguageFactory.php	/^            $filename = $this->dir . '\/Language\/messages\/en.php';$/;"	v
filename	LanguageFactory.php	/^        $filename = $this->dir . '\/Language\/messages\/' . $code . '.php';$/;"	v
files	ConfigSchema/InterchangeBuilder.php	/^        $files = array();$/;"	v
filter	AttrDef/HTML/Class.php	/^    protected function filter($tokens, $config, $context) {$/;"	f
filter	AttrDef/HTML/Nmtokens.php	/^    protected function filter($tokens, $config, $context) {$/;"	f
filter	PropertyListIterator.php	/^    public function __construct(Iterator $iterator, $filter = null) {$/;"	v
filter	URIDefinition.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filter	URIFilter.php	/^    abstract public function filter(&$uri, $config, $context);$/;"	f
filter	URIFilter/DisableExternal.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filter	URIFilter/DisableExternalResources.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filter	URIFilter/HostBlacklist.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filter	URIFilter/MakeAbsolute.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filter	URIFilter/Munge.php	/^    public function filter(&$uri, $config, $context) {$/;"	f
filters	URIDefinition.php	/^    protected $filters = array();$/;"	v
final	AttrDef/CSS/Font.php	/^        $final = ''; \/\/ output$/;"	v
final	AttrDef/CSS/FontFamily.php	/^        $final = '';$/;"	v
final	AttrDef/CSS/FontFamily.php	/^        $final = rtrim($final, ', ');$/;"	v
final	AttrDef/CSS/Multiple.php	/^        $final = '';$/;"	v
final	AttrDef/CSS/TextDecoration.php	/^        $final = '';$/;"	v
final	AttrDef/CSS/TextDecoration.php	/^        $final = rtrim($final);$/;"	v
finalize	Config.php	/^    public function finalize() {$/;"	f
finalized	Config.php	/^    protected $finalized = false;$/;"	v
first	AttrDef/URI/IPv6.php	/^                $first = explode(':', $first);$/;"	v
first_char	Lexer/DirectLex.php	/^            $first_char = @$quoted_value[0];$/;"	v
first_char	Lexer/DirectLex.php	/^            $first_char = @$string[$cursor];$/;"	v
five	Printer.php	/^        if ($five === null) $five = version_compare(PHP_VERSION, '5', '>=');$/;"	v
five	Printer.php	/^        static $five = null;$/;"	v
fixes	HTMLModule/Tidy.php	/^        $fixes = $this->makeFixes();$/;"	v
fixesForLevel	HTMLModule/Tidy.php	/^    public $fixesForLevel = array($/;"	v
fixes_lookup	HTMLModule/Tidy.php	/^        $fixes_lookup = $this->getFixesForLevel($level);$/;"	v
float	AttrDef/CSS/AlphaValue.php	/^        $float = (float) $result;$/;"	v
flush	DefinitionCache.php	/^    abstract public function flush($config);$/;"	f
flush	DefinitionCache/Decorator.php	/^    public function flush($config) {$/;"	f
flush	DefinitionCache/Null.php	/^    public function flush($config) {$/;"	f
flush	DefinitionCache/Serializer.php	/^    public function flush($config) {$/;"	f
font	AttrDef/CSS/FontFamily.php	/^                $font = $new_font;$/;"	v
font	AttrDef/CSS/FontFamily.php	/^                $font = substr($font, 1, $length - 2);$/;"	v
font	AttrDef/CSS/FontFamily.php	/^            $font = str_replace("'", "\\\\'", $font);$/;"	v
font	AttrDef/CSS/FontFamily.php	/^            $font = str_replace("\\\\", "\\\\\\\\", $font);$/;"	v
font	AttrDef/CSS/FontFamily.php	/^            $font = trim($font);$/;"	v
font_family	AttrDef/CSS/Font.php	/^                    $font_family =$/;"	v
font_size	AttrDef/CSS/Font.php	/^                        $font_size = $bits[$i];$/;"	v
fonts	AttrDef/CSS/FontFamily.php	/^        $fonts = explode(',', $string);$/;"	v
for	AttrDef.php	/^ * Base class for all validating attribute definitions.$/;"	c
for	AttrDef/CSS/Multiple.php	/^ * Framework class for strings that involve multiple values.$/;"	c
for	Bootstrap.php	/^     * Autoload function for HTML Purifier$/;"	f
for	Config.php	/^     * Convenience function for error reporting$/;"	f
for	ConfigSchema/Validator.php	/^     * Convenience function for generating HTMLPurifier_ConfigSchema_ValidatorAtom$/;"	f
for	ConfigSchema/ValidatorAtom.php	/^ * Fluent interface for validating the contents of member variables.$/;"	i
for	DefinitionCache/Serializer.php	/^     * Convenience wrapper function for file_put_contents$/;"	f
for	EntityParser.php	/^     * Callback function for substituteNonSpecialEntities() that does the work.$/;"	f
for	EntityParser.php	/^     * Callback function for substituteSpecialEntities() that does the work.$/;"	f
for	Exception.php	/^ * Global exception class for HTML Purifier; any exceptions we throw$/;"	c
for	HTMLModule/Tidy.php	/^ * Abstract class for a set of proprietary modules that clean up (tidy)$/;"	c
for	Language/classes/en-x-test.php	/^\/\/ private class for unit testing$/;"	c
for	Lexer.php	/^     * Callback function for escapeCDATA() that does the work.$/;"	f
for	Lexer.php	/^ * @note The unit tests will instantiate this class for testing purposes, as$/;"	c
for	Lexer/DOMLex.php	/^     * Callback function for undoing escaping of stray angled brackets$/;"	f
for	Lexer/DirectLex.php	/^     * Callback function for script CDATA fudge$/;"	f
for	Token.php	/^     * Convenience function for DirectLex settings line\/col position.$/;"	f
forbidden	AttrDef/HTML/Class.php	/^        $forbidden = $config->get('Attr.ForbiddenClasses');$/;"	v
forbidden_attributes	HTMLDefinition.php	/^        $forbidden_attributes = $config->get('HTML.ForbiddenAttributes');$/;"	v
forbidden_elements	HTMLDefinition.php	/^        $forbidden_elements   = $config->get('HTML.ForbiddenElements');$/;"	v
force_php	Encoder.php	/^    public static function cleanUTF8($str, $force_php = false) {$/;"	v
form	HTMLModule/Forms.php	/^        $form = $this->addElement('form', 'Form',$/;"	v
form_pointer	Lexer/PH5P.php	/^    private $form_pointer = null;$/;"	v
formatMessage	Language.php	/^    public function formatMessage($key, $args = array()) {$/;"	f
formatting	Lexer/PH5P.php	/^    private $formatting = array('a','b','big','em','font','i','nobr','s','small','strike','strong','tt','u');$/;"	v
formatting_element	Lexer/PH5P.php	/^                                $formatting_element = $this->a_formatting[$a];$/;"	v
formatting_elements	Lexer/PH5P.php	/^        $formatting_elements = count($this->a_formatting);$/;"	v
forward	Injector.php	/^    protected function forward(&$i, &$current) {$/;"	f
forwardUntilEndToken	Injector.php	/^    protected function forwardUntilEndToken(&$i, &$current, &$nesting) {$/;"	f
foster_parent	Lexer/PH5P.php	/^    private $foster_parent = null;$/;"	v
found_double_hyphen	Strategy/RemoveForeignElements.php	/^                        $found_double_hyphen = true; \/\/ prevent double-erroring$/;"	v
found_double_hyphen	Strategy/RemoveForeignElements.php	/^                    $found_double_hyphen = false;$/;"	v
found_slash	AttrDef/CSS/Font.php	/^                                        $found_slash = true;$/;"	v
found_slash	AttrDef/CSS/Font.php	/^                            $found_slash = true;$/;"	v
found_slash	AttrDef/CSS/Font.php	/^                    $found_slash = false;$/;"	v
fragment	URIParser.php	/^        $fragment   = !empty($matches[8]) ? $matches[9] : null;$/;"	v
frame	Config.php	/^            $frame = $backtrace[1];$/;"	v
from	AttrDef.php	/^     * Factory method for creating this class from a string.$/;"	c
full	Config.php	/^        $full = $this->getAll();$/;"	v
func	Bootstrap.php	/^                    if ($compat) $func = implode('::', $func);$/;"	v
function	AttrDef/CSS/Filter.php	/^        $function = trim(substr($value, 0, $function_length));$/;"	v
function_length	AttrDef/CSS/Filter.php	/^        $function_length = strcspn($value, '(');$/;"	v
furthest_block	Lexer/PH5P.php	/^                                $furthest_block = $this->stack[$s];$/;"	v
gen	ChildDef/Required.php	/^        $gen = new HTMLPurifier_Generator($config, $context);$/;"	v
gen_config	Printer/ConfigForm.php	/^            $gen_config = $config;$/;"	v
gen_config	Printer/ConfigForm.php	/^            $gen_config = $config[0];$/;"	v
generateAttributes	Generator.php	/^    public function generateAttributes($assoc_array_of_attributes, $element = false) {$/;"	f
generateBaseDirectoryPath	DefinitionCache/Serializer.php	/^    public function generateBaseDirectoryPath($config) {$/;"	f
generateChildDef	ContentSets.php	/^    public function generateChildDef(&$def, $module) {$/;"	f
generateChildDefCallback	ContentSets.php	/^    public function generateChildDefCallback($matches) {$/;"	f
generateDirectoryPath	DefinitionCache/Serializer.php	/^    public function generateDirectoryPath($config) {$/;"	f
generateFilePath	DefinitionCache/Serializer.php	/^    public function generateFilePath($config) {$/;"	f
generateFromToken	Generator.php	/^    public function generateFromToken($token) {$/;"	f
generateFromTokens	Generator.php	/^    public function generateFromTokens($tokens) {$/;"	f
generateImpliedEndTags	Lexer/PH5P.php	/^    private function generateImpliedEndTags($exclude = array()) {$/;"	f
generateKey	DefinitionCache.php	/^    public function generateKey($config) {$/;"	f
generateScriptFromToken	Generator.php	/^    public function generateScriptFromToken($token) {$/;"	f
generator	Language.php	/^                    if (!$generator) $generator = $this->context->get('Generator');$/;"	v
generator	Language.php	/^        $generator = false;$/;"	v
generator	Strategy/MakeWellFormed.php	/^        $generator = new HTMLPurifier_Generator($config, $context);$/;"	v
generator	Strategy/RemoveForeignElements.php	/^        $generator = new HTMLPurifier_Generator($config, $context);$/;"	v
generic_names	AttrDef/CSS/FontFamily.php	/^        static $generic_names = array($/;"	v
get	AttrTypes.php	/^    public function get($type) {$/;"	f
get	Config.php	/^    public function get($key, $a = null) {$/;"	f
get	Context.php	/^    public function &get($name, $ignore_error = false) {$/;"	f
get	DefinitionCache.php	/^    abstract public function get($config);$/;"	f
get	DefinitionCache/Decorator.php	/^    public function get($config) {$/;"	f
get	DefinitionCache/Decorator/Cleanup.php	/^    public function get($config) {$/;"	f
get	DefinitionCache/Decorator/Memory.php	/^    public function get($config) {$/;"	f
get	DefinitionCache/Null.php	/^    public function get($config) {$/;"	f
get	DefinitionCache/Serializer.php	/^    public function get($config) {$/;"	f
get	DoctypeRegistry.php	/^    public function get($doctype) {$/;"	f
get	PropertyList.php	/^    public function get($name) {$/;"	f
getAccessed	StringHash.php	/^    public function getAccessed() {$/;"	f
getAll	Config.php	/^    public function getAll() {$/;"	f
getAllowedDirectivesForForm	Config.php	/^    public static function getAllowedDirectivesForForm($allowed, $schema = null) {$/;"	f
getAllowedElements	ChildDef.php	/^    public function getAllowedElements($config) {$/;"	f
getAllowedElements	ChildDef/StrictBlockquote.php	/^    public function getAllowedElements($config) {$/;"	f
getAnonymousModule	HTMLDefinition.php	/^    public function getAnonymousModule() {$/;"	f
getBatch	Config.php	/^    public function getBatch($namespace) {$/;"	f
getBatchSerial	Config.php	/^    public function getBatchSerial($namespace) {$/;"	f
getCSS	Printer/ConfigForm.php	/^    public static function getCSS() {$/;"	f
getCSSDefinition	Config.php	/^    public function getCSSDefinition($raw = false) {$/;"	f
getChild	ErrorStruct.php	/^    public function getChild($type, $id) {$/;"	f
getChildDef	ContentSets.php	/^    public function getChildDef($def, $module) {$/;"	f
getChildDef	HTMLModule.php	/^    public function getChildDef($def) {return false;}$/;"	f
getChildDef	HTMLModule/Edit.php	/^    public function getChildDef($def) {$/;"	f
getChildDef	HTMLModule/Tidy/Strict.php	/^    public function getChildDef($def) {$/;"	f
getClass	Printer.php	/^    protected function getClass($obj, $sec_prefix = '') {$/;"	f
getDefinition	Config.php	/^    public function getDefinition($type, $raw = false) {$/;"	f
getDirective	ConfigSchema/Interchange/Id.php	/^    public function getDirective() {$/;"	f
getDoctypeFromConfig	DoctypeRegistry.php	/^    public function getDoctypeFromConfig($config) {$/;"	f
getElement	HTMLModuleManager.php	/^    public function getElement($name, $trusted = null) {$/;"	f
getElementCategory	Lexer/PH5P.php	/^    private function getElementCategory($node) {$/;"	f
getElements	HTMLModuleManager.php	/^    public function getElements() {$/;"	f
getErrorName	Language.php	/^    public function getErrorName($int) {$/;"	f
getFallbackFor	LanguageFactory.php	/^    public function getFallbackFor($code) {$/;"	f
getFixType	HTMLModule/Tidy.php	/^    public function getFixType($name) {$/;"	f
getFixesForLevel	HTMLModule/Tidy.php	/^    public function getFixesForLevel($level) {$/;"	f
getFormattedContext	ConfigSchema/Validator.php	/^    protected function getFormattedContext() {$/;"	f
getHTMLDefinition	Config.php	/^    public function getHTMLDefinition($raw = false) {$/;"	f
getHTMLFormatted	ErrorCollector.php	/^    public function getHTMLFormatted($config, $errors = null) {$/;"	f
getJavaScript	Printer/ConfigForm.php	/^    public static function getJavaScript() {$/;"	f
getMessage	Language.php	/^    public function getMessage($key) {$/;"	f
getN	Length.php	/^    public function getN() {return $this->n;}$/;"	f
getParent	PropertyList.php	/^    public function getParent() {$/;"	f
getPath	Bootstrap.php	/^    public static function getPath($class) {$/;"	f
getRaw	ErrorCollector.php	/^    public function getRaw() {$/;"	f
getRewind	Injector.php	/^    public function getRewind() {$/;"	f
getRootNamespace	ConfigSchema/Interchange/Id.php	/^    public function getRootNamespace() {$/;"	f
getScheme	URISchemeRegistry.php	/^    public function getScheme($scheme, $config, $context) {$/;"	f
getSchemeObj	URI.php	/^    public function getSchemeObj($config, $context) {$/;"	f
getSerial	Config.php	/^    public function getSerial() {$/;"	f
getSigFigs	UnitConverter.php	/^    public function getSigFigs($n) {$/;"	f
getTypeName	VarParser.php	/^    static public function getTypeName($type) {$/;"	f
getUnit	Length.php	/^    public function getUnit() {return $this->unit;}$/;"	f
h	HTMLModule/Legacy.php	/^            $h = $this->addBlankElement("h$i");$/;"	v
handleElement	Injector.php	/^    public function handleElement(&$token) {}$/;"	f
handleElement	Injector/AutoParagraph.php	/^    public function handleElement(&$token) {$/;"	f
handleElement	Injector/DisplayLinkURI.php	/^    public function handleElement(&$token) {$/;"	f
handleElement	Injector/RemoveEmpty.php	/^    public function handleElement(&$token) {$/;"	f
handleElement	Injector/SafeObject.php	/^    public function handleElement(&$token) {$/;"	f
handleEnd	Injector.php	/^    public function handleEnd(&$token) {$/;"	f
handleEnd	Injector/DisplayLinkURI.php	/^    public function handleEnd(&$token) {$/;"	f
handleEnd	Injector/SafeObject.php	/^    public function handleEnd(&$token) {$/;"	f
handleText	Injector.php	/^    public function handleText(&$token) {}$/;"	f
handleText	Injector/AutoParagraph.php	/^    public function handleText(&$token) {$/;"	f
handleText	Injector/Linkify.php	/^    public function handleText(&$token) {$/;"	f
handleText	Injector/PurifierLinkify.php	/^    public function handleText(&$token) {$/;"	f
has	Lexer.php	/^     * @note The behavior of this class has changed, rather than accepting$/;"	c
has	PropertyList.php	/^    public function has($name) {$/;"	f
has_space	Lexer/DirectLex.php	/^        $has_space = strpos($string, ' ');$/;"	v
hash	ConfigSchema/InterchangeBuilder.php	/^            $hash = new HTMLPurifier_StringHash($hash);$/;"	v
hash	DefinitionCache.php	/^            $hash == $config->getBatchSerial($this->type) &&$/;"	v
haystack	Lexer/DirectLex.php	/^            $haystack = substr($haystack, $offset, $length);$/;"	v
head_pointer	Lexer/PH5P.php	/^    private $head_pointer = null;$/;"	v
heavyHeader	Printer/HTMLDefinition.php	/^    protected function heavyHeader($text, $num = 1) {$/;"	f
hex	AttrDef/CSS/Color.php	/^                $hex = $color;$/;"	v
hex	AttrDef/CSS/Color.php	/^                $hex = substr($color, 1);$/;"	v
hex	AttrDef/HTML/Color.php	/^        else $hex = $string;$/;"	v
hex	AttrDef/HTML/Color.php	/^        if ($length === 3) $hex = $hex[0].$hex[0].$hex[1].$hex[1].$hex[2].$hex[2];$/;"	v
hex	AttrDef/HTML/Color.php	/^        if ($string[0] === '#') $hex = substr($string, 1);$/;"	v
hex	AttrDef/URI/IPv6.php	/^        $hex = '[0-9a-fA-F]';$/;"	v
hidden_elements	Strategy/RemoveForeignElements.php	/^        $hidden_elements     = $config->get('Core.HiddenElements');$/;"	v
hierarchical	URIScheme.php	/^    public $hierarchical = false;$/;"	v
hierarchical	URIScheme/ftp.php	/^    public $hierarchical = true;$/;"	v
hierarchical	URIScheme/http.php	/^    public $hierarchical = true;$/;"	v
host	URIParser.php	/^            $host       = !empty($matches[3]) ? $matches[3] : '';$/;"	v
host_def	URI.php	/^            $host_def = new HTMLPurifier_AttrDef_URI_Host();$/;"	v
host_parts	URIFilter/DisableExternal.php	/^        $host_parts = array_reverse(explode('.', $uri->host));$/;"	v
hr	HTMLModule/Legacy.php	/^        $hr = $this->addBlankElement('hr');$/;"	v
html	ConfigSchema/Builder/Xml.php	/^        $html = $purifier->purify($html);$/;"	v
html	Filter/ExtractStyleBlocks.php	/^        $html = preg_replace_callback('#<style(?:\\s.*)?>(.+)<\/style>#isU', array($this, 'styleCallback'), $html);$/;"	v
html	Generator.php	/^            $html = (string) $tidy; \/\/ explicit cast necessary$/;"	v
html	Generator.php	/^        $html = '';$/;"	v
html	Generator.php	/^        if ($nl !== "\\n") $html = str_replace("\\n", $nl, $html);$/;"	v
html	Lexer.php	/^            $html = $this->escapeCommentedCDATA($html);$/;"	v
html	Lexer.php	/^            $html = $this->extractBody($html);$/;"	v
html	Lexer.php	/^        $html = $this->_entity_parser->substituteNonSpecialEntities($html);$/;"	v
html	Lexer.php	/^        $html = $this->escapeCDATA($html);$/;"	v
html	Lexer.php	/^        $html = HTMLPurifier_Encoder::cleanUTF8($html);$/;"	v
html	Lexer.php	/^        $html = str_replace("\\r", "\\n", $html);$/;"	v
html	Lexer.php	/^        $html = str_replace("\\r\\n", "\\n", $html);$/;"	v
html	Lexer/DOMLex.php	/^                $html = preg_replace("\/<($char)\/i", '&lt;\\\\1', $html);$/;"	v
html	Lexer/DOMLex.php	/^            $html = preg_replace_callback($comment, array($this, 'callbackArmorCommentEntities'), $html);$/;"	v
html	Lexer/DOMLex.php	/^            $html = preg_replace_callback($comment, array($this, 'callbackUndoCommentSubst'), $html); \/\/ fix comments$/;"	v
html	Lexer/DOMLex.php	/^        $html = $this->normalize($html, $config, $context);$/;"	v
html	Lexer/DOMLex.php	/^        $html = $this->wrapHTML($html, $config, $context);$/;"	v
html	Lexer/DirectLex.php	/^            $html = preg_replace_callback('#(<script[^>]*>)(\\s*[^<].+?)(<\/script>)#si',$/;"	v
html	Lexer/DirectLex.php	/^        $html = $this->normalize($html, $config, $context);$/;"	v
html	Lexer/PH5P.php	/^            $html = $this->dom->createElement('html');$/;"	v
i	AttrDef/CSS/Background.php	/^        $i = 0; \/\/ number of catches$/;"	v
i	AttrDef/CSS/BackgroundPosition.php	/^        $i = 0;$/;"	v
i	AttrDef/CSS/Composite.php	/^        foreach ($this->defs as $i => $def) {$/;"	v
i	AttrDef/CSS/Font.php	/^                            $i = $j;$/;"	v
i	AttrDef/CSS/ListStyle.php	/^        $i = 0; \/\/ number of catches$/;"	v
i	ChildDef/Required.php	/^            foreach ($elements as $i => $x) {$/;"	v
i	ChildDef/StrictBlockquote.php	/^        foreach ($result as $i => $token) {$/;"	v
i	ConfigSchema/Validator.php	/^        foreach ($interchange->directives as $i => $directive) {$/;"	v
i	ContentSets.php	/^            foreach ($this->lookup as $i => $set) {$/;"	v
i	ContentSets.php	/^        foreach ($array as $i => $k) {$/;"	v
i	Encoder.php	/^        for( $i = 0; $i < $len; $i++ ) {$/;"	v
i	HTMLDefinition.php	/^        foreach ($this->info_injector as $i => $injector) {$/;"	v
i	HTMLModule/Presentation.php	/^        $i = $this->addElement('i',      'Inline', 'Inline', 'Common');$/;"	v
i	HTMLModuleManager.php	/^            foreach ($module->info_injector as $i => $injector) {$/;"	v
i	Injector.php	/^        if ($i === null) $i = $this->inputIndex + 1;$/;"	v
i	Injector.php	/^        if ($i === null) $i = $this->inputIndex - 1;$/;"	v
i	Injector.php	/^        if ($i === null) $i = $this->inputIndex;$/;"	v
i	Injector.php	/^     *          functions by setting $i = null beforehand!$/;"	v
i	Injector/AutoParagraph.php	/^                    $i = null;$/;"	v
i	Injector/AutoParagraph.php	/^                $i = $nesting = null;$/;"	v
i	Injector/AutoParagraph.php	/^                $i = null;$/;"	v
i	Injector/Linkify.php	/^        \/\/ $i = index$/;"	v
i	Injector/PurifierLinkify.php	/^        \/\/ $i = index$/;"	v
i	Injector/SafeObject.php	/^                $i = count($this->objectStack) - 1;$/;"	v
i	Language.php	/^        foreach ($args as $i => $value) {$/;"	v
i	Printer.php	/^            if ($i > 0 && !($polite && $i == 1)) $ret .= ', ';$/;"	v
i	Printer.php	/^            if ($polite && $i == 1) $ret .= 'and ';$/;"	v
i	Printer.php	/^        $i = count($array);$/;"	v
i	Printer/ConfigForm.php	/^                    foreach ($value as $i => $v) {$/;"	v
i	Strategy/FixNesting.php	/^                    $i = $parent_index;$/;"	v
i	Strategy/FixNesting.php	/^                    if ($i == 0 || $i == $size - 1) {$/;"	v
i	Strategy/MakeWellFormed.php	/^                    foreach ($this->injectors as $i => $injector) {$/;"	v
i	Strategy/MakeWellFormed.php	/^                $i = false;$/;"	v
i	Strategy/MakeWellFormed.php	/^                foreach ($this->injectors as $i => $injector) {$/;"	v
i	Strategy/MakeWellFormed.php	/^        $i = false; \/\/ injector index$/;"	v
i	URIFilter/DisableExternal.php	/^        foreach ($this->ourHostParts as $i => $x) {$/;"	v
i	UnitConverter.php	/^            \/\/ Pre-condition: $i == 0$/;"	v
i	VarParser/Flexible.php	/^                    foreach ($var as $i => $j) $var[$i] = trim($j);$/;"	v
iconv	Encoder.php	/^        if ($iconv === null) $iconv = function_exists('iconv');$/;"	v
iconv	Encoder.php	/^        static $iconv = null;$/;"	v
id	AttrDef/HTML/ID.php	/^            if (strpos($id, $prefix) !== 0) $id = $prefix . $id;$/;"	v
id	AttrDef/HTML/ID.php	/^        $id = trim($id); \/\/ trim it first$/;"	v
id	AttrTransform/Name.php	/^        $id = $this->confiscateAttr($attr, 'name');$/;"	v
id	ConfigSchema/InterchangeBuilder.php	/^        $id = $directive->id->toString(); \/\/ convenience$/;"	v
id	ConfigSchema/InterchangeBuilder.php	/^    protected function id($id) {$/;"	f
id	ConfigSchema/Validator.php	/^            $id = $directive->id->toString();$/;"	v
id	ConfigSchema/Validator.php	/^        $id = $d->id->toString();$/;"	v
id	Lexer/PH5P.php	/^                    $id = substr($e_name, 0, $c);$/;"	v
id_accumulator	AttrDef/HTML/ID.php	/^            $id_accumulator =& $context->get('IDAccumulator');$/;"	v
id_accumulator	AttrValidator.php	/^            $id_accumulator = HTMLPurifier_IDAccumulator::build($config, $context);$/;"	v
id_accumulator	IDAccumulator.php	/^        $id_accumulator = new HTMLPurifier_IDAccumulator();$/;"	v
id_string	ConfigSchema/Validator.php	/^        $id_string = $id->toString();$/;"	v
ids	IDAccumulator.php	/^    public $ids = array();$/;"	v
if	HTMLDefinition.php	/^ *       update that class if things here change.$/;"	c
ignore_error	Context.php	/^    public function &get($name, $ignore_error = false) {$/;"	v
img	HTMLModule/Image.php	/^        $img = $this->addElement($/;"	v
img	HTMLModule/Legacy.php	/^        $img = $this->addBlankElement('img');$/;"	v
implementations	DefinitionCacheFactory.php	/^    protected $implementations = array();$/;"	v
in	Encoder.php	/^                        !($in == 9 || $in == 13 || $in == 10) \/\/ save \\r\\t\\n$/;"	v
in	Encoder.php	/^                    if (($in <= 31 || $in == 127) &&$/;"	v
in	Encoder.php	/^            $in = ord($str{$i});$/;"	v
in	Encoder.php	/^     * @note This is very similar to the unichr function in$/;"	f
inBody	Lexer/PH5P.php	/^    private function inBody($token) {$/;"	f
inCaption	Lexer/PH5P.php	/^    private function inCaption($token) {$/;"	f
inCell	Lexer/PH5P.php	/^    private function inCell($token) {$/;"	f
inColumnGroup	Lexer/PH5P.php	/^    private function inColumnGroup($token) {$/;"	f
inFrameset	Lexer/PH5P.php	/^    private function inFrameset($token) {$/;"	f
inHead	Lexer/PH5P.php	/^    private function inHead($token) {$/;"	f
inRow	Lexer/PH5P.php	/^    private function inRow($token) {$/;"	f
inSelect	Lexer/PH5P.php	/^    private function inSelect($token) {$/;"	f
inTable	Lexer/PH5P.php	/^    private function inTable($token) {$/;"	f
inTableBody	Lexer/PH5P.php	/^    private function inTableBody($token) {$/;"	f
in_stack	Lexer/PH5P.php	/^                                $in_stack = in_array($formatting_element, $this->stack, true);$/;"	v
index	Config.php	/^    public function mergeArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true) {$/;"	v
index	Config.php	/^    public static function loadArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true, $schema = null) {$/;"	v
index	Config.php	/^    public static function prepareArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true, $schema = null) {$/;"	v
info	AttrCollections.php	/^    public $info = array();$/;"	v
info	AttrDef/CSS/Border.php	/^    protected $info = array();$/;"	v
info	AttrDef/CSS/Font.php	/^    protected $info = array();$/;"	v
info	AttrTypes.php	/^    protected $info = array();$/;"	v
info	CSSDefinition.php	/^    public $info = array();$/;"	v
info	ConfigSchema.php	/^    public $info = array();$/;"	v
info	ConfigSchema/InterchangeBuilder.php	/^        $info = parse_ini_file($dir . 'info.ini');$/;"	v
info	ContentSets.php	/^    public $info = array();$/;"	v
info	HTMLDefinition.php	/^    public $info = array();$/;"	v
info	HTMLModule.php	/^    public $info = array();$/;"	v
info_attr_transform_post	HTMLDefinition.php	/^    public $info_attr_transform_post = array();$/;"	v
info_attr_transform_post	HTMLModule.php	/^    public $info_attr_transform_post = array();$/;"	v
info_attr_transform_pre	HTMLDefinition.php	/^    public $info_attr_transform_pre = array();$/;"	v
info_attr_transform_pre	HTMLModule.php	/^    public $info_attr_transform_pre = array();$/;"	v
info_block_wrapper	HTMLDefinition.php	/^    public $info_block_wrapper = 'p';$/;"	v
info_content_sets	HTMLDefinition.php	/^    public $info_content_sets = array();$/;"	v
info_global_attr	HTMLDefinition.php	/^    public $info_global_attr = array();$/;"	v
info_injector	HTMLDefinition.php	/^    public $info_injector = array();$/;"	v
info_injector	HTMLModule.php	/^    public $info_injector = array();$/;"	v
info_parent	HTMLDefinition.php	/^    public $info_parent = 'div';$/;"	v
info_tag_transform	HTMLDefinition.php	/^    public $info_tag_transform = array();$/;"	v
info_tag_transform	HTMLModule.php	/^    public $info_tag_transform = array();$/;"	v
inherit	Config.php	/^    public static function inherit(HTMLPurifier_Config $config) {$/;"	f
init	ChildDef/StrictBlockquote.php	/^    private function init($config) {$/;"	f
init	ChildDef/StrictBlockquote.php	/^    protected $init = false;$/;"	v
initPhase	Lexer/PH5P.php	/^    private function initPhase($token) {$/;"	f
injector	HTMLModuleManager.php	/^                    $injector = new $class;$/;"	v
injector	Strategy/MakeWellFormed.php	/^                $injector = "HTMLPurifier_Injector_$injector";$/;"	v
injector	Strategy/MakeWellFormed.php	/^                $injector = new $injector;$/;"	v
injector	Strategy/MakeWellFormed.php	/^            $injector = "HTMLPurifier_Injector_$injector";$/;"	v
injector	Strategy/MakeWellFormed.php	/^        foreach ($injectors as $injector => $b) {$/;"	v
injector	Strategy/MakeWellFormed.php	/^    protected function processToken($token, $injector = -1) {$/;"	v
injectors	Strategy/MakeWellFormed.php	/^        $injectors = $config->getBatch('AutoFormat');$/;"	v
input	HTMLModule/Forms.php	/^        $input = $this->addElement('input', 'Formctrl', 'Empty', 'Common', array($/;"	v
insertBefore	Strategy/MakeWellFormed.php	/^    private function insertBefore($token) {$/;"	f
insertComment	Lexer/PH5P.php	/^    private function insertComment($data) {$/;"	f
insertElement	Lexer/PH5P.php	/^    private function insertElement($token, $append = true, $check = false) {$/;"	f
insertText	Lexer/PH5P.php	/^    private function insertText($data) {$/;"	f
inside_tag	Lexer/DirectLex.php	/^                    $inside_tag = false;$/;"	v
inside_tag	Lexer/DirectLex.php	/^                $inside_tag = false;$/;"	v
inside_tag	Lexer/DirectLex.php	/^                $inside_tag = true;$/;"	v
inside_tag	Lexer/DirectLex.php	/^        $inside_tag = false; \/\/ whether or not we're parsing the inside of a tag$/;"	v
inst	Lexer.php	/^                    $inst = new HTMLPurifier_Lexer_DOMLex();$/;"	v
inst	Lexer.php	/^                    $inst = new HTMLPurifier_Lexer_DirectLex();$/;"	v
inst	Lexer.php	/^                    $inst = new HTMLPurifier_Lexer_PH5P();$/;"	v
inst	Lexer.php	/^            $inst = $lexer;$/;"	v
inst	Lexer.php	/^        $inst = null;$/;"	v
instance	ConfigSchema.php	/^    public static function instance($prototype = null) {$/;"	f
instance	DefinitionCacheFactory.php	/^            $instance = $prototype;$/;"	v
instance	DefinitionCacheFactory.php	/^            $instance = new HTMLPurifier_DefinitionCacheFactory();$/;"	v
instance	DefinitionCacheFactory.php	/^    public static function instance($prototype = null) {$/;"	f
instance	EntityLookup.php	/^            $instance = $prototype;$/;"	v
instance	EntityLookup.php	/^            $instance = new HTMLPurifier_EntityLookup();$/;"	v
instance	EntityLookup.php	/^        static $instance = null;$/;"	v
instance	EntityLookup.php	/^    public static function instance($prototype = false) {$/;"	f
instance	LanguageFactory.php	/^            $instance = $prototype;$/;"	v
instance	LanguageFactory.php	/^            $instance = new HTMLPurifier_LanguageFactory();$/;"	v
instance	LanguageFactory.php	/^        static $instance = null;$/;"	v
instance	LanguageFactory.php	/^    public static function instance($prototype = null) {$/;"	f
instance	URISchemeRegistry.php	/^            $instance = $prototype;$/;"	v
instance	URISchemeRegistry.php	/^            $instance = new HTMLPurifier_URISchemeRegistry();$/;"	v
instance	URISchemeRegistry.php	/^        static $instance = null;$/;"	v
instance	URISchemeRegistry.php	/^    public static function instance($prototype = null) {$/;"	f
int	AttrDef/CSS/Filter.php	/^            $int = (int) $value;$/;"	v
int	AttrDef/HTML/MultiLength.php	/^        $int = (int) $int;$/;"	v
int	AttrDef/HTML/MultiLength.php	/^        $int = substr($string, 0, $length - 1);$/;"	v
int	AttrDef/HTML/Pixels.php	/^        $int = (int) $string;$/;"	v
int	EntityParser.php	/^            $int = $is_hex ? hexdec($matches[1]) : (int) $matches[2];$/;"	v
int	PercentEncoder.php	/^            $int = hexdec($encoding);$/;"	v
integer	AttrDef/Integer.php	/^            if ($digits === '0') $integer = '0'; \/\/ rm minus sign for zero$/;"	v
integer	AttrDef/Integer.php	/^        $integer = $this->parseCDATA($integer);$/;"	v
integer	AttrDef/Integer.php	/^        if (!$this->zero     && $integer == 0) return false;$/;"	v
interchange	ConfigSchema/InterchangeBuilder.php	/^        $interchange = new HTMLPurifier_ConfigSchema_Interchange();$/;"	v
internal_precision	UnitConverter.php	/^    public function __construct($output_precision = 4, $internal_precision = 10, $force_no_bcmath = false) {$/;"	v
into	ChildDef/StrictBlockquote.php	/^        \/\/ trick the parent class into thinking it allows more$/;"	c
ip	AttrDef/URI/Host.php	/^            $ip = substr($string, 1, $length - 2);$/;"	v
ip	AttrDef/URI/IPv6.php	/^                $ip = array_map('dechex', $ip);$/;"	v
ip	AttrDef/URI/IPv6.php	/^                $ip = explode('.', $find[0]);$/;"	v
ipv4	AttrDef/URI/Host.php	/^        $ipv4 = $this->ipv4->validate($string, $config, $context);$/;"	v
is	ChildDef/Custom.php	/^ * @warning Currently this class is an all or nothing proposition, that is,$/;"	c
is	ChildDef/Empty.php	/^ * @warning validateChildren() in this class is actually never called, because$/;"	c
is	Config.php	/^ * @warning This class is strongly defined: that means that the class$/;"	c
is	ConfigSchema.php	/^     * This class is friendly with HTMLPurifier_Config. If you need introspection$/;"	c
is	Doctype.php	/^ * @note This class is inspected by Printer_HTMLDefinition->renderDoctype.$/;"	c
is	ElementDef.php	/^ * @note This class is inspected by HTMLPurifier_Printer_HTMLDefinition.$/;"	c
is	HTMLDefinition.php	/^ * @note This class is inspected by Printer_HTMLDefinition; please$/;"	c
is	Lexer.php	/^ *       This means that, even though this class is not runnable, it will$/;"	c
is	Lexer/PEARSax3.php	/^     * Close tag event handler, interface is defined by PEAR package.$/;"	i
is	Lexer/PEARSax3.php	/^     * Data event handler, interface is defined by PEAR package.$/;"	i
is	Lexer/PEARSax3.php	/^     * Escaped text handler, interface is defined by PEAR package.$/;"	i
is	Lexer/PEARSax3.php	/^     * Open tag event handler, interface is defined by PEAR package.$/;"	i
is	PercentEncoder.php	/^     * @warning This function is affected by $preserve, even though the$/;"	f
is	Token/Tag.php	/^     * Static bool marker that indicates the class is a tag.$/;"	c
is	TokenFactory.php	/^ *       constructor).  This class is for that optimization.$/;"	c
isFinalized	Config.php	/^    public function isFinalized($error = false) {$/;"	f
isOld	DefinitionCache.php	/^    public function isOld($key, $config) {$/;"	f
isValid	Length.php	/^    public function isValid() {$/;"	f
isWsOrNbsp	Injector/RemoveEmpty.php	/^                    $isWsOrNbsp = $plain === '' || ctype_space($plain);$/;"	v
is_child	ChildDef/Custom.php	/^            $is_child = ($nesting == 0); \/\/ direct$/;"	v
is_child	ChildDef/Required.php	/^            $is_child = ($nesting == 0);$/;"	v
is_child	ChildDef/Table.php	/^            $is_child = ($nesting == 0);$/;"	v
is_collecting	ChildDef/Table.php	/^                        $is_collecting = true;$/;"	v
is_collecting	ChildDef/Table.php	/^                    $is_collecting = false;$/;"	v
is_collecting	ChildDef/Table.php	/^        $is_collecting = false; \/\/ are we globbing together tokens to package$/;"	v
is_collecting	ChildDef/Table.php	/^        if (!empty($collection) && $is_collecting == false){$/;"	v
is_deleting	ChildDef/Required.php	/^                    $is_deleting = true;$/;"	v
is_deleting	ChildDef/Required.php	/^                $is_deleting = false;$/;"	v
is_deleting	ChildDef/Required.php	/^        $is_deleting = false;$/;"	v
is_end_tag	Lexer/DirectLex.php	/^                $is_end_tag = (strpos($segment,'\/') === 0);$/;"	v
is_folder	URIFilter/MakeAbsolute.php	/^                $is_folder = true;$/;"	v
is_folder	URIFilter/MakeAbsolute.php	/^            $is_folder = false;$/;"	v
is_folder	URIFilter/MakeAbsolute.php	/^        $is_folder = false;$/;"	v
is_hex	EntityParser.php	/^            $is_hex = (@$entity[2] === 'x');$/;"	v
is_important	AttrDef/CSS/ImportantDecorator.php	/^                $is_important = true;$/;"	v
is_important	AttrDef/CSS/ImportantDecorator.php	/^        $is_important = false;$/;"	v
is_inline	ChildDef/StrictBlockquote.php	/^                            $is_inline = false;$/;"	v
is_inline	ChildDef/StrictBlockquote.php	/^                        $is_inline = true;$/;"	v
is_inline	ChildDef/StrictBlockquote.php	/^        $is_inline = false;$/;"	v
is_inline	Strategy/FixNesting.php	/^                    $is_inline = $count - 1;$/;"	v
is_inline	Strategy/FixNesting.php	/^                    $is_inline = false;$/;"	v
is_inline	Strategy/FixNesting.php	/^        $is_inline = $definition->info_parent_def->descendants_are_inline;$/;"	v
is_num	EntityParser.php	/^        $is_num = (@$matches[0][1] === '#');$/;"	v
is_self_closing	Lexer/DirectLex.php	/^                $is_self_closing = (strrpos($segment,'\/') === $strlen_segment-1);$/;"	v
is_tag	Token/Tag.php	/^    public $is_tag = true;$/;"	v
is_whitespace	Token/Comment.php	/^    public $is_whitespace = true;$/;"	v
itself	StringHashParser.php	/^ * files, but the class itself is usage agnostic.$/;"	c
ix	Strategy/MakeWellFormed.php	/^        foreach ($this->injectors as $ix => $injector) {$/;"	v
j	AttrDef/CSS/Font.php	/^                            $j = $i;$/;"	v
j	Strategy/MakeWellFormed.php	/^                    \/\/ notice we exclude $j == 0, i.e. the current ending tag, from$/;"	v
k	CSSDefinition.php	/^        foreach ($this->info as $k => $v) {$/;"	v
k	ConfigSchema/InterchangeBuilder.php	/^        foreach ($hash as $k => $v) {$/;"	v
k	ElementDef.php	/^        foreach ($a2 as $k => $v) {$/;"	v
k	ElementDef.php	/^        foreach($def->attr as $k => $v) {$/;"	v
k	Filter/ExtractStyleBlocks.php	/^        foreach ($this->_tidy->css as $k => $decls) {$/;"	v
k	HTMLDefinition.php	/^            foreach ($module->info_injector as $k => $v) {$/;"	v
k	HTMLDefinition.php	/^            foreach($module->info_attr_transform_post as $k => $v) {$/;"	v
k	HTMLDefinition.php	/^            foreach($module->info_attr_transform_pre as $k => $v) {$/;"	v
k	HTMLDefinition.php	/^            foreach($module->info_tag_transform as $k => $v) {$/;"	v
k	HTMLDefinition.php	/^        foreach ($this->info as $k => $v) {$/;"	v
k	HTMLModuleManager.php	/^            foreach ($modules as $k => $m) {$/;"	v
k	UnitConverter.php	/^        foreach (self::$units as $k => $x) {$/;"	v
key	AttrCollections.php	/^            foreach ($this->info[$merge[$i]] as $key => $value) {$/;"	v
key	AttrDef/CSS/Background.php	/^            foreach ($caught as $key => $status) {$/;"	v
key	AttrDef/CSS/Filter.php	/^            $key   = trim($key);$/;"	v
key	AttrDef/CSS/ListStyle.php	/^            foreach ($caught as $key => $status) {$/;"	v
key	Config.php	/^            $key = "$key.$a";$/;"	v
key	Config.php	/^            $key = "$key.$directive";$/;"	v
key	Config.php	/^            $key = str_replace('_', '.', $key);$/;"	v
key	Config.php	/^        foreach ($config_array as $key => $value) {$/;"	v
key	Config.php	/^        foreach ($schema->info as $key => $def) {$/;"	v
key	ConfigSchema.php	/^        foreach ($this->info as $key => $v) {$/;"	v
key	ContentSets.php	/^            foreach ($module->content_sets as $key => $value) {$/;"	v
key	ContentSets.php	/^        foreach ($this->lookup as $key => $lookup) {$/;"	v
key	Context.php	/^        foreach ($context_array as $key => $discard) {$/;"	v
key	DefinitionCache/Decorator/Memory.php	/^        $key = $this->generateKey($config);$/;"	v
key	DefinitionCache/Serializer.php	/^            $key = substr($filename, 0, strlen($filename) - 4);$/;"	v
key	DefinitionCache/Serializer.php	/^        $key = $this->generateKey($config);$/;"	v
key	Generator.php	/^        foreach ($assoc_array_of_attributes as $key => $value) {$/;"	v
key	HTMLDefinition.php	/^        foreach ($forbidden_attributes as $key => $v) {$/;"	v
key	Lexer/DirectLex.php	/^            $key = substr($string, $key_begin, $key_end - $key_begin);$/;"	v
key	Lexer/PEARSax3.php	/^        foreach ($attrs as $key => $attr) {$/;"	v
key	PropertyListIterator.php	/^        $key = $this->getInnerIterator()->key();$/;"	v
key	Strategy/ValidateAttributes.php	/^        foreach ($tokens as $key => $token) {$/;"	v
key	Token/Tag.php	/^        foreach ($attr as $key => $value) {$/;"	v
key	VarParser/Flexible.php	/^                    foreach ($var as $key => $value) {$/;"	v
key_begin	Lexer/DirectLex.php	/^            $key_begin = $cursor; \/\/we're currently at the start of the key$/;"	v
key_end	Lexer/DirectLex.php	/^            $key_end = $cursor; \/\/ now at the end of the key$/;"	v
keys	AttrDef/CSS/URI.php	/^        $keys   = array(  '(',   ')',   ',',   ' ',   '"',   "'");$/;"	v
keys	ChildDef/Required.php	/^        $keys = array_keys($elements);$/;"	v
keys	ContentSets.php	/^    protected $keys = array();$/;"	v
keys	HTMLDefinition.php	/^                    $keys = array("$tag@$attr", $attr, "*@$attr", "$tag.$attr", "*.$attr");$/;"	v
keys	HTMLDefinition.php	/^                $keys = array($attr, "*@$attr", "*.$attr");$/;"	v
keys	Language.php	/^                $keys = array_keys($value);$/;"	v
keys	LanguageFactory.php	/^    public $keys = array('fallback', 'messages', 'errorNames');$/;"	v
keys	VarParser.php	/^                    $keys = array_keys($var);$/;"	v
keys	VarParser/Flexible.php	/^                $keys = array_keys($var);$/;"	v
keywords	AttrDef/CSS/BackgroundPosition.php	/^        $keywords = array();$/;"	v
l	Injector/Linkify.php	/^        \/\/ $l = is link$/;"	v
l	Injector/PurifierLinkify.php	/^        \/\/ $l = is link$/;"	v
l	Length.php	/^            $l = $converter->convert($l, $this->unit);$/;"	v
l	Lexer/PH5P.php	/^    private function character($s, $l = 0) {$/;"	v
label	HTMLModule/Forms.php	/^        $label = $this->addElement('label', 'Formctrl', 'Optional: #PCDATA | Inline', 'Common', array($/;"	v
lang	AttrTransform/Lang.php	/^        $lang     = isset($attr['lang']) ? $attr['lang'] : false;$/;"	v
lang	LanguageFactory.php	/^                $lang = $this->create($config, $context, $fallback);$/;"	v
lang	LanguageFactory.php	/^                $lang = new $class($config, $context);$/;"	v
lang	LanguageFactory.php	/^            $lang = new HTMLPurifier_Language($config, $context);$/;"	v
languages_seen	LanguageFactory.php	/^        static $languages_seen = array(); \/\/ recursion guard$/;"	v
last	Lexer/DOMLex.php	/^            $last = end($tokens);$/;"	v
last	Lexer/PH5P.php	/^                $last = true;$/;"	v
last	Lexer/PH5P.php	/^            $last = count($this->token['attr']) - 1;$/;"	v
last	Lexer/PH5P.php	/^        $last = count($this->token['attr']) - 1;$/;"	v
last	Lexer/PH5P.php	/^        $last = false;$/;"	v
last_char	AttrDef/HTML/Length.php	/^        $last_char = $string[$length - 1];$/;"	v
last_char	AttrDef/HTML/MultiLength.php	/^        $last_char = $string[$length - 1];$/;"	v
last_char	Lexer/DirectLex.php	/^            $last_char  = @$quoted_value[strlen($quoted_value)-1];$/;"	v
last_node	Lexer/PH5P.php	/^                            $last_node = $node;$/;"	v
last_node	Lexer/PH5P.php	/^                        $last_node = $furthest_block;$/;"	v
lbit	AttrDef/CSS/BackgroundPosition.php	/^            $lbit = ctype_lower($bit) ? $bit : strtolower($bit);$/;"	v
lclass	Printer.php	/^        $lclass = strtolower($class);$/;"	v
left	AttrDef/CSS/Number.php	/^        $left  = ltrim($left,  '0');$/;"	v
len	Encoder.php	/^        $len = strlen($str);$/;"	v
len	Lexer/PH5P.php	/^                $len = strlen($e_name);$/;"	v
len	Lexer/PH5P.php	/^            $len  = strcspn($this->data, '<&', $this->char);$/;"	v
lenc	Encoder.php	/^            $lenc = strtolower($encoding);$/;"	v
leng	Lexer/PH5P.php	/^                    $leng = count($this->a_formatting);$/;"	v
leng	Lexer/PH5P.php	/^        $leng = count($this->stack);$/;"	v
length	AttrDef/CSS/Color.php	/^                $length = strlen($part);$/;"	v
length	AttrDef/CSS/Color.php	/^            $length = strlen($color);$/;"	v
length	AttrDef/CSS/Color.php	/^            $length = strlen($hex);$/;"	v
length	AttrDef/CSS/FontFamily.php	/^                $length = strlen($font);$/;"	v
length	AttrDef/CSS/Length.php	/^        $length = HTMLPurifier_Length::make($string);$/;"	v
length	AttrDef/CSS/Multiple.php	/^        $length = count($parts);$/;"	v
length	AttrDef/CSS/Percentage.php	/^        $length = strlen($string);$/;"	v
length	AttrDef/HTML/Color.php	/^        $length = strlen($hex);$/;"	v
length	AttrDef/HTML/Length.php	/^        $length = strlen($string);$/;"	v
length	AttrDef/HTML/MultiLength.php	/^        $length = strlen($string);$/;"	v
length	AttrDef/HTML/Pixels.php	/^        $length = strlen($string);$/;"	v
length	AttrDef/Lang.php	/^            $length = strlen($subtags[$i]);$/;"	v
length	AttrDef/Lang.php	/^        $length = strlen($subtags[0]);$/;"	v
length	AttrDef/Lang.php	/^        $length = strlen($subtags[1]);$/;"	v
length	AttrDef/URI/Host.php	/^        $length = strlen($string);$/;"	v
length	AttrTransform/Length.php	/^        $length = $this->confiscateAttr($attr, $this->name);$/;"	v
length	Lexer/DirectLex.php	/^            $length = false;$/;"	v
length	Lexer/DirectLex.php	/^            $length = strlen($html);$/;"	v
length	Lexer/PH5P.php	/^                        $length = count($this->stack);$/;"	v
length	PercentEncoder.php	/^            $length = strlen($part);$/;"	v
length	Strategy/FixNesting.php	/^                $length = $j - $i + 1;$/;"	v
length	Strategy/FixNesting.php	/^                $length = $j - $i - 1;$/;"	v
level	HTMLModule/Tidy.php	/^        $level = $config->get('HTML.TidyLevel');$/;"	v
levels	HTMLModule/Tidy.php	/^    public $levels = array(0 => 'none', 'light', 'medium', 'heavy');$/;"	v
lexer	Lexer.php	/^                    $lexer = 'DOMLex';$/;"	v
lexer	Lexer.php	/^                    $lexer = 'DirectLex';$/;"	v
lexer	Lexer.php	/^            $lexer = $config->get('Core.LexerImpl');$/;"	v
lexer	Lexer.php	/^            $lexer = $config;$/;"	v
lexer	Lexer/PH5P.php	/^            $lexer = new HTMLPurifier_Lexer_DirectLex();$/;"	v
li	HTMLModule/Legacy.php	/^        $li = $this->addBlankElement('li');$/;"	v
li_types	HTMLModule/Tidy/XHTMLAndHTML4.php	/^            $li_types = $ul_types + $ol_types;$/;"	v
line	ErrorCollector.php	/^        $line  = $token ? $token->line : $this->context->get('CurrentLine', true);$/;"	v
line	ErrorCollector.php	/^        foreach ($this->lines as $line => $col_array) {$/;"	v
line	ErrorCollector.php	/^    private function _renderStruct(&$ret, $struct, $line = null, $col = null) {$/;"	v
line	StringHashParser.php	/^                    $line = trim($line);$/;"	v
line	StringHashParser.php	/^            $line = fgets($fh);$/;"	v
line	StringHashParser.php	/^            $line = rtrim($line, "\\n\\r");$/;"	v
line	StringHashParser.php	/^            if (!$state && $line === '') continue;$/;"	v
line	Token/Comment.php	/^    public function __construct($data, $line = null, $col = null) {$/;"	v
line	Token/Text.php	/^    public function __construct($data, $line = null, $col = null) {$/;"	v
line_height	AttrDef/CSS/Font.php	/^                                $line_height = $bits[$j];$/;"	v
line_height	AttrDef/CSS/Font.php	/^                            $line_height = false;$/;"	v
line_height	AttrDef/CSS/Font.php	/^                        $line_height = false;$/;"	v
lines	ErrorCollector.php	/^    protected $lines = array();$/;"	v
list	Config.php	/^        $list = array();$/;"	v
list	HTMLDefinition.php	/^        $list = str_replace(array(' ', "\\t"), '', $list);$/;"	v
list	HTMLModule.php	/^        if (is_string($list)) $list = func_get_args();$/;"	v
list	Printer/HTMLDefinition.php	/^            $list = array();$/;"	v
list	Printer/HTMLDefinition.php	/^        $list = array();$/;"	v
list_of_children	ChildDef/Custom.php	/^        $list_of_children = '';$/;"	v
list_of_children	ChildDef/Custom.php	/^        $list_of_children = ',' . rtrim($list_of_children, ',');$/;"	v
listify	Language.php	/^    public function listify($array) {$/;"	f
listify	Printer.php	/^    protected function listify($array, $polite = false) {$/;"	f
listifyAttr	Printer/HTMLDefinition.php	/^    protected function listifyAttr($array) {$/;"	f
listifyObjectList	Printer/HTMLDefinition.php	/^    protected function listifyObjectList($array) {$/;"	f
listifyTagLookup	Printer/HTMLDefinition.php	/^    protected function listifyTagLookup($array) {$/;"	f
load	IDAccumulator.php	/^    public function load($array_of_ids) {$/;"	f
load	Language.php	/^    public function load() {$/;"	f
loadArray	Config.php	/^    public function loadArray($config_array) {$/;"	f
loadArray	Context.php	/^    public function loadArray($context_array) {$/;"	f
loadArrayFromForm	Config.php	/^    public static function loadArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true, $schema = null) {$/;"	f
loadIni	Config.php	/^    public function loadIni($filename) {$/;"	f
loadLanguage	LanguageFactory.php	/^    public function loadLanguage($code) {$/;"	f
lock	Config.php	/^        $lock = $this->lock;$/;"	v
log	UnitConverter.php	/^        $log = (int) floor(log(abs($n), 10));$/;"	v
lookup	AttrDef/CSS/BackgroundPosition.php	/^        $lookup = array($/;"	v
lookup	AttrDef/CSS/Filter.php	/^        $lookup = array();$/;"	v
lookup	ConfigSchema/InterchangeBuilder.php	/^    protected function lookup($array) {$/;"	f
lookup	ContentSets.php	/^    public $lookup = array();$/;"	v
lookup	HTMLModuleManager.php	/^        $lookup = $config->get('HTML.AllowedModules');$/;"	v
lookup	VarParser.php	/^            $lookup = array_flip(HTMLPurifier_VarParser::$types);$/;"	v
loops	Lexer/DirectLex.php	/^        $loops = 0;$/;"	v
lower	AttrDef/CSS/Color.php	/^        $lower = strtolower($color);$/;"	v
lowercase_string	AttrDef/CSS/Font.php	/^        $lowercase_string = strtolower($string);$/;"	v
mBytes	Encoder.php	/^                        $mBytes = 1;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 1;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 2;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 3;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 4;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 5;$/;"	v
mBytes	Encoder.php	/^                    $mBytes = 6;$/;"	v
mBytes	Encoder.php	/^        $mBytes = 1; \/\/ cached expected number of octets in the current sequence$/;"	v
mState	Encoder.php	/^                        $mState = 0;$/;"	v
mState	Encoder.php	/^                    $mState = 0;$/;"	v
mState	Encoder.php	/^                    $mState = 1;$/;"	v
mState	Encoder.php	/^                    $mState = 2;$/;"	v
mState	Encoder.php	/^                    $mState = 3;$/;"	v
mState	Encoder.php	/^                    $mState = 4;$/;"	v
mState	Encoder.php	/^                    $mState = 5;$/;"	v
mState	Encoder.php	/^        $mState = 0; \/\/ cached expected number of octets after the current octet$/;"	v
mUcs4	Encoder.php	/^                        $mUcs4  = 0;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4  = 0;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($in);$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($mUcs4 & 0x03) << 24;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($mUcs4 & 0x07) << 18;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($mUcs4 & 0x0F) << 12;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($mUcs4 & 0x1F) << 6;$/;"	v
mUcs4	Encoder.php	/^                    $mUcs4 = ($mUcs4 & 1) << 30;$/;"	v
mUcs4	Encoder.php	/^        $mUcs4  = 0; \/\/ cached Unicode character$/;"	v
mainPhase	Lexer/PH5P.php	/^    private function mainPhase($token) {$/;"	f
maintain_line_numbers	Lexer/DirectLex.php	/^            $maintain_line_numbers = $config->get('Core.CollectErrors');$/;"	v
maintain_line_numbers	Lexer/DirectLex.php	/^        $maintain_line_numbers = $config->get('Core.MaintainLineNumbers');$/;"	v
make	AttrDef.php	/^    public function make($string) {$/;"	f
make	AttrDef/Enum.php	/^    public function make($string) {$/;"	f
make	AttrDef/HTML/Bool.php	/^    public function make($string) {$/;"	f
make	AttrDef/HTML/Pixels.php	/^    public function make($string) {$/;"	f
make	AttrDef/URI.php	/^    public function make($string) {$/;"	f
make	ConfigSchema/Interchange/Id.php	/^    public static function make($id) {$/;"	f
make	DoctypeRegistry.php	/^    public function make($config) {$/;"	f
make	Length.php	/^    static public function make($s) {$/;"	f
makeFixes	HTMLModule/Tidy.php	/^    public function makeFixes() {}$/;"	f
makeFixes	HTMLModule/Tidy/Name.php	/^    public function makeFixes() {$/;"	f
makeFixes	HTMLModule/Tidy/Proprietary.php	/^    public function makeFixes() {$/;"	f
makeFixes	HTMLModule/Tidy/Strict.php	/^    public function makeFixes() {$/;"	f
makeFixes	HTMLModule/Tidy/XHTML.php	/^    public function makeFixes() {$/;"	f
makeFixes	HTMLModule/Tidy/XHTMLAndHTML4.php	/^    public function makeFixes() {$/;"	f
makeFixesForLevel	HTMLModule/Tidy.php	/^    public function makeFixesForLevel($fixes) {$/;"	f
makeFromSerial	ConfigSchema.php	/^    public static function makeFromSerial() {$/;"	f
makeLookup	HTMLModule.php	/^    public function makeLookup($list) {$/;"	f
makeReplace	URIFilter/Munge.php	/^    protected function makeReplace($uri, $config, $context) {$/;"	f
margin	CSSDefinition.php	/^        $margin =$/;"	v
marker	Lexer/PH5P.php	/^                        $marker = end(array_keys($this->a_formatting, self::MARKER, true));$/;"	v
markupDeclarationOpenState	Lexer/PH5P.php	/^    private function markupDeclarationOpenState() {$/;"	f
match	AttrDef/URI/Host.php	/^        $match = preg_match("\/^($domainlabel\\.)*$toplabel\\.?$\/i", $string);$/;"	v
matches	Lexer.php	/^        $matches = array();$/;"	v
matches	URIParser.php	/^            $matches = array();$/;"	v
matches	URIParser.php	/^        $matches = array();$/;"	v
max	AttrDef/CSS/Length.php	/^    public function __construct($min = null, $max = null) {$/;"	v
max	AttrDef/CSS/Multiple.php	/^    public function __construct($single, $max = 4) {$/;"	v
max	AttrDef/HTML/Pixels.php	/^        else $max = (int) $string;$/;"	v
max	AttrDef/HTML/Pixels.php	/^        if ($string === '') $max = null;$/;"	v
max	CSSDefinition.php	/^            $max === null ?$/;"	v
max	CSSDefinition.php	/^        $max = $config->get('CSS.MaxImgLength');$/;"	v
max	HTMLModule/Image.php	/^        $max = $config->get('HTML.MaxImgLength');$/;"	v
max	HTMLModule/SafeEmbed.php	/^        $max = $config->get('HTML.MaxImgLength');$/;"	v
max	HTMLModule/SafeObject.php	/^        $max = $config->get('HTML.MaxImgLength');$/;"	v
may	Bootstrap.php	/^ *      This class may be used without any other files from HTML Purifier.$/;"	c
measures	AttrDef/CSS/BackgroundPosition.php	/^        $measures = array();$/;"	v
merge	AttrCollections.php	/^                $merge = array_merge($merge, $this->info[$merge[$i]][0]);$/;"	v
merge	AttrCollections.php	/^        $merge = $attr[0];$/;"	v
mergeArrayFromForm	Config.php	/^    public function mergeArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true) {$/;"	f
mergeIn	ElementDef.php	/^    public function mergeIn($def) {$/;"	f
mergeInAttrIncludes	HTMLModule.php	/^    public function mergeInAttrIncludes(&$attr, $attr_includes) {$/;"	f
mergeable_keys_list	LanguageFactory.php	/^    protected $mergeable_keys_list = array();$/;"	v
mergeable_keys_map	LanguageFactory.php	/^    protected $mergeable_keys_map = array('messages' => true, 'errorNames' => true);$/;"	v
messages	Language.php	/^    public $messages = array();$/;"	v
messages	Language/messages/en-x-test.php	/^$messages = array($/;"	v
messages	Language/messages/en-x-testmini.php	/^$messages = array($/;"	v
messages	Language/messages/en.php	/^$messages = array($/;"	v
method	DefinitionCacheFactory.php	/^        $method = $config->get('Cache.DefinitionImpl');$/;"	v
minimized	AttrDef.php	/^    public $minimized = false;$/;"	v
minimized	AttrDef/HTML/Bool.php	/^    public $minimized = true;$/;"	v
module	HTMLDefinition.php	/^        $module  = $this->getAnonymousModule();$/;"	v
module	HTMLDefinition.php	/^        $module = $this->getAnonymousModule();$/;"	v
module	HTMLModuleManager.php	/^                $module = $original_module;$/;"	v
module	HTMLModuleManager.php	/^                $module = $prefix . $original_module;$/;"	v
module	HTMLModuleManager.php	/^            $module = $this->modules[$module_name];$/;"	v
module	HTMLModuleManager.php	/^            $module = new $module();$/;"	v
module	HTMLModuleManager.php	/^        if (is_object($module)) $module = $module->name;$/;"	v
module_i	ContentSets.php	/^        foreach ($modules as $module_i => $module) {$/;"	v
modules	ContentSets.php	/^        if (!is_array($modules)) $modules = array($modules);$/;"	v
modules	Doctype.php	/^    public $modules = array();$/;"	v
modules	DoctypeRegistry.php	/^        if (!is_array($modules)) $modules = array($modules);$/;"	v
modules	HTMLModuleManager.php	/^        $modules = $this->doctype->modules;$/;"	v
modules	HTMLModuleManager.php	/^        $modules = array_merge($modules, $this->userModules);$/;"	v
modules	HTMLModuleManager.php	/^    public $modules = array();$/;"	v
mq	Config.php	/^        $mq = $mq_fix && function_exists('get_magic_quotes_gpc') && get_magic_quotes_gpc();$/;"	v
msg	ErrorCollector.php	/^            $msg = $this->locale->formatMessage($msg, $args);$/;"	v
msg	ErrorCollector.php	/^            $msg = $this->locale->getMessage($msg);$/;"	v
msg	ErrorCollector.php	/^        if (!empty($subst)) $msg = strtr($msg, $subst);$/;"	v
mul	UnitConverter.php	/^    private function mul($s1, $s2, $scale) {$/;"	f
mungeRgb	AttrDef.php	/^    protected function mungeRgb($string) {$/;"	f
muteErrorHandler	Encoder.php	/^    public static function muteErrorHandler() {}$/;"	f
muteErrorHandler	Lexer/DOMLex.php	/^    public function muteErrorHandler($errno, $errstr) {}$/;"	f
n	HTMLModuleManager.php	/^            $n = array();$/;"	v
n	HTMLModuleManager.php	/^        foreach ($elements as $n => $v) {$/;"	v
n	Injector/SafeObject.php	/^                $n = $token->attr['name'];$/;"	v
n	Length.php	/^        $n = substr($s, 0, $n_length);$/;"	v
n	Length.php	/^     * String unit. False is permitted if $n = 0.$/;"	v
n	Lexer/PH5P.php	/^                                $n = -1;$/;"	v
n	UnitConverter.php	/^                $n = $this->mul($n, $factor, $cp);$/;"	v
n	UnitConverter.php	/^                $n = '0';$/;"	v
n	UnitConverter.php	/^                $n = bcadd($n, $neg . '0.' .  str_repeat('0', $rp) . '5', $rp + 1);$/;"	v
n	UnitConverter.php	/^                $n = bcadd($n, $neg . '5' . str_repeat('0', $new_log - $sigfigs), 0);$/;"	v
n	UnitConverter.php	/^                $n = bcdiv($n, '1', $rp);$/;"	v
n	UnitConverter.php	/^                $n = substr($n, 0, $sigfigs + strlen($neg)) . str_repeat('0', $new_log - $sigfigs + 1);$/;"	v
n	UnitConverter.php	/^            $n = $this->mul($n, self::$units[$state][$dest_state][1], $cp);$/;"	v
n	UnitConverter.php	/^        $n    = $length->getN();$/;"	v
n	UnitConverter.php	/^        $n = $this->round($n, $sigfigs);$/;"	v
n	UnitConverter.php	/^        $n = ltrim($n, '0+-');$/;"	v
n	UnitConverter.php	/^        $n = rtrim($n, '.');$/;"	v
n	UnitConverter.php	/^        if (strpos($n, '.') !== false) $n = rtrim($n, '0');$/;"	v
n_length	Length.php	/^        $n_length = strspn($s, '1234567890.+-');$/;"	v
name	AttrCollections.php	/^        foreach ($this->info as $name => $attr) {$/;"	v
name	AttrDef/HTML/Class.php	/^        $name = $config->getDefinition('HTML')->doctype->name;$/;"	v
name	AttrDef/HTML/Class.php	/^        if ($name == "XHTML 1.1" || $name == "XHTML 2.0") {$/;"	v
name	AttrTransform/NameSync.php	/^        $name = $attr['name'];$/;"	v
name	AttrTransform/SafeEmbed.php	/^    public $name = "SafeEmbed";$/;"	v
name	AttrTransform/SafeObject.php	/^    public $name = "SafeObject";$/;"	v
name	AttrTransform/SafeParam.php	/^    public $name = "SafeParam";$/;"	v
name	CSSDefinition.php	/^                $name = htmlspecialchars($name);$/;"	v
name	CSSDefinition.php	/^            foreach ($allowed_attributes as $name => $d) {$/;"	v
name	CSSDefinition.php	/^            foreach ($this->info as $name => $d) {$/;"	v
name	ChildDef.php	/^     * Type of child definition, usually right-most part of class name lowercase.$/;"	c
name	Config.php	/^        foreach ($lookup as $name => $b) $list[] = $name;$/;"	v
name	Config.php	/^        foreach ($this->plist->squash() as $name => $value) {$/;"	v
name	DefinitionCache/Decorator/Cleanup.php	/^    public $name = 'Cleanup';$/;"	v
name	DefinitionCache/Decorator/Memory.php	/^    public $name = 'Memory';$/;"	v
name	DefinitionCacheFactory.php	/^     * @param $long Full class name of cache object, for construction$/;"	c
name	DoctypeRegistry.php	/^        $name = $doctype->name;$/;"	v
name	Filter/ExtractStyleBlocks.php	/^                foreach ($style as $name => $value) {$/;"	v
name	Filter/ExtractStyleBlocks.php	/^    public $name = 'ExtractStyleBlocks';$/;"	v
name	Filter/YouTube.php	/^    public $name = 'YouTube';$/;"	v
name	HTMLDefinition.php	/^            foreach ($this->info as $name => $d) {$/;"	v
name	HTMLModule/Bdo.php	/^    public $name = 'Bdo';$/;"	v
name	HTMLModule/CommonAttributes.php	/^    public $name = 'CommonAttributes';$/;"	v
name	HTMLModule/Edit.php	/^    public $name = 'Edit';$/;"	v
name	HTMLModule/Forms.php	/^    public $name = 'Forms';$/;"	v
name	HTMLModule/Hypertext.php	/^    public $name = 'Hypertext';$/;"	v
name	HTMLModule/Image.php	/^    public $name = 'Image';$/;"	v
name	HTMLModule/Legacy.php	/^    public $name = 'Legacy';$/;"	v
name	HTMLModule/List.php	/^    public $name = 'List';$/;"	v
name	HTMLModule/Name.php	/^    public $name = 'Name';$/;"	v
name	HTMLModule/NonXMLCommonAttributes.php	/^    public $name = 'NonXMLCommonAttributes';$/;"	v
name	HTMLModule/Object.php	/^    public $name = 'Object';$/;"	v
name	HTMLModule/Presentation.php	/^    public $name = 'Presentation';$/;"	v
name	HTMLModule/Proprietary.php	/^    public $name = 'Proprietary';$/;"	v
name	HTMLModule/Ruby.php	/^    public $name = 'Ruby';$/;"	v
name	HTMLModule/SafeEmbed.php	/^    public $name = 'SafeEmbed';$/;"	v
name	HTMLModule/SafeObject.php	/^    public $name = 'SafeObject';$/;"	v
name	HTMLModule/Scripting.php	/^    public $name = 'Scripting';$/;"	v
name	HTMLModule/StyleAttribute.php	/^    public $name = 'StyleAttribute';$/;"	v
name	HTMLModule/Tables.php	/^    public $name = 'Tables';$/;"	v
name	HTMLModule/Target.php	/^    public $name = 'Target';$/;"	v
name	HTMLModule/Text.php	/^    public $name = 'Text';$/;"	v
name	HTMLModule/Tidy.php	/^        foreach ($fixes as $name => $fix) {$/;"	v
name	HTMLModule/Tidy/Name.php	/^    public $name = 'Tidy_Name';$/;"	v
name	HTMLModule/Tidy/Proprietary.php	/^    public $name = 'Tidy_Proprietary';$/;"	v
name	HTMLModule/Tidy/Strict.php	/^    public $name = 'Tidy_Strict';$/;"	v
name	HTMLModule/Tidy/Transitional.php	/^    public $name = 'Tidy_Transitional';$/;"	v
name	HTMLModule/Tidy/XHTML.php	/^    public $name = 'Tidy_XHTML';$/;"	v
name	HTMLModule/XMLCommonAttributes.php	/^    public $name = 'XMLCommonAttributes';$/;"	v
name	HTMLModuleManager.php	/^            foreach ($module->info as $name => $def) {$/;"	v
name	HTMLModuleManager.php	/^            foreach ($module->info as $name => $v) {$/;"	v
name	HTMLModuleManager.php	/^     * module's class name. This array is usually lazy loaded, but a$/;"	c
name	Injector/AutoParagraph.php	/^    public $name = 'AutoParagraph';$/;"	v
name	Injector/DisplayLinkURI.php	/^    public $name = 'DisplayLinkURI';$/;"	v
name	Injector/Linkify.php	/^    public $name = 'Linkify';$/;"	v
name	Injector/PurifierLinkify.php	/^    public $name = 'PurifierLinkify';$/;"	v
name	Injector/SafeObject.php	/^            foreach ($this->addParam as $name => $value) {$/;"	v
name	Injector/SafeObject.php	/^    public $name = 'SafeObject';$/;"	v
name	Lexer/PH5P.php	/^        $name = $node->tagName;$/;"	v
name	Printer/CSSDefinition.php	/^            $name = $this->getClass($obj, 'AttrDef_');$/;"	v
name	Printer/HTMLDefinition.php	/^        foreach ($array as $name => $discard) {$/;"	v
name	Printer/HTMLDefinition.php	/^        foreach ($array as $name => $obj) {$/;"	v
name	Printer/HTMLDefinition.php	/^        foreach ($this->def->info as $name => $def) {$/;"	v
name	Printer/HTMLDefinition.php	/^        foreach ($this->def->info_content_sets as $name => $lookup) {$/;"	v
name	Token/Text.php	/^    public $name = '#PCDATA'; \/**< PCDATA tag name compatible with DTD. *\/$/;"	v
name	URIDefinition.php	/^        foreach ($this->filters as $name => $f) {$/;"	v
name	URIDefinition.php	/^        foreach ($this->postFilters as $name => $f) {$/;"	v
name	URIDefinition.php	/^        foreach ($this->registeredFilters as $name => $filter) {$/;"	v
name	URIFilter/DisableExternal.php	/^    public $name = 'DisableExternal';$/;"	v
name	URIFilter/DisableExternalResources.php	/^    public $name = 'DisableExternalResources';$/;"	v
name	URIFilter/HostBlacklist.php	/^    public $name = 'HostBlacklist';$/;"	v
name	URIFilter/MakeAbsolute.php	/^    public $name = 'MakeAbsolute';$/;"	v
name	URIFilter/Munge.php	/^    public $name = 'Munge';$/;"	v
names	Printer/HTMLDefinition.php	/^     * Listifies a list of objects by retrieving class names and internal state$/;"	c
namespace	Config.php	/^                $namespace = $key;$/;"	v
namespace	Config.php	/^            $namespace = $key;$/;"	v
namespace	Config.php	/^        if ($namespace == 'HTML' || $namespace == 'CSS' || $namespace == 'URI') {$/;"	v
namespace_values	Config.php	/^                $namespace_values = $value;$/;"	v
needed	Injector.php	/^    public $needed = array();$/;"	v
needed	Injector/AutoParagraph.php	/^    public $needed = array('p');$/;"	v
needed	Injector/DisplayLinkURI.php	/^    public $needed = array('a');$/;"	v
needed	Injector/Linkify.php	/^    public $needed = array('a' => array('href'));$/;"	v
needed	Injector/PurifierLinkify.php	/^    public $needed = array('a' => array('href'));$/;"	v
needed	Injector/SafeObject.php	/^    public $needed = array('object', 'param');$/;"	v
needs_end	Injector/AutoParagraph.php	/^                    $needs_end = true;$/;"	v
needs_end	Injector/AutoParagraph.php	/^        $needs_end   = false;$/;"	v
needs_start	Injector/AutoParagraph.php	/^                        $needs_start = true;$/;"	v
needs_start	Injector/AutoParagraph.php	/^        $needs_start = false;$/;"	v
needs_tracking	Lexer.php	/^        $needs_tracking =$/;"	v
neg	UnitConverter.php	/^        $neg = $n < 0 ? '-' : ''; \/\/ Negative sign$/;"	v
negative	AttrDef/Integer.php	/^        $negative = true, $zero = true, $positive = true$/;"	v
negative	AttrDef/Integer.php	/^    protected $negative = true;$/;"	v
nest	Injector/SafeObject.php	/^            $nest = count($this->currentNesting) - 1;$/;"	v
nesting	ChildDef/Custom.php	/^        $nesting = 0; \/\/ depth into the nest$/;"	v
nesting	ChildDef/Required.php	/^        $nesting = 0;$/;"	v
nesting	ChildDef/Table.php	/^        $nesting = 0; \/\/ current depth so we can determine nodes$/;"	v
nesting	Injector.php	/^        if ($nesting === null) $nesting = 0;$/;"	v
nesting	Injector/AutoParagraph.php	/^        else $nesting = 0;$/;"	v
nesting	Injector/AutoParagraph.php	/^        if ($current instanceof HTMLPurifier_Token_Start) $nesting = 1;$/;"	v
new	Injector/SafeObject.php	/^            $new = array($token);$/;"	v
new	Printer/HTMLDefinition.php	/^                $new = $this->getClass($new, 'TagTransform_');$/;"	v
new	VarParser/Flexible.php	/^                        $new = array();$/;"	v
new_cache	DefinitionCacheFactory.php	/^            $new_cache = $decorator->decorate($cache);$/;"	v
new_data	Lexer/DOMLex.php	/^                $new_data = trim($data);$/;"	v
new_declarations	AttrDef/CSS.php	/^        $new_declarations = '';$/;"	v
new_decls	Filter/ExtractStyleBlocks.php	/^            $new_decls = array();$/;"	v
new_def	HTMLModuleManager.php	/^            $new_def = clone $module->info[$name];$/;"	v
new_font	AttrDef/CSS/FontFamily.php	/^                $new_font = '';$/;"	v
new_html	Lexer/PH5P.php	/^        $new_html = $this->normalize($html, $config, $context);$/;"	v
new_html	Lexer/PH5P.php	/^        $new_html = $this->wrapHTML($new_html, $config, $context);$/;"	v
new_key	Token/Tag.php	/^                $new_key = strtolower($key);$/;"	v
new_length	AttrDef/CSS/URI.php	/^            $new_length = strlen($uri) - 1;$/;"	v
new_length	AttrDef/CSS/URI.php	/^        $new_length = strlen($uri_string) - 1;$/;"	v
new_log	UnitConverter.php	/^        $new_log = (int) floor(log(abs($n), 10)); \/\/ Number of digits left of decimal - 1$/;"	v
new_parts	AttrDef/CSS/Color.php	/^            $new_parts = array();$/;"	v
new_selector	Filter/ExtractStyleBlocks.php	/^                    $new_selector = array(); \/\/ because multiple ones are possible$/;"	v
new_stack	URIFilter/MakeAbsolute.php	/^            $new_stack = $this->_collapseStack($new_stack);$/;"	v
new_stack	URIFilter/MakeAbsolute.php	/^            $new_stack = array_merge($this->basePathStack, $stack);$/;"	v
new_string	AttrDef/Lang.php	/^        $new_string = $subtags[0];$/;"	v
new_struct	ErrorCollector.php	/^        $new_struct = new HTMLPurifier_ErrorStruct();$/;"	v
new_tag	TagTransform/Font.php	/^            $new_tag = clone $tag;$/;"	v
new_tag	TagTransform/Font.php	/^        $new_tag = clone $tag;$/;"	v
new_tag	TagTransform/Simple.php	/^        $new_tag = clone $tag;$/;"	v
new_token	Strategy/MakeWellFormed.php	/^                        $new_token = new HTMLPurifier_Token_End($parent->name);$/;"	v
new_token	Strategy/MakeWellFormed.php	/^                $new_token = new HTMLPurifier_Token_End($skipped_tags[$j]->name);$/;"	v
new_triad	AttrDef/CSS/Color.php	/^            $new_triad = implode(',', $new_parts);$/;"	v
new_uri	URIFilter/Munge.php	/^        $new_uri = $this->parser->parse($new_uri);$/;"	v
new_uri	URIFilter/Munge.php	/^        $new_uri = strtr($this->target, $this->replace);$/;"	v
next	Injector/RemoveEmpty.php	/^            $next = $this->inputTokens[$i];$/;"	v
next	Injector/RemoveEmpty.php	/^        $next = false;$/;"	v
next_node	Lexer/PH5P.php	/^        $next_node = strtolower($this->characters('A-Za-z', $this->char + 1));$/;"	v
nl	Generator.php	/^        $nl = $this->config->get('Output.Newline');$/;"	v
nl	Generator.php	/^        if ($nl === null) $nl = PHP_EOL;$/;"	v
nl	Lexer/DirectLex.php	/^        $nl = "\\n";$/;"	v
nl_pos	Lexer/DirectLex.php	/^                $nl_pos = strrpos($html, $nl, $rcursor - $length);$/;"	v
node	Lexer/PH5P.php	/^                                $node = $clone;$/;"	v
node	Lexer/PH5P.php	/^                                $node = $this->stack[$n];$/;"	v
node	Lexer/PH5P.php	/^                        $node = $furthest_block;$/;"	v
node	Lexer/PH5P.php	/^                        $node = $this->stack[$n];$/;"	v
node	Lexer/PH5P.php	/^                        $node = end($this->stack);$/;"	v
node	Lexer/PH5P.php	/^                    $node = end($this->stack)->nodeName;$/;"	v
node	Lexer/PH5P.php	/^            $node = $this->stack[$leng - 1 - $n];$/;"	v
node	Lexer/PH5P.php	/^            $node = $this->stack[$n];$/;"	v
node	Lexer/PH5P.php	/^            $node = end($this->stack)->nodeName;$/;"	v
node	Lexer/PH5P.php	/^        $node = end($this->stack);$/;"	v
nonSpecialEntityCallback	EntityParser.php	/^    protected function nonSpecialEntityCallback($matches) {$/;"	f
non_negative	AttrDef/CSS/Number.php	/^    protected $non_negative = false;$/;"	v
non_xml	HTMLModuleManager.php	/^        $non_xml = array('NonXMLCommonAttributes');$/;"	v
none	AttrDef/CSS/Background.php	/^        $none = false;$/;"	v
none	AttrDef/CSS/ListStyle.php	/^                    else $none = true;$/;"	v
none	AttrDef/CSS/ListStyle.php	/^        $none = false;$/;"	v
normalize	Lexer.php	/^    public function normalize($html, $config, $context) {$/;"	f
normalize	PercentEncoder.php	/^    public function normalize($string) {$/;"	f
notifyEnd	Injector.php	/^    public function notifyEnd($token) {}$/;"	f
ns	Printer/ConfigForm.php	/^        foreach ($all as $ns => $directives) {$/;"	v
num	AttrDef/CSS/Color.php	/^                    $num = (float) substr($part, 0, $length - 1);$/;"	v
num	AttrDef/CSS/Color.php	/^                    $num = (int) $part;$/;"	v
num	AttrDef/CSS/Color.php	/^                    if ($num < 0) $num = 0;$/;"	v
num	AttrDef/CSS/Color.php	/^                    if ($num > 100) $num = 100;$/;"	v
num	AttrDef/CSS/Color.php	/^                    if ($num > 255) $num = 255;$/;"	v
num	AttrDef/CSS/Multiple.php	/^        for ($i = 0, $num = 0; $i < $length && $num < $this->max; $i++) {$/;"	v
num	Printer/HTMLDefinition.php	/^    protected function heavyHeader($text, $num = 1) {$/;"	v
num_amp	Lexer.php	/^        $num_amp = substr_count($string, '&') - substr_count($string, '& ') -$/;"	v
num_amp_2	Lexer.php	/^        $num_amp_2 = substr_count($string, '&') - substr_count($string, '& ') -$/;"	v
num_equal	Lexer/DirectLex.php	/^        $num_equal = substr_count($string, '=');$/;"	v
num_esc_amp	Lexer.php	/^        $num_esc_amp = substr_count($string, '&amp;');$/;"	v
num_subtags	AttrDef/Lang.php	/^        $num_subtags = count($subtags);$/;"	v
number	AttrDef/CSS/Number.php	/^                $number = substr($number, 1);$/;"	v
number	AttrDef/CSS/Number.php	/^            $number = ltrim($number, '0');$/;"	v
number	AttrDef/CSS/Number.php	/^        $number = $this->parseCDATA($number);$/;"	v
number	AttrDef/CSS/Percentage.php	/^        $number = $this->number_def->validate($number, $config, $context);$/;"	v
number	AttrDef/CSS/Percentage.php	/^        $number = substr($string, 0, $length - 1);$/;"	v
nvalue	Printer/ConfigForm.php	/^                    $nvalue = '';$/;"	v
nvar	VarParser/Flexible.php	/^                        $nvar = array();$/;"	v
obj	ConfigSchema.php	/^        $obj = new stdclass();$/;"	v
obj	ConfigSchema.php	/^        $obj = new stdclass;$/;"	v
object	HTMLModule/SafeObject.php	/^        $object = $this->addElement($/;"	v
objectStack	Injector/SafeObject.php	/^    protected $objectStack = array();$/;"	v
oct	AttrDef/URI/IPv4.php	/^        $oct = '(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])'; \/\/ 0-255$/;"	v
of	Printer.php	/^     * @param $obj Object to determine class of$/;"	c
of	Printer.php	/^     * Retrieves the class of an object without prefixes, as well as metadata$/;"	c
of	Token/Tag.php	/^ * Abstract class of a tag token (start, end or empty), and its behavior.$/;"	c
offsetGet	StringHash.php	/^    public function offsetGet($index) {$/;"	f
ok	AttrDef/CSS.php	/^                    $ok = true;$/;"	v
ok	AttrDef/CSS.php	/^            $ok = false;$/;"	v
ok	AttrDef/URI.php	/^            $ok = true;$/;"	v
ok	AttrDef/URI.php	/^        $ok = false;$/;"	v
ok	AttrValidator.php	/^        $ok =& $context->get('IDAccumulator', true);$/;"	v
ok	HTMLModuleManager.php	/^                    $ok = true;$/;"	v
ok	HTMLModuleManager.php	/^            $ok = false;$/;"	v
ok	Injector/AutoParagraph.php	/^                $ok = $result;$/;"	v
ok	Injector/AutoParagraph.php	/^        $ok = false;$/;"	v
ok	Strategy/MakeWellFormed.php	/^                $ok = true;$/;"	v
ok	Strategy/MakeWellFormed.php	/^            $ok = false;$/;"	v
ok	Strategy/RemoveForeignElements.php	/^                                $ok = false;$/;"	v
ok	Strategy/RemoveForeignElements.php	/^                        $ok = true;$/;"	v
okay	ChildDef/Custom.php	/^        $okay =$/;"	v
ol	HTMLModule/Legacy.php	/^        $ol = $this->addBlankElement('ol');$/;"	v
ol_types	HTMLModule/Tidy/XHTMLAndHTML4.php	/^            $ol_types = array($/;"	v
old	DefinitionCache/Serializer.php	/^            $old = umask(0022); \/\/ disable group and world writes$/;"	v
old	Lexer/DOMLex.php	/^                $old = $html;$/;"	v
old	Printer/HTMLDefinition.php	/^            foreach ($def->info_tag_transform as $old => $new) {$/;"	v
old	Strategy/MakeWellFormed.php	/^        $old = array_splice($this->tokens, $this->t, $delete, $token);$/;"	v
oldVersion	Lexer/DirectLex.php	/^            $oldVersion = version_compare(PHP_VERSION, '5.1', '<');$/;"	v
old_lookup	ContentSets.php	/^            $old_lookup = $this->lookup;$/;"	v
old_lookup	ContentSets.php	/^        $old_lookup = false;$/;"	v
oldskip	Strategy/MakeWellFormed.php	/^            $oldskip = isset($old[0]) ? $old[0]->skip : array();$/;"	v
only	AttrTransform/SafeParam.php	/^ *      This class only supports Flash. In the future, Quicktime support$/;"	c
openHandler	Lexer/PEARSax3.php	/^    public function openHandler(&$parser, $name, $attrs, $closed) {$/;"	f
open_quote	Lexer/DirectLex.php	/^            $open_quote = ($first_char == '"' || $first_char == "'");$/;"	v
original	AttrDef/URI/IPv6.php	/^        $original = $aIP;$/;"	v
original_module	HTMLModuleManager.php	/^            $original_module = $module;$/;"	v
original_name	Strategy/RemoveForeignElements.php	/^                    $original_name = $token->name;$/;"	v
other_directive	ConfigSchema/Validator.php	/^                $other_directive = $this->aliases[$s];$/;"	v
ourHostParts	URIFilter/DisableExternal.php	/^    protected $ourHostParts = false;$/;"	v
our_host	URIFilter/DisableExternal.php	/^        $our_host = $config->getDefinition('URI')->host;$/;"	v
out	Encoder.php	/^        $out = '';$/;"	v
overload	HTMLModuleManager.php	/^    public function registerModule($module, $overload = false) {$/;"	v
p	HTMLModule/Legacy.php	/^        $p = $this->addBlankElement('p');$/;"	v
p	HTMLModule/Text.php	/^        $p = $this->addElement('p', 'Block', 'Inline', 'Common');$/;"	v
p	TokenFactory.php	/^        $p = clone $this->p_comment;$/;"	v
p	TokenFactory.php	/^        $p = clone $this->p_empty;$/;"	v
p	TokenFactory.php	/^        $p = clone $this->p_end;$/;"	v
p	TokenFactory.php	/^        $p = clone $this->p_start;$/;"	v
p	TokenFactory.php	/^        $p = clone $this->p_text;$/;"	v
padding	CSSDefinition.php	/^        $padding =$/;"	v
par	Injector/AutoParagraph.php	/^            $par = $raw_paragraphs[$i];$/;"	v
par	Injector/AutoParagraph.php	/^        $par = new HTMLPurifier_Token_Start('p');$/;"	v
paragraphs	Injector/AutoParagraph.php	/^        $paragraphs  = array(); \/\/ without empty paragraphs$/;"	v
param	HTMLModule/SafeObject.php	/^        $param = $this->addElement('param', false, 'Empty', false,$/;"	v
paramStack	Injector/SafeObject.php	/^    protected $paramStack  = array();$/;"	v
parameters	AttrDef/CSS/Filter.php	/^        $parameters = substr($value, $cursor, $parameters_length);$/;"	v
parameters_length	AttrDef/CSS/Filter.php	/^        $parameters_length = strcspn($value, ')', $cursor);$/;"	v
params	AttrDef/CSS/Filter.php	/^        $params = explode(',', $parameters);$/;"	v
params	HTMLModule/Tidy.php	/^        $params = array();$/;"	v
parent	Config.php	/^        $parent = $parent ? $parent : $definition->defaultPlist;$/;"	v
parent	Config.php	/^    public function __construct($definition, $parent = null) {$/;"	v
parent	HTMLDefinition.php	/^        $parent = $config->get('HTML.Parent');$/;"	v
parent	Injector.php	/^            $parent = $this->htmlDefinition->info[$parent_token->name];$/;"	v
parent	Injector.php	/^            $parent = $this->htmlDefinition->info_parent_def;$/;"	v
parent	Strategy/MakeWellFormed.php	/^                    $parent = array_pop($this->stack);$/;"	v
parent_def	Strategy/FixNesting.php	/^                    $parent_def   = $definition->info[$parent_name];$/;"	v
parent_def	Strategy/FixNesting.php	/^                    $parent_def   = $definition->info_parent_def;$/;"	v
parent_index	Strategy/FixNesting.php	/^                $parent_index = $parent_name = $parent_def = null;$/;"	v
parent_index	Strategy/FixNesting.php	/^                $parent_index = $stack[$count-1];$/;"	v
parent_name	Strategy/FixNesting.php	/^                $parent_name  = $tokens[$parent_index]->name;$/;"	v
parent_name	Strategy/FixNesting.php	/^        $parent_name = $definition->info_parent;$/;"	v
parent_result	AttrDef/HTML/Length.php	/^        $parent_result = parent::validate($string, $config, $context);$/;"	v
parent_result	AttrDef/HTML/MultiLength.php	/^        $parent_result = parent::validate($string, $config, $context);$/;"	v
parent_token	Injector.php	/^            $parent_token = array_pop($this->currentNesting);$/;"	v
parse	URIParser.php	/^    public function parse($uri) {$/;"	f
parse	VarParser.php	/^    final public function parse($var, $type, $allow_null = false) {$/;"	f
parseAttributeString	Lexer/DirectLex.php	/^    public function parseAttributeString($string, $config, $context) {$/;"	f
parseCDATA	AttrDef.php	/^    public function parseCDATA($string) {$/;"	f
parseContents	HTMLModule.php	/^    public function parseContents($contents) {$/;"	f
parseData	Lexer.php	/^    public function parseData($string) {$/;"	f
parseFile	StringHashParser.php	/^    public function parseFile($file) {$/;"	f
parseHandle	StringHashParser.php	/^    protected function parseHandle($fh) {$/;"	f
parseImplementation	VarParser.php	/^    protected function parseImplementation($var, $type, $allow_null) {$/;"	f
parseImplementation	VarParser/Flexible.php	/^    protected function parseImplementation($var, $type, $allow_null) {$/;"	f
parseImplementation	VarParser/Native.php	/^    protected function parseImplementation($var, $type, $allow_null) {$/;"	f
parseMultiFile	StringHashParser.php	/^    public function parseMultiFile($file) {$/;"	f
parseTinyMCEAllowedList	HTMLDefinition.php	/^    public function parseTinyMCEAllowedList($list) {$/;"	f
parser	ConfigSchema/InterchangeBuilder.php	/^        $parser = new HTMLPurifier_StringHashParser();$/;"	v
parser	Lexer/PEARSax3.php	/^        $parser = new XML_HTMLSax3();$/;"	v
parser	Lexer/PH5P.php	/^            $parser = new HTML5($new_html);$/;"	v
parser	URIDefinition.php	/^            $parser = new HTMLPurifier_URIParser();$/;"	v
part	AttrDef/CSS/Color.php	/^                $part = trim($part);$/;"	v
part	AttrDef/HTML/LinkTypes.php	/^            $part = strtolower(trim($part));$/;"	v
parts	AttrDef/CSS/Color.php	/^            $parts = explode(',', $triad);$/;"	v
parts	AttrDef/CSS/Multiple.php	/^        $parts = explode(' ', $string); \/\/ parseCDATA replaced \\r, \\t and \\n$/;"	v
parts	AttrDef/CSS/TextDecoration.php	/^        $parts = explode(' ', $string);$/;"	v
parts	AttrDef/HTML/LinkTypes.php	/^        $parts = explode(' ', $string);$/;"	v
parts	PercentEncoder.php	/^        $parts = explode('%', $string);$/;"	v
path	URIParser.php	/^        $path       = $matches[5]; \/\/ always present, can be empty$/;"	v
path_parts	URI.php	/^        $path_parts = array();$/;"	v
pattern	AttrDef/HTML/Nmtokens.php	/^        $pattern = '\/(?:(?<=\\s)|\\A)'. \/\/ look behind for space or string start$/;"	v
pays	UnitConverter.php	/^     *      About precision: This conversion function pays very special$/;"	f
pcdata_allowed	ChildDef/Required.php	/^        $pcdata_allowed = isset($this->elements['#PCDATA']);$/;"	v
pcode	LanguageFactory.php	/^        $pcode = str_replace('-', '_', $code); \/\/ make valid PHP classname$/;"	v
performInclusions	AttrCollections.php	/^    public function performInclusions(&$attr) {$/;"	f
performs	AttrValidator.php	/^     *     because the operation this class performs on the token are$/;"	c
plain	Injector/RemoveEmpty.php	/^                    $plain = str_replace("\\xC2\\xA0", "", $next->data);$/;"	v
points	AttrDef/HTML/Length.php	/^        $points = (int) $points;$/;"	v
points	AttrDef/HTML/Length.php	/^        $points = substr($string, 0, $length - 1);$/;"	v
polite	Printer.php	/^    protected function listify($array, $polite = false) {$/;"	v
populate	HTMLModule/Tidy.php	/^    public function populate($fixes) {$/;"	f
port	URIParser.php	/^            $port       = !empty($matches[4]) ? (int) $matches[5] : null;$/;"	v
port	URIParser.php	/^            $port = $host = $userinfo = null;$/;"	v
position	Token.php	/^    public function position($l = null, $c = null) {$/;"	f
position_comment_end	Lexer/DirectLex.php	/^                        $position_comment_end = strlen($html);$/;"	v
position_comment_end	Lexer/DirectLex.php	/^                    $position_comment_end = strpos($html, '-->', $cursor);$/;"	v
position_first_space	Lexer/DirectLex.php	/^                $position_first_space = strcspn($segment, $this->_whitespace);$/;"	v
position_next_gt	Lexer/DirectLex.php	/^            $position_next_gt = strpos($html, '>', $cursor);$/;"	v
position_next_lt	Lexer/DirectLex.php	/^            $position_next_lt = strpos($html, '<', $cursor);$/;"	v
positive	AttrDef/Integer.php	/^    protected $positive = true;$/;"	v
post	URIFilter.php	/^    public $post = false;$/;"	v
post	URIFilter/Munge.php	/^    public $post = true;$/;"	v
postFilter	Filter.php	/^    public function postFilter($html, $config, $context) {$/;"	f
postFilter	Filter/YouTube.php	/^    public function postFilter($html, $config, $context) {$/;"	f
postFilter	URIDefinition.php	/^    public function postFilter(&$uri, $config, $context) {$/;"	f
postFilterCallback	Filter/YouTube.php	/^    protected function postFilterCallback($matches) {$/;"	f
postFilters	URIDefinition.php	/^    protected $postFilters = array();$/;"	v
postProcess	ConfigSchema.php	/^    public function postProcess() {$/;"	f
post_regex	Filter/YouTube.php	/^        $post_regex = '#<span class="youtube-embed">([A-Za-z0-9\\-_]+)<\/span>#';$/;"	v
pre	AttrDef/URI/IPv6.php	/^        $pre = '(?:\/(?:12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))';   \/\/ \/0 - \/128$/;"	v
pre	HTMLModule/Legacy.php	/^        $pre = $this->addBlankElement('pre');$/;"	v
pre	HTMLModule/Text.php	/^        $pre = $this->addElement('pre', 'Block', 'Inline', 'Common');$/;"	v
preFilter	Filter.php	/^    public function preFilter($html, $config, $context) {$/;"	f
preFilter	Filter/ExtractStyleBlocks.php	/^    public function preFilter($html, $config, $context) {$/;"	f
preFilter	Filter/YouTube.php	/^    public function preFilter($html, $config, $context) {$/;"	f
pre_regex	Filter/YouTube.php	/^        $pre_regex = '#<object[^>]+>.+?'.$/;"	v
pre_replace	Filter/YouTube.php	/^        $pre_replace = '<span class="youtube-embed">\\1<\/span>';$/;"	v
precise	UnitConverter.php	/^            $precise = (string) round(substr($r, 0, strlen($r) + $scale), -1);$/;"	v
prefix	AttrDef/HTML/ID.php	/^        $prefix = $config->get('Attr.IDPrefix');$/;"	v
prefix	ConfigSchema/Validator.php	/^        else $prefix = ucfirst($this->getFormattedContext());$/;"	v
prefix	ConfigSchema/Validator.php	/^        if ($target !== false) $prefix = ucfirst($target) . ' in ' .  $this->getFormattedContext();$/;"	v
prefix	HTMLModuleManager.php	/^     * Adds a class prefix that registerModule() will use to resolve a$/;"	c
prefix	Printer.php	/^        $prefix = 'HTMLPurifier_' . $sec_prefix;$/;"	v
prefix	Printer.php	/^        if (!$five) $prefix = strtolower($prefix);$/;"	v
prefixes	HTMLModuleManager.php	/^    public $prefixes = array('HTMLPurifier_HTMLModule_');$/;"	v
prepare	Injector.php	/^    public function prepare($config, $context) {$/;"	f
prepare	Injector/PurifierLinkify.php	/^    public function prepare($config, $context) {$/;"	f
prepare	Injector/RemoveEmpty.php	/^    public function prepare($config, $context) {$/;"	f
prepare	Injector/SafeObject.php	/^    public function prepare($config, $context) {$/;"	f
prepare	URIFilter.php	/^    public function prepare($config) {return true;}$/;"	f
prepare	URIFilter/DisableExternal.php	/^    public function prepare($config) {$/;"	f
prepare	URIFilter/HostBlacklist.php	/^    public function prepare($config) {$/;"	f
prepare	URIFilter/MakeAbsolute.php	/^    public function prepare($config) {$/;"	f
prepare	URIFilter/Munge.php	/^    public function prepare($config) {$/;"	f
prepareArrayFromForm	Config.php	/^    public static function prepareArrayFromForm($array, $index = false, $allowed = true, $mq_fix = true, $schema = null) {$/;"	f
prepareGenerator	Printer.php	/^    public function prepareGenerator($config) {$/;"	f
prependCSS	AttrTransform.php	/^    public function prependCSS(&$attr, $css) {$/;"	f
prependCSS	TagTransform.php	/^    protected function prependCSS(&$attr, $css) {$/;"	f
prepend_style	TagTransform/Font.php	/^        $prepend_style = '';$/;"	v
preserve	PercentEncoder.php	/^    protected $preserve = array();$/;"	v
prev	Injector/RemoveEmpty.php	/^                $prev = $this->inputTokens[$b];$/;"	v
prev	Strategy/MakeWellFormed.php	/^                        $prev = $tokens[$t];$/;"	v
processModule	HTMLModuleManager.php	/^    public function processModule($module) {$/;"	f
processModules	HTMLDefinition.php	/^    protected function processModules($config) {$/;"	f
processToken	Strategy/MakeWellFormed.php	/^    protected function processToken($token, $injector = -1) {$/;"	f
processed	AttrCollections.php	/^        $processed = array();$/;"	v
prop	AttrDef/CSS.php	/^        foreach ($propvalues as $prop => $value) {$/;"	v
property	AttrDef/CSS.php	/^                $property = strtolower($property);$/;"	v
property	AttrDef/CSS.php	/^            $property = trim($property);$/;"	v
property	AttrDef/CSS.php	/^        $property = false;$/;"	v
property	AttrTransform/ImgSpace.php	/^            $property = "margin-$suffix";$/;"	v
property	HTMLModule/Tidy.php	/^            if (is_null($property)) $property = 'pre';$/;"	v
property	HTMLModule/Tidy.php	/^        $property = $attr = null;$/;"	v
property	Printer/CSSDefinition.php	/^        foreach ($this->def->info as $property => $obj) {$/;"	v
propname	AttrDef/CSS/Border.php	/^            foreach ($this->info as $propname => $validator) {$/;"	v
propvalues	AttrDef/CSS.php	/^        $propvalues = array();$/;"	v
prototype	ConfigSchema.php	/^        } elseif (HTMLPurifier_ConfigSchema::$singleton === null || $prototype === true) {$/;"	v
prototype	DefinitionCacheFactory.php	/^        } elseif ($instance === null || $prototype === true) {$/;"	v
prototype	LanguageFactory.php	/^        } elseif ($instance === null || $prototype == true) {$/;"	v
prototype	URISchemeRegistry.php	/^        } elseif ($instance === null || $prototype == true) {$/;"	v
purifier	ConfigSchema/Builder/Xml.php	/^        $purifier = HTMLPurifier::getInstance();$/;"	v
qf_encoder	URI.php	/^        $qf_encoder = new HTMLPurifier_PercentEncoder($chars_pchar . '\/?');$/;"	v
query	URIParser.php	/^        $query      = !empty($matches[6]) ? $matches[7] : null;$/;"	v
quote	AttrDef/CSS/FontFamily.php	/^                $quote = $font[0];$/;"	v
quote	AttrDef/CSS/URI.php	/^            $quote = $uri[0];$/;"	v
quote	Generator.php	/^    public function escape($string, $quote = ENT_COMPAT) {$/;"	v
quoted_value	Lexer/DirectLex.php	/^            $quoted_value = trim($quoted_value);$/;"	v
r	AttrDef/CSS/Background.php	/^                    $r = $bit;$/;"	v
r	AttrDef/CSS/Background.php	/^                    $r = $this->info['background-' . $key]->validate($bit, $config, $context);$/;"	v
r	AttrDef/CSS/BackgroundPosition.php	/^            $r = $this->length->validate($bit, $config, $context);$/;"	v
r	AttrDef/CSS/BackgroundPosition.php	/^            $r = $this->percentage->validate($bit, $config, $context);$/;"	v
r	AttrDef/CSS/Border.php	/^                $r = $validator->validate($bit, $config, $context);$/;"	v
r	AttrDef/CSS/Font.php	/^                            $r = $this->info['line-height']->validate($/;"	v
r	AttrDef/CSS/Font.php	/^                        $r = $this->info[$validator_name]->validate($/;"	v
r	AttrDef/CSS/Font.php	/^                    $r = $this->info['font-family']->validate($/;"	v
r	AttrDef/CSS/Font.php	/^                    $r = $this->info['font-size']->validate($/;"	v
r	AttrDef/CSS/ListStyle.php	/^                $r = $this->info['list-style-' . $key]->validate($bit, $config, $context);$/;"	v
r	Encoder.php	/^                $r === '' ||$/;"	v
r	Encoder.php	/^            $r = iconv('UTF-8', "$encoding\/\/IGNORE", $c); \/\/ initial conversion$/;"	v
r	HTMLModule/Tidy/Name.php	/^        $r = array();$/;"	v
r	HTMLModule/Tidy/Proprietary.php	/^        $r = array();$/;"	v
r	HTMLModule/Tidy/Strict.php	/^        $r = parent::makeFixes();$/;"	v
r	HTMLModule/Tidy/XHTML.php	/^        $r = array();$/;"	v
r	HTMLModule/Tidy/XHTMLAndHTML4.php	/^        $r = array();$/;"	v
r	Injector.php	/^        $r = $this->rewind;$/;"	v
r	URIDefinition.php	/^        $r = $filter->prepare($config);$/;"	v
r	UnitConverter.php	/^            $r = sprintf('%.0f', (float) $r);$/;"	v
r_URI	URIParser.php	/^        $r_URI = '!'.$/;"	v
r_authority	URIParser.php	/^            $r_authority = "\/^((.+?)@)?(\\[[^\\]]+\\]|[^:]*)(:(\\d*))?\/";$/;"	v
raw	ChildDef/Custom.php	/^            $raw = "($raw)";$/;"	v
raw	ChildDef/Custom.php	/^        $raw = str_replace(' ', '', $this->dtd_regex);$/;"	v
raw	Config.php	/^    public function getDefinition($type, $raw = false) {$/;"	v
raw	Language.php	/^        $raw = $this->messages[$key];$/;"	v
rawPosition	Token.php	/^    public function rawPosition($l, $c) {$/;"	f
raw_aliases	ConfigSchema/InterchangeBuilder.php	/^            $raw_aliases = trim($hash->offsetGet('ALIASES'));$/;"	v
raw_fallback	LanguageFactory.php	/^                $raw_fallback = $this->getFallbackFor($code);$/;"	v
raw_paragraphs	Injector/AutoParagraph.php	/^        $raw_paragraphs = explode("\\n\\n", $data);$/;"	v
rb	HTMLModule/Ruby.php	/^        $rb = $this->addElement('rb', false, 'Inline', 'Common');$/;"	v
rcursor	Lexer/DirectLex.php	/^                $rcursor = $cursor - (int) $inside_tag;$/;"	v
reconstructActiveFormattingElements	Lexer/PH5P.php	/^    private function reconstructActiveFormattingElements() {$/;"	f
reflector	Bootstrap.php	/^                    $reflector = new ReflectionMethod($func[0], $func[1]);$/;"	v
reg	ChildDef/Custom.php	/^        $reg = $raw;$/;"	v
reg	ChildDef/Custom.php	/^        $reg = preg_replace("\/$el\/", '(,\\\\0)', $reg);$/;"	v
reg	ChildDef/Custom.php	/^        $reg = preg_replace("\/([^,(|]\\(+),\/", '\\\\1', $reg);$/;"	v
reg	ChildDef/Custom.php	/^        $reg = preg_replace("\/,\\(\/", '(', $reg);$/;"	v
regexp	AttrDef/HTML/ID.php	/^        $regexp = $config->get('Attr.IDBlacklistRegexp');$/;"	v
register	Context.php	/^    public function register($name, &$ref) {$/;"	f
register	DefinitionCacheFactory.php	/^    public function register($short, $long) {$/;"	f
register	DoctypeRegistry.php	/^    public function register($doctype, $xml = true, $modules = array(),$/;"	f
register	URISchemeRegistry.php	/^    public function register($scheme, $scheme_obj) {$/;"	f
registerAutoload	Bootstrap.php	/^    public static function registerAutoload() {$/;"	f
registerFilter	URIDefinition.php	/^    public function registerFilter($filter) {$/;"	f
registerModule	HTMLModuleManager.php	/^    public function registerModule($module, $overload = false) {$/;"	f
registeredFilters	URIDefinition.php	/^    protected $registeredFilters = array();$/;"	v
registeredModules	HTMLModuleManager.php	/^    public $registeredModules = array();$/;"	v
registry	URI.php	/^        $registry = HTMLPurifier_URISchemeRegistry::instance();$/;"	v
remove	DefinitionCache.php	/^    abstract public function remove($config);$/;"	f
remove	DefinitionCache/Decorator.php	/^    public function remove($config) {$/;"	f
remove	DefinitionCache/Null.php	/^    public function remove($config) {$/;"	f
remove	DefinitionCache/Serializer.php	/^    public function remove($config) {$/;"	f
remove	Strategy/MakeWellFormed.php	/^    private function remove() {$/;"	f
remove_fixes	HTMLModule/Tidy.php	/^        $remove_fixes = $config->get('HTML.TidyRemove');$/;"	v
remove_invalid_img	Strategy/RemoveForeignElements.php	/^        $remove_invalid_img  = $config->get('Core.RemoveInvalidImg');$/;"	v
remove_script_contents	Strategy/RemoveForeignElements.php	/^        $remove_script_contents = $config->get('Core.RemoveScriptContents');$/;"	v
remove_until	Strategy/RemoveForeignElements.php	/^                            $remove_until = $token->name;$/;"	v
remove_until	Strategy/RemoveForeignElements.php	/^                            $remove_until = false;$/;"	v
remove_until	Strategy/RemoveForeignElements.php	/^        $remove_until = false;$/;"	v
render	Printer.php	/^    \/\/ function render() {}$/;"	f
render	Printer/CSSDefinition.php	/^    public function render($config) {$/;"	f
render	Printer/ConfigForm.php	/^    public function render($config, $allowed = true, $render_controls = true) {$/;"	f
render	Printer/ConfigForm.php	/^    public function render($ns, $directive, $value, $name, $config) {$/;"	f
render	Printer/HTMLDefinition.php	/^    public function render($config) {$/;"	f
renderChildren	Printer/HTMLDefinition.php	/^    protected function renderChildren($def) {$/;"	f
renderContentSets	Printer/HTMLDefinition.php	/^    protected function renderContentSets() {$/;"	f
renderDoctype	Printer/HTMLDefinition.php	/^    protected function renderDoctype() {$/;"	f
renderEnvironment	Printer/HTMLDefinition.php	/^    protected function renderEnvironment() {$/;"	f
renderInfo	Printer/HTMLDefinition.php	/^    protected function renderInfo() {$/;"	f
renderNamespace	Printer/ConfigForm.php	/^    protected function renderNamespace($ns, $directives) {$/;"	f
replace	DefinitionCache.php	/^    abstract public function replace($def, $config);$/;"	f
replace	DefinitionCache/Decorator.php	/^    public function replace($def, $config) {$/;"	f
replace	DefinitionCache/Decorator/Cleanup.php	/^    public function replace($def, $config) {$/;"	f
replace	DefinitionCache/Decorator/Memory.php	/^    public function replace($def, $config) {$/;"	f
replace	DefinitionCache/Null.php	/^    public function replace($def, $config) {$/;"	f
replace	DefinitionCache/Serializer.php	/^    public function replace($def, $config) {$/;"	f
replace	Strategy/MakeWellFormed.php	/^            $replace = array($token);$/;"	v
replace	URIFilter/Munge.php	/^    protected $replace = array();$/;"	v
representing	DefinitionCache.php	/^ * Abstract class representing Definition cache managers that implements$/;"	c
reprocess	Strategy/MakeWellFormed.php	/^                        $reprocess = true;$/;"	v
reprocess	Strategy/MakeWellFormed.php	/^                    $reprocess = true;$/;"	v
reprocess	Strategy/MakeWellFormed.php	/^                $reprocess = true;$/;"	v
reprocess	Strategy/MakeWellFormed.php	/^            $reprocess = true;$/;"	v
reprocess	Strategy/MakeWellFormed.php	/^            $reprocess ? $reprocess = false : $t++$/;"	v
reprocess	Strategy/MakeWellFormed.php	/^        $reprocess  = false; \/\/ whether or not to reprocess the same token$/;"	v
required	AttrDef.php	/^    public $required = false;$/;"	v
required_attr	ElementDef.php	/^    public $required_attr = array();$/;"	v
requires	AttrDef/URI/IPv6.php	/^ * @note This function requires brackets to have been removed from address$/;"	f
reset	PropertyList.php	/^    public function reset($name = null) {$/;"	f
resetAccessed	StringHash.php	/^    public function resetAccessed() {$/;"	f
resetInsertionMode	Lexer/PH5P.php	/^    private function resetInsertionMode() {$/;"	f
resolves	DoctypeRegistry.php	/^     * @note This function resolves aliases$/;"	f
result	AttrDef/CSS.php	/^                $result = $definition->info[$property]->validate($/;"	v
result	AttrDef/CSS.php	/^                $result = 'inherit';$/;"	v
result	AttrDef/CSS/AlphaValue.php	/^        $result = parent::validate($number, $config, $context);$/;"	v
result	AttrDef/CSS/AlphaValue.php	/^        if ($float < 0.0) $result = '0';$/;"	v
result	AttrDef/CSS/AlphaValue.php	/^        if ($float > 1.0) $result = '1';$/;"	v
result	AttrDef/CSS/Composite.php	/^            $result = $this->defs[$i]->validate($string, $config, $context);$/;"	v
result	AttrDef/CSS/Multiple.php	/^            $result = $this->single->validate($parts[$i], $config, $context);$/;"	v
result	AttrDef/CSS/URI.php	/^        $result = parent::validate($uri, $config, $context);$/;"	v
result	AttrDef/CSS/URI.php	/^        $result = str_replace($keys, $values, $result);$/;"	v
result	AttrDef/Enum.php	/^        $result = isset($this->valid_values[$string]);$/;"	v
result	AttrDef/HTML/ID.php	/^            $result = ($trim === '');$/;"	v
result	AttrDef/HTML/ID.php	/^            $result = true;$/;"	v
result	AttrDef/URI.php	/^            $result = $scheme_obj->validate($uri, $config, $context);$/;"	v
result	AttrDef/URI.php	/^            $result = $uri->validate($config, $context);$/;"	v
result	AttrDef/URI.php	/^            $result = $uri_def->filter($uri, $config, $context);$/;"	v
result	AttrDef/URI.php	/^            $result = $uri_def->postFilter($uri, $config, $context);$/;"	v
result	AttrDef/URI/Email/SimpleCheck.php	/^        $result = preg_match('\/^[A-Z0-9._%-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$\/i', $string);$/;"	v
result	AttrTransform/Input.php	/^            $result = $this->pixels->validate($attr['size'], $config, $context);$/;"	v
result	AttrTransform/NameSync.php	/^        $result = $this->idDef->validate($name, $config, $context);$/;"	v
result	AttrValidator.php	/^                    $result = $defs[$attr_key]->validate($/;"	v
result	AttrValidator.php	/^                    $result = false;$/;"	v
result	AttrValidator.php	/^                $result = $d_defs[$attr_key]->validate($/;"	v
result	AttrValidator.php	/^                $result = false;$/;"	v
result	AttrValidator.php	/^            if ($result === false || $result === null) {$/;"	v
result	ChildDef/Optional.php	/^        $result = parent::validateChildren($tokens_of_children, $config, $context);$/;"	v
result	ChildDef/Required.php	/^        $result = array();$/;"	v
result	ChildDef/StrictBlockquote.php	/^        $result = parent::validateChildren($tokens_of_children, $config, $context);$/;"	v
result	ChildDef/StrictBlockquote.php	/^        if ($result === true) $result = $tokens_of_children;$/;"	v
result	Encoder.php	/^        $result = '';$/;"	v
result	Injector.php	/^        $result = $this->checkNeeded($config);$/;"	v
result	Injector.php	/^        $result = $this->forward($i, $current);$/;"	v
result	Injector/AutoParagraph.php	/^            $result = $this->_checkNeedsP($current);$/;"	v
result	Length.php	/^        $result = $def->validate($this->n, false, false);$/;"	v
result	Lexer.php	/^        $result = preg_match('!<body[^>]*>(.+?)<\/body>!is', $html, $matches);$/;"	v
result	Strategy/FixNesting.php	/^                    $result = $def->child->validateChildren($/;"	v
result	Strategy/FixNesting.php	/^                    $result = false;$/;"	v
result	Strategy/FixNesting.php	/^                $result = false;$/;"	v
result	Strategy/RemoveForeignElements.php	/^        $result = array();$/;"	v
result	URI.php	/^        $result = '';$/;"	v
result	URIDefinition.php	/^            $result = $f->filter($uri, $config, $context);$/;"	v
result	URIFilter/MakeAbsolute.php	/^        $result = array();$/;"	v
result	URIParser.php	/^        $result = preg_match($r_URI, $uri, $matches);$/;"	v
result	VarParser/Native.php	/^        $result = eval("\\$var = $expr;");$/;"	v
ret	AttrDef/CSS/Background.php	/^        $ret = array();$/;"	v
ret	AttrDef/CSS/BackgroundPosition.php	/^        $ret = array();$/;"	v
ret	AttrDef/CSS/Border.php	/^        $ret = ''; \/\/ return value$/;"	v
ret	AttrDef/CSS/ListStyle.php	/^        $ret = array();$/;"	v
ret	AttrDef/HTML/Class.php	/^        $ret = array();$/;"	v
ret	ChildDef/StrictBlockquote.php	/^        $ret = array();$/;"	v
ret	ChildDef/Table.php	/^            $ret = array_merge($ret, $collection);$/;"	v
ret	ChildDef/Table.php	/^        $ret = array();$/;"	v
ret	ChildDef/Table.php	/^        foreach ($content as $token_array) $ret = array_merge($ret, $token_array);$/;"	v
ret	ChildDef/Table.php	/^        if ($caption !== false) $ret = array_merge($ret, $caption);$/;"	v
ret	ChildDef/Table.php	/^        if ($cols !== false)    foreach ($cols as $token_array) $ret = array_merge($ret, $token_array);$/;"	v
ret	ChildDef/Table.php	/^        if ($tfoot !== false)   $ret = array_merge($ret, $tfoot);$/;"	v
ret	ChildDef/Table.php	/^        if ($thead !== false)   $ret = array_merge($ret, $thead);$/;"	v
ret	Config.php	/^            $ret = HTMLPurifier_Config::createDefault();$/;"	v
ret	Config.php	/^            $ret = new HTMLPurifier_Config($schema);$/;"	v
ret	Config.php	/^         $ret = HTMLPurifier_Config::prepareArrayFromForm($array, $index, $allowed, $mq_fix, $this->def);$/;"	v
ret	Config.php	/^        $ret = HTMLPurifier_Config::prepareArrayFromForm($array, $index, $allowed, $mq_fix, $schema);$/;"	v
ret	Config.php	/^        $ret = array();$/;"	v
ret	ConfigSchema/InterchangeBuilder.php	/^        $ret = array();$/;"	v
ret	ContentSets.php	/^        $ret = array();$/;"	v
ret	DefinitionCache/Decorator/Cleanup.php	/^        $ret = parent::get($config);$/;"	v
ret	Encoder.php	/^        $ret = '';$/;"	v
ret	Encoder.php	/^        $ret = array();$/;"	v
ret	ErrorCollector.php	/^        $ret = array();$/;"	v
ret	Filter/ExtractStyleBlocks.php	/^                    $ret = $def->validate($value, $config, $context);$/;"	v
ret	HTMLModule.php	/^        $ret = array();$/;"	v
ret	HTMLModule/Tidy.php	/^        $ret = array();$/;"	v
ret	Language.php	/^        $ret = '';$/;"	v
ret	Lexer/DOMLex.php	/^        $ret = '';$/;"	v
ret	PercentEncoder.php	/^        $ret = '';$/;"	v
ret	PercentEncoder.php	/^        $ret = array_shift($parts);$/;"	v
ret	Printer.php	/^        $ret = '';$/;"	v
ret	Printer/CSSDefinition.php	/^        $ret = '';$/;"	v
ret	Printer/ConfigForm.php	/^        $ret = '';$/;"	v
ret	Printer/HTMLDefinition.php	/^        $ret = '';$/;"	v
ret	StringHashParser.php	/^        $ret     = array();$/;"	v
ret	StringHashParser.php	/^        $ret = $this->parseHandle($fh);$/;"	v
ret	StringHashParser.php	/^        $ret = array();$/;"	v
ret_function	AttrDef/CSS/Filter.php	/^        $ret_function = "$function($ret_parameters)";$/;"	v
ret_lookup	AttrDef/HTML/LinkTypes.php	/^        $ret_lookup = array();$/;"	v
ret_parameters	AttrDef/CSS/Filter.php	/^        $ret_parameters = implode(',', $ret_params);$/;"	v
ret_params	AttrDef/CSS/Filter.php	/^        $ret_params = array();$/;"	v
return	ContentSets.php	/^            $return = $module->getChildDef($def);$/;"	v
return	ContentSets.php	/^        $return = false;$/;"	v
rewind	Injector.php	/^    protected $rewind = false;$/;"	v
rewind	Injector.php	/^    public function rewind($index) {$/;"	f
rewind_to	Strategy/MakeWellFormed.php	/^                    if ($rewind_to < 0) $rewind_to = 0;$/;"	v
rewind_to	Strategy/MakeWellFormed.php	/^                $rewind_to = $this->injectors[$i]->getRewind();$/;"	v
right	AttrDef/CSS/Number.php	/^        $right = rtrim($right, '0');$/;"	v
right	AttrDef/CSS/Number.php	/^        if ($left === '' && $right === '') return false;$/;"	v
rootElementPhase	Lexer/PH5P.php	/^    private function rootElementPhase($token) {$/;"	f
round	UnitConverter.php	/^    private function round($n, $sigfigs) {$/;"	f
row	Printer.php	/^    protected function row($name, $value) {$/;"	f
rows	Printer/ConfigForm.php	/^    public $rows = 5;$/;"	v
rows	Printer/ConfigForm.php	/^    public function setTextareaDimensions($cols = null, $rows = null) {$/;"	v
rp	UnitConverter.php	/^        $rp = $sigfigs - $new_log - 1; \/\/ Number of decimal places needed$/;"	v
rt	HTMLModule/Ruby.php	/^        $rt = $this->addElement('rt', false, 'Inline', 'Common', array('rbspan' => 'Number'));$/;"	v
rtype	Config.php	/^        $rtype = is_int($def) ? $def : $def->type;$/;"	v
s	ConfigSchema/Validator.php	/^            $s = $alias->toString();$/;"	v
s	HTMLModule/Legacy.php	/^        $s = $this->addElement('s', 'Inline', 'Inline', 'Common');$/;"	v
s_excludes	Strategy/FixNesting.php	/^                        $s_excludes = $definition->info[$tokens[$i]->name]->excludes;$/;"	v
s_excludes	Strategy/FixNesting.php	/^                        $s_excludes = $definition->info_parent_def->excludes;$/;"	v
s_part1	Lexer/PH5P.php	/^                        $s_part1 = array_slice($this->stack, 0, $fb_s_pos);$/;"	v
s_part2	Lexer/PH5P.php	/^                        $s_part2 = array_slice($this->stack, $fb_s_pos + 1, count($this->stack));$/;"	v
s_pos	Lexer/PH5P.php	/^                                $s_pos = array_search($node, $this->stack, true);$/;"	v
safe	HTMLModule.php	/^    public $safe = true;$/;"	v
safe	HTMLModule/Forms.php	/^    public $safe = false;$/;"	v
safe	HTMLModule/Object.php	/^    public $safe = false;$/;"	v
safe	HTMLModule/Scripting.php	/^    public $safe = false;$/;"	v
same_quote	Lexer/DirectLex.php	/^            $same_quote = ($first_char == $last_char);$/;"	v
save	Lexer/PH5P.php	/^    public function save() {$/;"	f
scale	UnitConverter.php	/^    private function scale($r, $scale) {$/;"	f
schema	Config.php	/^            $schema = HTMLPurifier_ConfigSchema::instance();$/;"	v
schema	Config.php	/^    public static function create($config, $schema = null) {$/;"	v
schema	Config.php	/^    public static function getAllowedDirectivesForForm($allowed, $schema = null) {$/;"	v
schema	ConfigSchema/Builder/ConfigSchema.php	/^        $schema = new HTMLPurifier_ConfigSchema();$/;"	v
scheme	URIParser.php	/^        $scheme     = !empty($matches[1]) ? $matches[2] : null;$/;"	v
scheme_obj	AttrDef/URI.php	/^            $scheme_obj = $uri->getSchemeObj($config, $context);$/;"	v
scheme_obj	URI.php	/^            $scheme_obj = $registry->getScheme($def->defaultScheme, $config, $context);$/;"	v
scheme_obj	URI.php	/^            $scheme_obj = $registry->getScheme($this->scheme, $config, $context);$/;"	v
scheme_obj	URIFilter/MakeAbsolute.php	/^            $scheme_obj = $uri->getSchemeObj($config, $context);$/;"	v
scheme_obj	URIFilter/Munge.php	/^        $scheme_obj = $uri->getSchemeObj($config, $context);$/;"	v
schemes	URISchemeRegistry.php	/^    protected $schemes = array();$/;"	v
scope	Filter/ExtractStyleBlocks.php	/^        $scope = $config->get('Filter.ExtractStyleBlocks.Scope');$/;"	v
scopes	Filter/ExtractStyleBlocks.php	/^            $scopes = array();$/;"	v
scopes	Filter/ExtractStyleBlocks.php	/^            $scopes = array_map('trim', explode(',', $scope));$/;"	v
scoping	Lexer/PH5P.php	/^    private $scoping = array('button','caption','html','marquee','object','table','td','th');$/;"	v
scriptCallback	Lexer/DirectLex.php	/^    protected function scriptCallback($matches) {$/;"	f
sec_prefix	Printer.php	/^    protected function getClass($obj, $sec_prefix = '') {$/;"	v
second	AttrDef/URI/IPv6.php	/^                $second = explode(':', $second);$/;"	v
seen	AttrCollections.php	/^        $seen  = array(); \/\/ recursion guard$/;"	v
segment	Lexer/DirectLex.php	/^                    $segment = substr($html, $cursor, $strlen_segment);$/;"	v
segment	Lexer/DirectLex.php	/^                    $segment = substr($segment, 0, $strlen_segment);$/;"	v
segment	Lexer/DirectLex.php	/^                $segment = substr($html, $cursor, $strlen_segment);$/;"	v
segment	URIFilter/MakeAbsolute.php	/^                    $segment = array_pop($result);$/;"	v
segment_nc_encoder	URI.php	/^            $segment_nc_encoder = new HTMLPurifier_PercentEncoder($chars_sub_delims . '@');$/;"	v
segments_encoder	URI.php	/^        $segments_encoder = new HTMLPurifier_PercentEncoder($chars_pchar . '\/');$/;"	v
selector	Filter/ExtractStyleBlocks.php	/^                    $selector = implode(', ', $new_selector); \/\/ now it's a string$/;"	v
selector	Filter/ExtractStyleBlocks.php	/^                $selector = trim($selector);$/;"	v
selector	Filter/ExtractStyleBlocks.php	/^            foreach ($decls as $selector => $style) {$/;"	v
selectors	Filter/ExtractStyleBlocks.php	/^                    $selectors = array_map('trim', explode(',', $selector));$/;"	v
semicolon_pos	URIScheme/ftp.php	/^        $semicolon_pos = strrpos($uri->path, ';'); \/\/ reverse$/;"	v
send	ErrorCollector.php	/^    public function send($severity, $msg) {$/;"	f
sensitive	AttrDef/Enum.php	/^            $sensitive = false;$/;"	v
sensitive	AttrDef/Enum.php	/^            $sensitive = true;$/;"	v
sep	Language.php	/^        $sep      = $this->getMessage('Item separator');$/;"	v
sep_last	Language.php	/^        $sep_last = $this->getMessage('Item separator last');$/;"	v
serials	Config.php	/^    protected $serials = array();$/;"	v
set	AttrTypes.php	/^    public function set($type, $impl) {$/;"	f
set	Config.php	/^    public function set($key, $value, $a = null) {$/;"	f
set	DefinitionCache.php	/^    abstract public function set($def, $config);$/;"	f
set	DefinitionCache/Decorator.php	/^    public function set($def, $config) {$/;"	f
set	DefinitionCache/Decorator/Cleanup.php	/^    public function set($def, $config) {$/;"	f
set	DefinitionCache/Decorator/Memory.php	/^    public function set($def, $config) {$/;"	f
set	DefinitionCache/Null.php	/^    public function set($def, $config) {$/;"	f
set	DefinitionCache/Serializer.php	/^    public function set($def, $config) {$/;"	f
set	PropertyList.php	/^    public function set($name, $value) {$/;"	f
setParent	PropertyList.php	/^    public function setParent($plist) {$/;"	f
setTextareaDimensions	Printer/ConfigForm.php	/^    public function setTextareaDimensions($cols = null, $rows = null) {$/;"	f
setup	Definition.php	/^    public $setup = false;$/;"	v
setup	Definition.php	/^    public function setup($config) {$/;"	f
setup	DefinitionCacheFactory.php	/^    public function setup() {$/;"	f
setup	EntityLookup.php	/^    public function setup($file = false) {$/;"	f
setup	HTMLModule.php	/^    public function setup($config) {}$/;"	f
setup	HTMLModule/Bdo.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Edit.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Forms.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Hypertext.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Image.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Legacy.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/List.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Name.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Object.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Presentation.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Proprietary.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Ruby.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/SafeEmbed.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/SafeObject.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Scripting.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/StyleAttribute.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Tables.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Target.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Text.php	/^    public function setup($config) {$/;"	f
setup	HTMLModule/Tidy.php	/^    public function setup($config) {$/;"	f
setup	HTMLModuleManager.php	/^    public function setup($config) {$/;"	f
setup	LanguageFactory.php	/^    public function setup() {$/;"	f
setupConfigStuff	CSSDefinition.php	/^    protected function setupConfigStuff($config) {$/;"	f
setupConfigStuff	HTMLDefinition.php	/^    protected function setupConfigStuff($config) {$/;"	f
setupFilters	URIDefinition.php	/^    protected function setupFilters($config) {$/;"	f
setupMemberVariables	URIDefinition.php	/^    protected function setupMemberVariables($config) {$/;"	f
shift	Encoder.php	/^                    $shift = ($mState - 1) * 6;$/;"	v
should	Encoder.php	/^ * @note All functions in this class should be static.$/;"	c
should	Lexer.php	/^ * This class should not be directly instantiated, but you may use create() to$/;"	c
sigfigs	UnitConverter.php	/^            $sigfigs = strlen(ltrim($n, '0.')); \/\/ eliminate extra decimal character$/;"	v
sigfigs	UnitConverter.php	/^            $sigfigs = strlen(rtrim($n, '0'));$/;"	v
sigfigs	UnitConverter.php	/^        $sigfigs = $this->getSigFigs($n);$/;"	v
sigfigs	UnitConverter.php	/^        if ($sigfigs < $this->outputPrecision) $sigfigs = $this->outputPrecision;$/;"	v
sign	AttrDef/CSS/Number.php	/^                $sign = '-';$/;"	v
sign	AttrDef/CSS/Number.php	/^        $sign = '';$/;"	v
single	StringHashParser.php	/^                $single = false;$/;"	v
single	StringHashParser.php	/^                $single = true;$/;"	v
single	StringHashParser.php	/^        $single  = false;$/;"	v
size	AttrDef/CSS/Font.php	/^        for ($i = 0, $size = count($bits); $i < $size; $i++) {$/;"	v
size	Generator.php	/^        for ($i = 0, $size = count($tokens); $i < $size; $i++) {$/;"	v
size	Lexer/DirectLex.php	/^        $size   = strlen($string); \/\/ size of the string (stays the same)$/;"	v
size	Strategy/FixNesting.php	/^            $size = count($tokens);$/;"	v
size	Strategy/FixNesting.php	/^        for ($i = 0, $size = count($tokens) ; $i < $size; ) {$/;"	v
size	Strategy/MakeWellFormed.php	/^            $size = count($this->stack);$/;"	v
size	TagTransform/Font.php	/^                $size = (int) $attr['size'];$/;"	v
skey	Config.php	/^            $skey = "$ns.$directive";$/;"	v
skipped_tags	Strategy/MakeWellFormed.php	/^                    $skipped_tags = array_slice($this->stack, $j);$/;"	v
skipped_tags	Strategy/MakeWellFormed.php	/^            $skipped_tags = false;$/;"	v
small	HTMLModule/Presentation.php	/^        $small = $this->addElement('small',  'Inline', 'Inline', 'Common');$/;"	v
so	Generator.php	/^ * @todo Refactor interface so that configuration\/context is determined$/;"	i
special	Lexer/PH5P.php	/^    private $special = array('address','area','base','basefont','bgsound',$/;"	v
specialEntityCallback	EntityParser.php	/^    protected function specialEntityCallback($matches) {$/;"	f
special_cases	HTMLModuleManager.php	/^        $special_cases = $config->get('HTML.CoreModules');$/;"	v
split	AttrDef/HTML/Class.php	/^    protected function split($string, $config, $context) {$/;"	f
split	AttrDef/HTML/Nmtokens.php	/^    protected function split($string, $config, $context) {$/;"	f
squash	PropertyList.php	/^    public function squash($force = false) {$/;"	f
src	AttrTransform/ImgRequired.php	/^            $src = false;$/;"	v
src	AttrTransform/ImgRequired.php	/^        $src = true;$/;"	v
stack	ErrorCollector.php	/^                $stack = array_merge($stack, array_reverse($array, true));$/;"	v
stack	ErrorCollector.php	/^        $stack = array($struct);$/;"	v
stack	Lexer/PH5P.php	/^    public $stack = array();$/;"	v
stack	Strategy/FixNesting.php	/^        $stack = array();$/;"	v
stack	Strategy/MakeWellFormed.php	/^        $stack = array();$/;"	v
stack	URIFilter/MakeAbsolute.php	/^            $stack = explode('\/', $uri->path);$/;"	v
stack	URIFilter/MakeAbsolute.php	/^        $stack = $this->_collapseStack($stack); \/\/ do pre-parsing$/;"	v
stack	URIFilter/MakeAbsolute.php	/^        $stack = explode('\/', $this->base->path);$/;"	v
stack_length	Lexer/PH5P.php	/^                    $stack_length = count($this->stack) - 1;$/;"	v
stage	AttrDef/CSS/Font.php	/^                        $stage = 2;$/;"	v
stage	AttrDef/CSS/Font.php	/^                    if (count($caught) >= 3) $stage = 1;$/;"	v
stage	AttrDef/CSS/Font.php	/^        $stage = 0; \/\/ this indicates what we're looking for$/;"	v
stage_1	AttrDef/CSS/Font.php	/^        $stage_1 = array('font-style', 'font-variant', 'font-weight');$/;"	v
standalone	ElementDef.php	/^    public $standalone = true;$/;"	v
start	Lexer/PH5P.php	/^        $start = $this->char;$/;"	v
start	Printer.php	/^    protected function start($tag, $attr = array()) {$/;"	f
start_token	Strategy/FixNesting.php	/^            $start_token = $tokens[$i]; \/\/ to make token available via CurrentToken$/;"	v
start_token	Strategy/FixNesting.php	/^        $start_token = false;$/;"	v
state	StringHashParser.php	/^                    $state  = $this->default;$/;"	v
state	StringHashParser.php	/^                $state  = false;$/;"	v
state	StringHashParser.php	/^                $state = trim($line, '- ');$/;"	v
state	StringHashParser.php	/^        $state   = false;$/;"	v
state	UnitConverter.php	/^            $state = $dest_state;$/;"	v
state	UnitConverter.php	/^            if (isset($x[$unit])) $state = $k;$/;"	v
state	UnitConverter.php	/^        $state = $dest_state = false;$/;"	v
status	AttrDef/CSS/BackgroundPosition.php	/^                $status = $lookup[$lbit];$/;"	v
status	DefinitionCache/Decorator/Cleanup.php	/^        $status = parent::add($def, $config);$/;"	v
status	DefinitionCache/Decorator/Cleanup.php	/^        $status = parent::replace($def, $config);$/;"	v
status	DefinitionCache/Decorator/Cleanup.php	/^        $status = parent::set($def, $config);$/;"	v
status	DefinitionCache/Decorator/Memory.php	/^        $status = parent::add($def, $config);$/;"	v
status	DefinitionCache/Decorator/Memory.php	/^        $status = parent::replace($def, $config);$/;"	v
status	DefinitionCache/Decorator/Memory.php	/^        $status = parent::set($def, $config);$/;"	v
step_seven	Lexer/PH5P.php	/^                $step_seven = false;$/;"	v
step_seven	Lexer/PH5P.php	/^                $step_seven = true;$/;"	v
step_seven	Lexer/PH5P.php	/^            if(isset($step_seven) && $step_seven === true) {$/;"	v
stop	Lexer/PH5P.php	/^                        $stop = false;$/;"	v
str	Encoder.php	/^                $str = strtr($str, $clear_fix);$/;"	v
str	Encoder.php	/^            $str = HTMLPurifier_Encoder::convertToASCIIDumbLossless($str);$/;"	v
str	Encoder.php	/^            $str = iconv($encoding, 'utf-8\/\/IGNORE', $str);$/;"	v
str	Encoder.php	/^            $str = iconv('utf-8', $encoding . '\/\/IGNORE', $str);$/;"	v
str	Encoder.php	/^            $str = strtr($str, HTMLPurifier_Encoder::testEncodingSupportsASCII($encoding));$/;"	v
str	Encoder.php	/^            $str = strtr($str, array_flip($ascii_fix));$/;"	v
str	Encoder.php	/^            $str = utf8_decode($str);$/;"	v
str	Encoder.php	/^            $str = utf8_encode($str);$/;"	v
strategies	Strategy/Composite.php	/^    protected $strategies = array();$/;"	v
strike	HTMLModule/Legacy.php	/^        $strike = $this->addElement('strike', 'Inline', 'Inline', 'Common');$/;"	v
string	AttrDef.php	/^        $string = str_replace(array("\\n", "\\t", "\\r"), ' ', $string);$/;"	v
string	AttrDef.php	/^        $string = trim($string);$/;"	v
string	AttrDef/CSS/Background.php	/^        $string = $this->mungeRgb($string);$/;"	v
string	AttrDef/CSS/Background.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/BackgroundPosition.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/Border.php	/^        $string = $this->mungeRgb($string);$/;"	v
string	AttrDef/CSS/Border.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/Font.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/ImportantDecorator.php	/^                $string = rtrim(substr($temp, 0, -1));$/;"	v
string	AttrDef/CSS/ImportantDecorator.php	/^        $string = $this->def->validate($string, $config, $context);$/;"	v
string	AttrDef/CSS/ImportantDecorator.php	/^        $string = trim($string);$/;"	v
string	AttrDef/CSS/Length.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/ListStyle.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/Multiple.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/Percentage.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/CSS/TextDecoration.php	/^        $string = strtolower($this->parseCDATA($string));$/;"	v
string	AttrDef/Enum.php	/^            $string = ctype_lower($string) ? $string : strtolower($string);$/;"	v
string	AttrDef/Enum.php	/^            $string = substr($string, 2);$/;"	v
string	AttrDef/Enum.php	/^        $string = trim($string);$/;"	v
string	AttrDef/HTML/Color.php	/^        $string = trim($string);$/;"	v
string	AttrDef/HTML/Length.php	/^        $string = trim($string);$/;"	v
string	AttrDef/HTML/LinkTypes.php	/^        $string = $this->parseCDATA($string);$/;"	v
string	AttrDef/HTML/LinkTypes.php	/^        $string = implode(' ', array_keys($ret_lookup));$/;"	v
string	AttrDef/HTML/MultiLength.php	/^        $string = trim($string);$/;"	v
string	AttrDef/HTML/Nmtokens.php	/^        $string = trim($string);$/;"	v
string	AttrDef/HTML/Pixels.php	/^            $string = substr($string, 0, $length - 2);$/;"	v
string	AttrDef/HTML/Pixels.php	/^        $string = trim($string);$/;"	v
string	AttrDef/Lang.php	/^        $string = trim($string);$/;"	v
string	AttrDef/URI/Email/SimpleCheck.php	/^        $string = trim($string);$/;"	v
string	AttrTypes.php	/^        else $string = '';$/;"	v
string	ErrorCollector.php	/^                $string = '';$/;"	v
string	Lexer.php	/^        $string = $this->_entity_parser->substituteSpecialEntities($string);$/;"	v
string	Lexer.php	/^        $string = strtr($string, $this->_special_entity2str);$/;"	v
string	Lexer/DirectLex.php	/^        $string = (string) $string; \/\/ quick typecast$/;"	v
string	Lexer/PEARSax3.php	/^        $string = $this->normalize($string, $config, $context);$/;"	v
string	Printer.php	/^        $string = HTMLPurifier_Encoder::cleanUTF8($string);$/;"	v
string	Printer.php	/^        $string = htmlspecialchars($string, ENT_COMPAT, 'UTF-8');$/;"	v
string	URIFilter/Munge.php	/^        $string = $uri->toString();$/;"	v
stringTypes	VarParser.php	/^    static public $stringTypes = array($/;"	v
stripped_token	Language.php	/^                        $stripped_token = clone $value;$/;"	v
strlen_segment	Lexer/DirectLex.php	/^                    $strlen_segment = $position_comment_end - $cursor;$/;"	v
strlen_segment	Lexer/DirectLex.php	/^                $strlen_segment = $position_next_gt - $cursor;$/;"	v
strong	HTMLModule/Text.php	/^        $strong = $this->addElement('strong',  'Inline', 'Inline', 'Common');$/;"	v
struct	ErrorCollector.php	/^                $struct = $this->lines[$line][$col] = $new_struct;$/;"	v
struct	ErrorCollector.php	/^                $struct = $this->lines[$line][$col];$/;"	v
struct	ErrorCollector.php	/^                $struct = $this->lines[-1] = $new_struct;$/;"	v
struct	ErrorCollector.php	/^                $struct = $this->lines[-1];$/;"	v
struct	ErrorCollector.php	/^            $struct = $struct->getChild(HTMLPurifier_ErrorStruct::ATTR, $attr);$/;"	v
struct	ErrorCollector.php	/^            $struct = $struct->getChild(HTMLPurifier_ErrorStruct::CSSPROP, $cssprop);$/;"	v
struct	ErrorCollector.php	/^        $struct = null;$/;"	v
style	AttrTransform/ImgSpace.php	/^        $style = '';$/;"	v
style	Filter/ExtractStyleBlocks.php	/^                $style = $this->cleanCSS($style, $config, $context);$/;"	v
style	TagTransform/Simple.php	/^    public function __construct($transform_to, $style = null) {$/;"	v
styleCallback	Filter/ExtractStyleBlocks.php	/^    protected function styleCallback($matches) {$/;"	f
style_blocks	Filter/ExtractStyleBlocks.php	/^        $style_blocks = $this->_styleMatches;$/;"	v
subst	ErrorCollector.php	/^        $subst = array();$/;"	v
subst	Language.php	/^        $subst = array();$/;"	v
substituteNonSpecialEntities	EntityParser.php	/^    public function substituteNonSpecialEntities($string) {$/;"	f
substituteSpecialEntities	EntityParser.php	/^    public function substituteSpecialEntities($string) {$/;"	f
substrCount	Lexer/DirectLex.php	/^    protected function substrCount($haystack, $needle, $offset, $length) {$/;"	f
subtags	AttrDef/Lang.php	/^        $subtags = explode('-', $string);$/;"	v
support	CSSDefinition.php	/^        $support = "(for information on implementing this, see the ".$/;"	v
support	HTMLDefinition.php	/^        $support = "(for information on implementing this, see the ".$/;"	v
swap	Strategy/MakeWellFormed.php	/^    private function swap($token) {$/;"	f
synchronize_interval	Lexer/DirectLex.php	/^                    $loops % $synchronize_interval === 0 \/\/ time to synchronize!$/;"	v
synchronize_interval	Lexer/DirectLex.php	/^        $synchronize_interval = $config->get('Core.DirectLexLineNumberSyncInterval');$/;"	v
system_fonts	AttrDef/CSS/Font.php	/^        static $system_fonts = array($/;"	v
t	AttrTransform/Input.php	/^        else $t = strtolower($attr['type']);$/;"	v
t	AttrTransform/Input.php	/^        if (!isset($attr['type'])) $t = 'text';$/;"	v
t	AttrTransform/Input.php	/^        if (!isset($attr['value']) && ($t === 'radio' || $t === 'checkbox')) {$/;"	v
t	Strategy/MakeWellFormed.php	/^            $t = 0;$/;"	v
t	Strategy/MakeWellFormed.php	/^            $t == 0 || isset($tokens[$t - 1]);$/;"	v
t	Strategy/MakeWellFormed.php	/^        $t = false; \/\/ token index$/;"	v
table	HTMLModule/Legacy.php	/^        $table = $this->addBlankElement('table');$/;"	v
table	Lexer/PH5P.php	/^                        $table = $this->stack[$n];$/;"	v
table	Lexer/PH5P.php	/^                    $table = $this->stack[$n];$/;"	v
table	Lexer/PH5P.php	/^    private function elementInScope($el, $table = false) {$/;"	v
tag	HTMLDefinition.php	/^            foreach ($this->info as $tag => $info) {$/;"	v
tag	HTMLDefinition.php	/^        foreach ($this->info as $tag => $info) {$/;"	v
tagNameState	Lexer/PH5P.php	/^    private function tagNameState() {$/;"	f
tagOpenState	Lexer/PH5P.php	/^    private function tagOpenState() {$/;"	f
tag_index	ChildDef/Table.php	/^                    $tag_index = 0;$/;"	v
tag_index	ChildDef/Table.php	/^        $tag_index = 0; \/\/ the first node might be whitespace,$/;"	v
tag_name	Lexer/DOMLex.php	/^                    $tag_name = $node->tagName, \/\/ somehow, it get's dropped$/;"	v
td	HTMLModule/Legacy.php	/^        $td = $this->addBlankElement('td');$/;"	v
temp	AttrDef/CSS/ImportantDecorator.php	/^            $temp = rtrim(substr($string, 0, -9));$/;"	v
temp	ContentSets.php	/^                $temp = $this->convertToLookup($value);$/;"	v
testEncodingSupportsASCII	Encoder.php	/^    public static function testEncodingSupportsASCII($encoding, $bypass = false) {$/;"	f
tests	Encoder.php	/^     * This expensive function tests whether or not a given character$/;"	f
text	Injector/AutoParagraph.php	/^        $text = $token->data;$/;"	v
text	Lexer/PH5P.php	/^            $text = $this->dom->createTextNode($token['data']);$/;"	v
text	Lexer/PH5P.php	/^        $text = $this->dom->createTextNode($data);$/;"	v
text	PercentEncoder.php	/^            $text     = substr($part, 2);$/;"	v
text	Printer.php	/^    protected function text($text) {$/;"	f
textarea	HTMLModule/Forms.php	/^        $textarea = $this->addElement('textarea', 'Formctrl', 'Optional: #PCDATA', 'Common', array($/;"	v
textify_comments	Strategy/RemoveForeignElements.php	/^                        $textify_comments = $token->name;$/;"	v
textify_comments	Strategy/RemoveForeignElements.php	/^                        $textify_comments = false;$/;"	v
textify_comments	Strategy/RemoveForeignElements.php	/^        $textify_comments = false;$/;"	v
tfoot	ChildDef/Table.php	/^        $tfoot   = false;$/;"	v
th	HTMLModule/Legacy.php	/^        $th = $this->addBlankElement('th');$/;"	v
that	Bootstrap.php	/^ * Bootstrap class that contains meta-functionality for HTML Purifier such as$/;"	c
that	ConfigSchema/InterchangeBuilder.php	/^     * Convenience function that creates an HTMLPurifier_ConfigSchema_Interchange_Id$/;"	f
that	Definition.php	/^     * Setup function that aborts if already setup$/;"	f
that	DefinitionCache/Decorator/Cleanup.php	/^ * Definition cache decorator class that cleans up the cache$/;"	c
that	DefinitionCache/Decorator/Memory.php	/^ * Definition cache decorator class that saves all cache retrievals$/;"	c
that	Encoder.php	/^     *       function that needs to be able to understand UTF-8 characters.$/;"	f
that	ErrorCollector.php	/^ * Error collection class that enables HTML Purifier to report HTML$/;"	c
that	HTMLModule.php	/^     * Convenience function that creates a totally blank, non-standalone$/;"	f
that	HTMLModule.php	/^     * Convenience function that generates a lookup table with boolean$/;"	f
that	HTMLModule.php	/^     * Convenience function that merges a list of attribute includes into$/;"	f
that	HTMLModule.php	/^     * Convenience function that registers an element to a content set$/;"	f
that	HTMLModule.php	/^     * Convenience function that sets up a new element$/;"	f
that	HTMLModule.php	/^     * Convenience function that transforms single-string contents$/;"	f
that	Lexer/DOMLex.php	/^     * Callback function that entity-izes ampersands in comments so that$/;"	f
that	Lexer/DOMLex.php	/^     * Recursive function that tokenizes a node, putting it into an accumulator.$/;"	f
that	Printer.php	/^     * Main function that renders object or aspect of that object$/;"	f
that	Token.php	/^ * Abstract base token class that all others inherit from.$/;"	c
the_same	Lexer/PH5P.php	/^        $the_same = count($this->tree->stack) > 0 && $next_node === end($this->tree->stack)->nodeName;$/;"	v
thead	ChildDef/Table.php	/^        $thead   = false;$/;"	v
tidy	Filter/ExtractStyleBlocks.php	/^        $tidy = $config->get('Filter.ExtractStyleBlocks.TidyImpl');$/;"	v
tidy	Generator.php	/^            $tidy = new Tidy;$/;"	v
tidyModules	Doctype.php	/^        $tidyModules = array(), $aliases = array(), $dtd_public = null, $dtd_system = null$/;"	v
tidyModules	Doctype.php	/^    public $tidyModules = array();$/;"	v
tidy_modules	DoctypeRegistry.php	/^        $tidy_modules = array(), $aliases = array(), $dtd_public = null, $dtd_system = null$/;"	v
tidy_modules	DoctypeRegistry.php	/^        if (!is_array($tidy_modules)) $tidy_modules = array($tidy_modules);$/;"	v
tmp	Encoder.php	/^                    $tmp = $in;$/;"	v
tmp	Encoder.php	/^                    $tmp = ($tmp & 0x0000003F) << $shift;$/;"	v
to	AttrDef/URI/IPv4.php	/^     * Lazy load function to prevent regex from being stuffed in$/;"	f
to	ConfigSchema/Interchange.php	/^     * Convenience function to perform standard validation. Throws exception$/;"	f
to	ContentSets.php	/^            'Could not determine which ChildDef class to instantiate',$/;"	c
to	DoctypeRegistry.php	/^     * @note Use this function to get a copy of doctype that config$/;"	f
to	Lexer.php	/^ *       many of the utility functions require a class to be instantiated.$/;"	c
to	Lexer/DOMLex.php	/^ *       our own function to do that.$/;"	f
toString	ConfigSchema/Interchange/Id.php	/^    public function toString() {$/;"	f
toString	Length.php	/^    public function toString() {$/;"	f
toString	URI.php	/^    public function toString() {$/;"	f
toggleWriteability	Printer/ConfigForm.js	/^function toggleWriteability(id_of_patient, checked) {$/;"	f
token	AttrDef/CSS/DenyElementDecorator.php	/^        $token = $context->get('CurrentToken', true);$/;"	v
token	AttrDef/Switch.php	/^        $token = $context->get('CurrentToken', true);$/;"	v
token	ChildDef/StrictBlockquote.php	/^            $token = $result[$i];$/;"	v
token	ErrorCollector.php	/^        $token = $this->context->get('CurrentToken', true);$/;"	v
token	Injector/AutoParagraph.php	/^                            $token = array($this->_pStart(), $token);$/;"	v
token	Injector/AutoParagraph.php	/^                        if (!is_array($token)) $token = array($token);$/;"	v
token	Injector/AutoParagraph.php	/^                    $token = array($this->_pStart());$/;"	v
token	Injector/AutoParagraph.php	/^                    $token = array($this->_pStart(), $token);$/;"	v
token	Injector/AutoParagraph.php	/^            $token = array();$/;"	v
token	Injector/DisplayLinkURI.php	/^            $token = array($token, new HTMLPurifier_Token_Text(" ($url)"));$/;"	v
token	Injector/Linkify.php	/^        $token = array();$/;"	v
token	Injector/PurifierLinkify.php	/^        $token = array();$/;"	v
token	Injector/RemoveEmpty.php	/^            $token = $i - $this->inputIndex + 1;$/;"	v
token	Injector/SafeObject.php	/^                    $token = false;$/;"	v
token	Injector/SafeObject.php	/^                $token = false;$/;"	v
token	Injector/SafeObject.php	/^            $token = $new;$/;"	v
token	Lexer/DirectLex.php	/^                        $token = new HTMLPurifier_Token_Empty($segment);$/;"	v
token	Lexer/DirectLex.php	/^                        $token = new HTMLPurifier_Token_Start($segment);$/;"	v
token	Lexer/DirectLex.php	/^                    $token = new HTMLPurifier_Token_Empty($type, $attr);$/;"	v
token	Lexer/DirectLex.php	/^                    $token = new HTMLPurifier_Token_End($type);$/;"	v
token	Lexer/DirectLex.php	/^                    $token = new HTMLPurifier_Token_Start($type, $attr);$/;"	v
token	Lexer/DirectLex.php	/^                    $token = new HTMLPurifier_Token_Text('<');$/;"	v
token	Lexer/DirectLex.php	/^                    $token = new$/;"	v
token	Lexer/DirectLex.php	/^                $token = new$/;"	v
token	Strategy/MakeWellFormed.php	/^                $token = new HTMLPurifier_Token_Empty($token->name, $token->attr);$/;"	v
token	Strategy/MakeWellFormed.php	/^            $token = $tokens[$t];$/;"	v
token	Strategy/MakeWellFormed.php	/^        $token      = false; \/\/ the current token$/;"	v
token	Strategy/MakeWellFormed.php	/^        if ($token === false)  $token = array(1);$/;"	v
token	Strategy/MakeWellFormed.php	/^        if (is_int($token))    $token = array($token);$/;"	v
token	Strategy/MakeWellFormed.php	/^        if (is_object($token)) $token = array(1, $token);$/;"	v
token	Strategy/RemoveForeignElements.php	/^                    $token = $definition->$/;"	v
token	Strategy/RemoveForeignElements.php	/^                    $token = new HTMLPurifier_Token_Text($/;"	v
token	Strategy/RemoveForeignElements.php	/^                    $token = new HTMLPurifier_Token_Text($data);$/;"	v
token	Strategy/RemoveForeignElements.php	/^        $token = false;$/;"	v
token	Strategy/ValidateAttributes.php	/^        $token = false;$/;"	v
token	URIFilter/Munge.php	/^        $token = $context->get('CurrentToken', true);$/;"	v
tokenizeDOM	Lexer/DOMLex.php	/^    protected function tokenizeDOM($node, &$tokens, $collect = false) {$/;"	f
tokenizeHTML	Lexer.php	/^    public function tokenizeHTML($string, $config, $context) {$/;"	f
tokenizeHTML	Lexer/DOMLex.php	/^    public function tokenizeHTML($html, $config, $context) {$/;"	f
tokenizeHTML	Lexer/DirectLex.php	/^    public function tokenizeHTML($html, $config, $context) {$/;"	f
tokenizeHTML	Lexer/PEARSax3.php	/^    public function tokenizeHTML($string, $config, $context) {$/;"	f
tokenizeHTML	Lexer/PH5P.php	/^    public function tokenizeHTML($html, $config, $context) {$/;"	f
tokens	AttrDef/HTML/Nmtokens.php	/^        $tokens = $this->filter($tokens, $config, $context);$/;"	v
tokens	AttrDef/HTML/Nmtokens.php	/^        $tokens = $this->split($string, $config, $context);$/;"	v
tokens	Lexer/DOMLex.php	/^        $tokens = array();$/;"	v
tokens	Lexer/PEARSax3.php	/^    protected $tokens = array();$/;"	v
tokens	Lexer/PH5P.php	/^        $tokens = array();$/;"	v
tokens	Strategy/Composite.php	/^            $tokens = $strategy->execute($tokens, $config, $context);$/;"	v
too	ElementDef.php	/^ *       Please update that class too.$/;"	c
top_nesting	Strategy/MakeWellFormed.php	/^                $top_nesting = array_pop($this->stack);$/;"	v
toplabel	AttrDef/URI/Host.php	/^        $toplabel      = "$a($and*$an)?";$/;"	v
tr	HTMLModule/Legacy.php	/^        $tr = $this->addBlankElement('tr');$/;"	v
tracksLineNumbers	Lexer.php	/^    public $tracksLineNumbers = false;$/;"	v
tracksLineNumbers	Lexer/DirectLex.php	/^    public $tracksLineNumbers = true;$/;"	v
trailingEndPhase	Lexer/PH5P.php	/^    private function trailingEndPhase($token) {$/;"	f
transform	AttrTransform.php	/^    abstract public function transform($attr, $config, $context);$/;"	f
transform	AttrTransform/Background.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/BdoDir.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/BgColor.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/BoolToCSS.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Border.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/EnumToCSS.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/ImgRequired.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/ImgSpace.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Input.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Lang.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Length.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Name.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/NameSync.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/SafeEmbed.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/SafeObject.php	/^    function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/SafeParam.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/ScriptRequired.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	AttrTransform/Textarea.php	/^    public function transform($attr, $config, $context) {$/;"	f
transform	TagTransform.php	/^    abstract public function transform($tag, $config, $context);$/;"	f
transform	TagTransform/Font.php	/^    public function transform($tag, $config, $context) {$/;"	f
transform	TagTransform/Simple.php	/^    public function transform($tag, $config, $context) {$/;"	f
transformAttrToAssoc	Lexer/DOMLex.php	/^    protected function transformAttrToAssoc($node_map) {$/;"	f
transform_to	TagTransform/Font.php	/^    public $transform_to = 'span';$/;"	v
transitional	HTMLModuleManager.php	/^        $transitional = array('Legacy', 'Target');$/;"	v
triad	AttrDef/CSS/Color.php	/^            $triad = substr($color, 4, $length - 4 - 1);$/;"	v
triggerError	Config.php	/^    protected function triggerError($msg, $no) {$/;"	f
trim	AttrDef/HTML/ID.php	/^            $trim = trim( \/\/ primitive style of regexps, I suppose$/;"	v
trusted	HTMLModuleManager.php	/^        if ($trusted === null) $trusted = $this->trusted;$/;"	v
trusted	HTMLModuleManager.php	/^    public $trusted = false;$/;"	v
trusted	HTMLModuleManager.php	/^    public function getElement($name, $trusted = null) {$/;"	v
trusted	Strategy/RemoveForeignElements.php	/^        $trusted = $config->get('HTML.Trusted');$/;"	v
trusted_wh	CSSDefinition.php	/^        $trusted_wh = new HTMLPurifier_AttrDef_CSS_Composite(array($/;"	v
tt	HTMLModule/Presentation.php	/^        $tt = $this->addElement('tt',     'Inline', 'Inline', 'Common');$/;"	v
type	AttrDef/CSS/Color.php	/^                        $type = 'integer';$/;"	v
type	AttrDef/CSS/Color.php	/^                        $type = 'percentage';$/;"	v
type	AttrDef/CSS/Color.php	/^            $type = false; \/\/ to ensure that they're all the same type$/;"	v
type	CSSDefinition.php	/^    public $type = 'CSS';$/;"	v
type	ChildDef/Chameleon.php	/^    public $type = 'chameleon';$/;"	v
type	ChildDef/Custom.php	/^    public $type = 'custom';$/;"	v
type	ChildDef/Empty.php	/^    public $type = 'empty';$/;"	v
type	ChildDef/Optional.php	/^    public $type = 'optional';$/;"	v
type	ChildDef/Required.php	/^    public $type = 'required';$/;"	v
type	ChildDef/StrictBlockquote.php	/^    public $type = 'strictblockquote';$/;"	v
type	ChildDef/Table.php	/^    public $type = 'table';$/;"	v
type	Config.php	/^            $type = $rtype;$/;"	v
type	Config.php	/^            $type = -$rtype;$/;"	v
type	ConfigSchema/InterchangeBuilder.php	/^            $type = explode('\/', $hash->offsetGet('TYPE'));$/;"	v
type	ErrorCollector.php	/^            foreach ($current->children as $type => $array) {$/;"	v
type	HTMLDefinition.php	/^    public $type = 'HTML';$/;"	v
type	HTMLModule/Tidy.php	/^                        $type = "info_$type";$/;"	v
type	HTMLModule/Tidy.php	/^            $type = 'attr_transform_' . $property;$/;"	v
type	Lexer/DirectLex.php	/^                    $type = substr($segment, 1);$/;"	v
type	Lexer/DirectLex.php	/^                $type = substr($segment, 0, $position_first_space);$/;"	v
type	Printer/ConfigForm.php	/^                    $type = $def->type;$/;"	v
type	Printer/ConfigForm.php	/^                    $type = abs($def);$/;"	v
type	Printer/ConfigForm.php	/^                if (!isset($this->fields[$type])) $type = 0; \/\/ default$/;"	v
type	Printer/ConfigForm.php	/^            $type = $def->type;$/;"	v
type	Printer/ConfigForm.php	/^            $type = abs($def);$/;"	v
type	Printer/ConfigForm.php	/^            $type === HTMLPurifier_VarParser::ALIST ||$/;"	v
type	Printer/ConfigForm.php	/^            $type === HTMLPurifier_VarParser::HASH ||$/;"	v
type	Printer/ConfigForm.php	/^            $type === HTMLPurifier_VarParser::ITEXT ||$/;"	v
type	Printer/ConfigForm.php	/^            $type === HTMLPurifier_VarParser::LOOKUP$/;"	v
type	Printer/ConfigForm.php	/^            $type === HTMLPurifier_VarParser::TEXT ||$/;"	v
type	Strategy/MakeWellFormed.php	/^                $type = $definition->info[$token->name]->child->type;$/;"	v
type	Strategy/MakeWellFormed.php	/^                $type = false; \/\/ Type is unknown, treat accordingly$/;"	v
type	URIDefinition.php	/^    public $type = 'URI';$/;"	v
type	URIScheme/ftp.php	/^            $type = substr($uri->path, $semicolon_pos + 1); \/\/ no semicolon$/;"	v
type	VarParser.php	/^                $type = HTMLPurifier_VarParser::$types[$type];$/;"	v
type	VarParser.php	/^                if ($type == self::ISTRING || $type == self::ITEXT) $var = strtolower($var);$/;"	v
typeAllowsNull	ConfigSchema/Interchange/Directive.php	/^    public $typeAllowsNull = false;$/;"	v
type_obj	Printer/ConfigForm.php	/^                    $type_obj = new HTMLPurifier_Printer_ConfigForm_NullDecorator($type_obj);$/;"	v
type_obj	Printer/ConfigForm.php	/^                $type_obj = $this->fields[$type];$/;"	v
type_ret	URIScheme/ftp.php	/^                    $type_ret = ";type=$typecode";$/;"	v
type_ret	URIScheme/ftp.php	/^            $type_ret = '';$/;"	v
typecode	URIScheme/ftp.php	/^                } elseif ($typecode === 'a' || $typecode === 'i' || $typecode === 'd') {$/;"	v
types	VarParser.php	/^    static public $types = array($/;"	v
u	HTMLModule/Legacy.php	/^        $u = $this->addElement('u', 'Inline', 'Inline', 'Common');$/;"	v
u	Length.php	/^    public function __construct($n = '0', $u = false) {$/;"	v
ul	HTMLModule/Legacy.php	/^        $ul = $this->addBlankElement('ul');$/;"	v
ul_types	HTMLModule/Tidy/XHTMLAndHTML4.php	/^            $ul_types = array($/;"	v
unichr	Encoder.php	/^    public static function unichr($code) {$/;"	f
unit	Length.php	/^        $unit = substr($s, $n_length);$/;"	v
unit	Length.php	/^        if ($unit === '') $unit = false;$/;"	v
unit	UnitConverter.php	/^                $unit = $dest_unit;$/;"	v
unit	UnitConverter.php	/^                $unit = $to_unit;$/;"	v
unit	UnitConverter.php	/^            $unit = self::$units[$state][$dest_state][2];$/;"	v
unit	UnitConverter.php	/^        $unit = $length->getUnit();$/;"	v
unit	UnitConverter.php	/^        \/\/ Post-condition: $unit == $to_unit$/;"	v
unit	UnitConverter.php	/^        if ($n === '0' || $unit === false) {$/;"	v
units	UnitConverter.php	/^    protected static $units = array($/;"	v
unpack	AttrDef/URI/Email.php	/^    function unpack($string) {$/;"	f
uri	AttrDef/CSS/URI.php	/^            $uri = substr($uri, 1, $new_length - 1);$/;"	v
uri	AttrDef/CSS/URI.php	/^        $uri = str_replace($values, $keys, $uri);$/;"	v
uri	AttrDef/CSS/URI.php	/^        $uri = trim(substr($uri_string, 0, $new_length));$/;"	v
uri	AttrDef/URI.php	/^        $uri = $this->parseCDATA($uri);$/;"	v
uri	AttrDef/URI.php	/^        $uri = $this->parser->parse($uri);$/;"	v
uri	URIFilter/MakeAbsolute.php	/^            $uri = clone $this->base;$/;"	v
uri	URIFilter/Munge.php	/^        $uri = $new_uri; \/\/ overwrite$/;"	v
uri	URIParser.php	/^        $uri = $this->percentEncoder->normalize($uri);$/;"	v
uri_def	AttrDef/URI.php	/^            $uri_def = $config->getDefinition('URI');$/;"	v
uri_or_none	CSSDefinition.php	/^        $uri_or_none = new HTMLPurifier_AttrDef_CSS_Composite($/;"	v
uri_string	AttrDef/CSS/URI.php	/^        $uri_string = $this->parseCDATA($uri_string);$/;"	v
uri_string	AttrDef/CSS/URI.php	/^        $uri_string = substr($uri_string, 4);$/;"	v
url	Filter/YouTube.php	/^        $url = $this->armorUrl($matches[1]);$/;"	v
url	Injector/DisplayLinkURI.php	/^            $url = $token->start->attr['href'];$/;"	v
url	Printer/ConfigForm.php	/^                $url = str_replace('%s', urlencode("$ns.$directive"), $this->docURL);$/;"	v
userModules	HTMLModuleManager.php	/^    public $userModules = array();$/;"	v
userinfo	URIParser.php	/^            $userinfo   = !empty($matches[1]) ? $matches[2] : null;$/;"	v
uses	AttrDef/Enum.php	/^ * @warning The case-insensitive compare of this function uses PHP's$/;"	f
utf8	Encoder.php	/^                foreach ($ascii_fix as $utf8 => $native) $clear_fix[$utf8] = '';$/;"	v
val	ConfigSchema/Validator.php	/^        foreach ($d->allowed as $val => $x) {$/;"	v
val	Printer/ConfigForm.php	/^                    foreach ($array as $val => $b) {$/;"	v
val	Printer/ConfigForm.php	/^            foreach ($def->allowed as $val => $b) {$/;"	v
valid	AttrDef/URI/Host.php	/^            $valid = $this->ipv6->validate($ip, $config, $context);$/;"	v
valid_values	AttrDef/Enum.php	/^        $valid_values = array(), $case_sensitive = false$/;"	v
valid_values	AttrDef/Enum.php	/^    public $valid_values   = array();$/;"	v
valid_values	AttrDef/HTML/FrameTarget.php	/^    public $valid_values = false; \/\/ uninitialized value$/;"	v
validate	AttrDef.php	/^    abstract public function validate($string, $config, $context);$/;"	f
validate	AttrDef/CSS.php	/^    public function validate($css, $config, $context) {$/;"	f
validate	AttrDef/CSS/AlphaValue.php	/^    public function validate($number, $config, $context) {$/;"	f
validate	AttrDef/CSS/Background.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/BackgroundPosition.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Border.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Color.php	/^    public function validate($color, $config, $context) {$/;"	f
validate	AttrDef/CSS/Composite.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/DenyElementDecorator.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Filter.php	/^    public function validate($value, $config, $context) {$/;"	f
validate	AttrDef/CSS/Font.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/FontFamily.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/ImportantDecorator.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Length.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/ListStyle.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Multiple.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/Number.php	/^    public function validate($number, $config, $context) {$/;"	f
validate	AttrDef/CSS/Percentage.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/TextDecoration.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/CSS/URI.php	/^    public function validate($uri_string, $config, $context) {$/;"	f
validate	AttrDef/Enum.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/Bool.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/Color.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/FrameTarget.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/ID.php	/^    public function validate($id, $config, $context) {$/;"	f
validate	AttrDef/HTML/Length.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/LinkTypes.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/MultiLength.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/Nmtokens.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/HTML/Pixels.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/Integer.php	/^    public function validate($integer, $config, $context) {$/;"	f
validate	AttrDef/Lang.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/Switch.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/Text.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/URI.php	/^    public function validate($uri, $config, $context) {$/;"	f
validate	AttrDef/URI/Email/SimpleCheck.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/URI/Host.php	/^    public function validate($string, $config, $context) {$/;"	f
validate	AttrDef/URI/IPv4.php	/^    public function validate($aIP, $config, $context) {$/;"	f
validate	AttrDef/URI/IPv6.php	/^    public function validate($aIP, $config, $context) {$/;"	f
validate	ConfigSchema/Interchange.php	/^    public function validate() {$/;"	f
validate	ConfigSchema/Validator.php	/^    public function validate($interchange) {$/;"	f
validate	Length.php	/^    protected function validate() {$/;"	f
validate	URI.php	/^    public function validate($config, $context) {$/;"	f
validate	URIScheme.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validate	URIScheme/ftp.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validate	URIScheme/http.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validate	URIScheme/mailto.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validate	URIScheme/news.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validate	URIScheme/nntp.php	/^    public function validate(&$uri, $config, $context) {$/;"	f
validateChildren	ChildDef.php	/^    abstract public function validateChildren($tokens_of_children, $config, $context);$/;"	f
validateChildren	ChildDef/Chameleon.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/Custom.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/Empty.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/Optional.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/Required.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/StrictBlockquote.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateChildren	ChildDef/Table.php	/^    public function validateChildren($tokens_of_children, $config, $context) {$/;"	f
validateDirective	ConfigSchema/Validator.php	/^    public function validateDirective($d) {$/;"	f
validateDirectiveAliases	ConfigSchema/Validator.php	/^    public function validateDirectiveAliases($d) {$/;"	f
validateDirectiveAllowed	ConfigSchema/Validator.php	/^    public function validateDirectiveAllowed($d) {$/;"	f
validateDirectiveValueAliases	ConfigSchema/Validator.php	/^    public function validateDirectiveValueAliases($d) {$/;"	f
validateId	ConfigSchema/Validator.php	/^    public function validateId($id) {$/;"	f
validateToken	AttrValidator.php	/^    public function validateToken(&$token, &$config, $context) {$/;"	f
validator	ConfigSchema/Interchange.php	/^        $validator = new HTMLPurifier_ConfigSchema_Validator();$/;"	v
validator	Strategy/ValidateAttributes.php	/^        $validator = new HTMLPurifier_AttrValidator();$/;"	v
value	AttrDef/CSS.php	/^            $value    = trim($value);$/;"	v
value	AttrDef/CSS/Filter.php	/^            $value = $this->intValidator->validate($value, $config, $context);$/;"	v
value	AttrDef/CSS/Filter.php	/^            $value = trim($value);$/;"	v
value	AttrDef/CSS/Filter.php	/^            if ($int < 0) $value = '0';$/;"	v
value	AttrDef/CSS/Filter.php	/^            if ($int > 100) $value = '100';$/;"	v
value	AttrDef/CSS/Filter.php	/^        $value = $this->parseCDATA($value);$/;"	v
value	AttrTransform.php	/^        $value = $attr[$key];$/;"	v
value	AttrTransform/EnumToCSS.php	/^        $value = trim($attr[$this->attr]);$/;"	v
value	AttrTransform/EnumToCSS.php	/^        if (!$this->caseSensitive) $value = strtolower($value);$/;"	v
value	Config.php	/^                $value = $def->aliases[$value];$/;"	v
value	Config.php	/^            $value = $a;$/;"	v
value	Config.php	/^            $value = $mq ? stripslashes($array[$skey]) : $array[$skey];$/;"	v
value	Config.php	/^            $value = $this->parser->parse($value, $type, $allow_null);$/;"	v
value	ConfigSchema/Builder/Xml.php	/^                    foreach ($directive->allowed as $value => $x) $this->writeElement('value', $value);$/;"	v
value	ContentSets.php	/^        $value = $def->content_model;$/;"	v
value	HTMLModule/Edit.php	/^        $value = explode('!', $def->content_model);$/;"	v
value	Lexer/DirectLex.php	/^                    $value = $quoted_value;$/;"	v
value	Lexer/DirectLex.php	/^                    $value = substr($quoted_value, 1);$/;"	v
value	Lexer/DirectLex.php	/^                $value = substr($quoted_value, 1, strlen($quoted_value) - 2);$/;"	v
value	Lexer/DirectLex.php	/^                $value = substr($string, $value_begin, $value_end - $value_begin);$/;"	v
value	Lexer/DirectLex.php	/^                if ($value === false) $value = '';$/;"	v
value	Lexer/DirectLex.php	/^            if ($value === false) $value = '';$/;"	v
value	Printer.php	/^                foreach ($obj->valid_values as $value => $bool) {$/;"	v
value	Printer.php	/^        if (is_bool($value)) $value = $value ? 'On' : 'Off';$/;"	v
value	Printer/ConfigForm.php	/^                    $value = $nvalue;$/;"	v
value	Printer/ConfigForm.php	/^                    $value = '';$/;"	v
value	Printer/ConfigForm.php	/^                    $value = array();$/;"	v
value	Printer/ConfigForm.php	/^                    $value = implode(PHP_EOL, $value);$/;"	v
value	Printer/ConfigForm.php	/^            $value = serialize($value);$/;"	v
value_begin	Lexer/DirectLex.php	/^                    $value_begin = $cursor;$/;"	v
value_end	Lexer/DirectLex.php	/^                    $value_end = $cursor;$/;"	v
values	AttrDef/CSS/URI.php	/^        $values = array('\\\\(', '\\\\)', '\\\\,', '\\\\ ', '\\\\"', "\\\\'");$/;"	v
values	AttrDef/Enum.php	/^        $values = explode(',', $string);$/;"	v
values	ContentSets.php	/^    protected $values = array();$/;"	v
values	Printer.php	/^                $values = array();$/;"	v
var	ChildDef/Table.php	/^                            $var = $collection[$tag_index]->name;$/;"	v
var	Context.php	/^            $var = null; \/\/ so we can return by reference$/;"	v
var	VarParser.php	/^        $var = $this->parseImplementation($var, $type, $allow_null);$/;"	v
var	VarParser.php	/^        if ($allow_null && $var === null) return null;$/;"	v
var	VarParser/Flexible.php	/^                        $var = $nvar;$/;"	v
var	VarParser/Flexible.php	/^                        $var = explode(',',$var);$/;"	v
var	VarParser/Flexible.php	/^                        $var = false;$/;"	v
var	VarParser/Flexible.php	/^                        $var = preg_split('\/(,|[\\n\\r]+)\/', $var);$/;"	v
var	VarParser/Flexible.php	/^                        $var = true;$/;"	v
var	VarParser/Flexible.php	/^                    $var = (bool) $var;$/;"	v
var	VarParser/Flexible.php	/^                    if ($var == 'on' || $var == 'true' || $var == '1') {$/;"	v
var	VarParser/Flexible.php	/^                    } elseif ($var == 'off' || $var == 'false' || $var == '0') {$/;"	v
var	VarParser/Flexible.php	/^                if ((is_string($var) && is_numeric($var)) || is_int($var)) $var = (float) $var;$/;"	v
var	VarParser/Flexible.php	/^                if (is_int($var) && ($var === 0 || $var === 1)) {$/;"	v
var	VarParser/Flexible.php	/^                if (is_string($var) && ctype_digit($var)) $var = (int) $var;$/;"	v
var	VarParser/Flexible.php	/^        if ($allow_null && $var === null) return null;$/;"	v
var	VarParser/Native.php	/^        $var = null;$/;"	v
version	Config.php	/^    public $version = '3.3.0';$/;"	v
vtype	VarParser.php	/^        $vtype = gettype($var);$/;"	v
w	Encoder.php	/^                    $w = (($code >> 18) & 7)  | 240;$/;"	v
was	AttrDef/Integer.php	/^ * @note While this class was modeled off the CSS definition, no currently$/;"	c
was	Encoder.php	/^     *       a string would be somewhat expensive, so the function was modded to$/;"	f
whitespace	ChildDef/Required.php	/^    protected $whitespace = false;$/;"	v
width	AttrTransform/ImgSpace.php	/^        $width = $this->confiscateAttr($attr, $this->attr);$/;"	v
will	HTMLModuleManager.php	/^     * @note This function will not call autoload, you must instantiate$/;"	f
will	URISchemeRegistry.php	/^     *       the function will copy it and return it all further times.$/;"	f
with	ConfigSchema/Validator.php	/^    protected function with($obj, $member) {$/;"	f
working	Encoder.php	/^                $working = $bytevalue & 0x07;$/;"	v
working	Encoder.php	/^                $working = $bytevalue & 0x0F;$/;"	v
working	Encoder.php	/^                $working = $bytevalue & 0x1F;$/;"	v
working	Encoder.php	/^                $working = $working << 6;$/;"	v
working	Encoder.php	/^        $working = 0;$/;"	v
would	ConfigSchema/Validator.php	/^ *       design decision in that class would prevent this validation from$/;"	c
wrapHTML	Lexer/DOMLex.php	/^    protected function wrapHTML($html, $config, $context) {$/;"	f
writeHTMLDiv	ConfigSchema/Builder/Xml.php	/^    protected function writeHTMLDiv($html) {$/;"	f
x	Encoder.php	/^            $x = $code;$/;"	v
x	Encoder.php	/^            $x = ($code & 63) | 128;$/;"	v
x	Encoder.php	/^        $x = $y = $z = $w = 0;$/;"	v
xml	Doctype.php	/^    public $xml = true;$/;"	v
xml	Doctype.php	/^    public function __construct($name = null, $xml = true, $modules = array(),$/;"	v
xml	DoctypeRegistry.php	/^    public function register($doctype, $xml = true, $modules = array(),$/;"	v
xml	HTMLModuleManager.php	/^        $xml = array('XMLCommonAttributes');$/;"	v
xml_lang	AttrTransform/Lang.php	/^        $xml_lang = isset($attr['xml:lang']) ? $attr['xml:lang'] : false;$/;"	v
xml_lang	AttrTransform/Lang.php	/^        if ($lang !== false && $xml_lang === false) {$/;"	v
y	Encoder.php	/^                $y = (($code & 2047) >> 6) | 192;$/;"	v
y	Encoder.php	/^                $y = (($code & 4032) >> 6) | 128;$/;"	v
z	Encoder.php	/^                    $z = (($code >> 12) & 15) | 224;$/;"	v
z	Encoder.php	/^                    $z = (($code >> 12) & 63) | 128;$/;"	v
zero	AttrDef/Integer.php	/^    protected $zero = true;$/;"	v
