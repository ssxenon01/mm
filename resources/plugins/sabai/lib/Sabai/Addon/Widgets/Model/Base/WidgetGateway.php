<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Widgets_Model_Base_WidgetGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'widgets_widget';
    }

    public function getFields()
    {
        return array('widget_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'widget_addon' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'widget_id' => SabaiFramework_Model::KEY_TYPE_INT, 'widget_created' => SabaiFramework_Model::KEY_TYPE_INT, 'widget_updated' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'widget_id';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %swidgets_widget WHERE widget_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %swidgets_widget WHERE widget_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$swidgets_widget widgets_widget WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['widget_created'] = time();
        $values['widget_updated'] = 0;
        return sprintf('INSERT INTO %swidgets_widget(widget_name, widget_addon, widget_created, widget_updated) VALUES(%s, %s, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['widget_name']), $this->_db->escapeString($values['widget_addon']), $values['widget_created'], $values['widget_updated']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['widget_updated'];
        $values['widget_updated'] = time();
        return sprintf('UPDATE %swidgets_widget SET widget_name = %s, widget_addon = %s, widget_updated = %d WHERE widget_id = %d AND widget_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['widget_name']), $this->_db->escapeString($values['widget_addon']), $values['widget_updated'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$swidgets_widget WHERE widget_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['widget_updated'] = 'widget_updated=' . time();
        return sprintf('UPDATE %swidgets_widget widgets_widget SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE widgets_widget FROM %1$swidgets_widget widgets_widget WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$swidgets_widget widgets_widget WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}