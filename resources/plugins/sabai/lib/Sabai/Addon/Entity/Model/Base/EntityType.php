<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Entity_Model_Base_EntityType extends SabaiFramework_Model_Entity
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('EntityType', $model);
        $this->_vars = array('id' => null, 'entitytype_name' => null, 'entitytype_addon' => null, 'entitytype_created' => 0, 'entitytype_updated' => 0);
    }

    public function __clone()
    {
        $this->_vars = array('id' => null, 'entitytype_name' => null, 'entitytype_created' => 0, 'entitytype_updated' => 0) + $this->_vars;
    }

    public function __toString()
    {
        return $this->__get('name');
    }

    public function initVars(array $arr)
    {
        parent::initVars($arr);
        $this->_vars['id'] = $this->_vars['entitytype_name'];
    }

    public function addBundle(Sabai_Addon_Entity_Model_Bundle $entity)
    {
        $entity->EntityType = $this;

        return $this;
    }

    public function removeBundle(Sabai_Addon_Entity_Model_Bundle $entity)
    {
        $this->removeBundleById($entity->id);

        return $this;
    }

    public function removeBundleById($id)
    {
        $this->_removeEntityById('bundle_id', 'Bundle', $id);

        return $this;
    }

    public function createBundle()
    {
        return $this->_createEntity('Bundle');
    }

    public function removeBundles()
    {
        $this->_removeEntities('Bundle');

        return $this;
    }

    public function addFieldConfig(Sabai_Addon_Entity_Model_FieldConfig $entity)
    {
        $entity->EntityType = $this;

        return $this;
    }

    public function removeFieldConfig(Sabai_Addon_Entity_Model_FieldConfig $entity)
    {
        $this->removeFieldConfigById($entity->id);

        return $this;
    }

    public function removeFieldConfigById($id)
    {
        $this->_removeEntityById('fieldconfig_id', 'FieldConfig', $id);

        return $this;
    }

    public function createFieldConfig()
    {
        return $this->_createEntity('FieldConfig');
    }

    public function removeFieldConfigs()
    {
        $this->_removeEntities('FieldConfig');

        return $this;
    }

    public function addFieldCache(Sabai_Addon_Entity_Model_FieldCache $entity)
    {
        $entity->EntityType = $this;

        return $this;
    }

    public function removeFieldCache(Sabai_Addon_Entity_Model_FieldCache $entity)
    {
        $this->removeFieldCacheById($entity->id);

        return $this;
    }

    public function removeFieldCacheById($id)
    {
        $this->_removeEntityById('fieldcache_id', 'FieldCache', $id);

        return $this;
    }

    public function createFieldCache()
    {
        return $this->_createEntity('FieldCache');
    }

    public function removeFieldCaches()
    {
        $this->_removeEntities('FieldCache');

        return $this;
    }

    public function __get($name)
    {
        if ($name === 'id')
            return $this->_vars['id'];
        elseif ($name === 'name')
            return $this->_vars['entitytype_name'];
        elseif ($name === 'addon')
            return $this->_vars['entitytype_addon'];
        elseif ($name === 'created')
            return $this->_vars['entitytype_created'];
        elseif ($name === 'updated')
            return $this->_vars['entitytype_updated'];
        elseif ($name === 'Bundles')
            return $this->_fetchEntities('Bundle', 'Bundles');
        elseif ($name === 'FieldConfigs')
            return $this->_fetchEntities('FieldConfig', 'FieldConfigs');
        elseif ($name === 'FieldCaches')
            return $this->_fetchEntities('FieldCache', 'FieldCaches');
        else
            return $this->fetchObject($name);
    }

    public function __set($name, $value)
    {
        if ($name === 'id')
            $this->_setVar('id', $value);
        elseif ($name === 'name')
            $this->_setVar('entitytype_name', $value);
        elseif ($name === 'addon')
            $this->_setVar('entitytype_addon', $value);
        elseif ($name === 'Bundles') {
            $this->removeBundles();
            foreach (array_keys($value) as $i) $this->addBundle($value[$i]);
        }
        elseif ($name === 'FieldConfigs') {
            $this->removeFieldConfigs();
            foreach (array_keys($value) as $i) $this->addFieldConfig($value[$i]);
        }
        elseif ($name === 'FieldCaches') {
            $this->removeFieldCaches();
            foreach (array_keys($value) as $i) $this->addFieldCache($value[$i]);
        }
        else
            $this->assignObject($name, $value);
    }

    protected function _initVar($name, $value)
    {
        if ($name === 'entitytype_created')
            $this->_vars['entitytype_created'] = (int)$value;
        elseif ($name === 'entitytype_updated')
            $this->_vars['entitytype_updated'] = (int)$value;
        else
            $this->_vars[$name] = $value;
    }
}

abstract class Sabai_Addon_Entity_Model_Base_EntityTypeRepository extends SabaiFramework_Model_EntityRepository
{
    public function __construct(SabaiFramework_Model $model)
    {
        parent::__construct('EntityType', $model);
    }

    protected function _getCollectionByRowset(SabaiFramework_DB_Rowset $rs)
    {
        return new Sabai_Addon_Entity_Model_Base_EntityTypesByRowset($rs, $this->_model->create('EntityType'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Sabai_Addon_Entity_Model_Base_EntityTypes($this->_model, $entities);
    }
}

class Sabai_Addon_Entity_Model_Base_EntityTypesByRowset extends SabaiFramework_Model_EntityCollection_Rowset
{
    public function __construct(SabaiFramework_DB_Rowset $rs, Sabai_Addon_Entity_Model_EntityType $emptyEntity, SabaiFramework_Model $model)
    {
        parent::__construct('EntityTypes', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(SabaiFramework_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Sabai_Addon_Entity_Model_Base_EntityTypes extends SabaiFramework_Model_EntityCollection_Array
{
    public function __construct(SabaiFramework_Model $model, array $entities = array())
    {
        parent::__construct($model, 'EntityTypes', $entities);
    }
}