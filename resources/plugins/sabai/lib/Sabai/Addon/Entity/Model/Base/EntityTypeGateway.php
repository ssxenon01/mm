<?php
/* This file has been auto-generated. Do not edit this file directly. */

abstract class Sabai_Addon_Entity_Model_Base_EntityTypeGateway extends SabaiFramework_Model_Gateway
{
    public function getName()
    {
        return 'entity_entitytype';
    }

    public function getFields()
    {
        return array('entitytype_name' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'entitytype_addon' => SabaiFramework_Model::KEY_TYPE_VARCHAR, 'entitytype_created' => SabaiFramework_Model::KEY_TYPE_INT, 'entitytype_updated' => SabaiFramework_Model::KEY_TYPE_INT);
    }

    protected function _getIdFieldName()
    {
        return 'entitytype_name';
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sentity_entitytype WHERE entitytype_name = %s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $this->_db->escapeString($id)
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sentity_entitytype WHERE entitytype_name IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(', ', array_map(array($this->_db, 'escapeString'), $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sentity_entitytype entity_entitytype WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery(&$values)
    {
        $values['entitytype_created'] = time();
        $values['entitytype_updated'] = 0;
        return sprintf('INSERT INTO %sentity_entitytype(entitytype_name, entitytype_addon, entitytype_created, entitytype_updated) VALUES(%s, %s, %d, %d)', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['entitytype_name']), $this->_db->escapeString($values['entitytype_addon']), $values['entitytype_created'], $values['entitytype_updated']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['entitytype_updated'];
        $values['entitytype_updated'] = time();
        return sprintf('UPDATE %sentity_entitytype SET entitytype_addon = %s, entitytype_updated = %d WHERE entitytype_name = %s AND entitytype_updated = %d', $this->_db->getResourcePrefix(), $this->_db->escapeString($values['entitytype_addon']), $values['entitytype_updated'], $this->_db->escapeString($id), $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sentity_entitytype WHERE entitytype_name = %2$s', $this->_db->getResourcePrefix(), $this->_db->escapeString($id));
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['entitytype_updated'] = 'entitytype_updated=' . time();
        return sprintf('UPDATE %sentity_entitytype entity_entitytype SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(', ', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE entity_entitytype, table1, table2, table3 FROM %1$sentity_entitytype entity_entitytype LEFT JOIN %1$sentity_fieldconfig table1 ON entity_entitytype.entitytype_name = table1.fieldconfig_entitytype_name LEFT JOIN %1$sentity_field table2 ON table1.fieldconfig_id = table2.field_fieldconfig_id LEFT JOIN %1$sentity_fieldcache table3 ON entity_entitytype.entitytype_name = table3.fieldcache_entitytype_name WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sentity_entitytype entity_entitytype WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _beforeDelete1($id, array $old)
    {
        $this->_db->exec(sprintf('DELETE table0, table1 FROM %1$sentity_fieldconfig table0 LEFT JOIN %1$sentity_field table1 ON table0.fieldconfig_id = table1.field_fieldconfig_id WHERE table0.fieldconfig_entitytype_name = %2$s', $this->_db->getResourcePrefix(), $this->_db->escapeString($id)));
    }

    protected function _beforeDelete2($id, array $old)
    {
        $this->_db->exec(sprintf('DELETE table0 FROM %1$sentity_fieldcache table0 WHERE table0.fieldcache_entitytype_name = %2$s', $this->_db->getResourcePrefix(), $this->_db->escapeString($id)));
    }

    protected function _beforeDelete($id, array $old)
    {
        $this->_beforeDelete1($id, $old);
        $this->_beforeDelete2($id, $old);
    }
}